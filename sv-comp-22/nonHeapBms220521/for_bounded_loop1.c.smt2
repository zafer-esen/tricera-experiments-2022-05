(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-fun inv_main13 (Int Int Int Int) Bool)
(declare-fun inv_main20 (Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int Int) Bool)
(assert (inv_main3 0 0 0))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main20 var3 var2 var1 var0) (<= 0 (+ (+ var0 (* (- 1) (+ var3 1))) (- 1))))) (inv_main13 (+ var3 1) (+ var2 (* (- 1) var1)) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main3 var3 var2 var1) (and (<= 0 (+ var0 (- 1))) (<= 0 (+ var0 (- 1)))))) (inv_main13 0 (+ var2 (* (- 1) var1)) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main20 var3 var2 var1 var0) (not (<= 0 (+ (+ var0 (* (- 1) (+ var3 1))) (- 1)))))) (inv_main9 (+ var3 1) var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main3 var3 var2 var1) (and (not (<= 0 (+ var0 (- 1)))) (<= 0 (+ var0 (- 1)))))) (inv_main9 0 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main13 var4 var3 var2 var1) (not (= var0 0)))) (inv_main20 var4 (+ var3 var0) var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main13 var3 var2 var1 var0) (not (= var2 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main20 var3 var2 var1 var0) (= var2 0)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main9 var3 var2 var1 var0) (not (= var2 0))))))
(check-sat)
