(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main17 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main20 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main21 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main23 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main32 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main36 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main37 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main38 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main41 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main42 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main43 (Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main45 (Int Addr Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (inv_main3 var6 var5 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main36 var6 var5 var4 var3 var2 var1 var0)) (inv_main37 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (or (not (and (inv_main30 var7 var6 var5 var4 var3 var2 var1) (= var0 0))) (inv_main32 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main20 var6 var5 var4 var3 var2 var1 var0)) (inv_main30 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main24 var6 var5 var4 var3 var2 var1 var0)) (inv_main25 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var3 (- 1)) (- 1))) (not (<= 0 (+ var2 (* (- 1) var0))))))) (inv_main41 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (or (not (and (inv_main30 var7 var6 var5 var4 var3 var2 var1) (and (<= 0 (+ (+ var4 (- 1)) (- 1))) (not (= var0 0))))) (inv_main41 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ (+ var2 (* (- 1) var0)) (- 1)))) (<= 0 (+ var2 (* (- 1) var0)))))) (inv_main20 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (or (not (and (inv_main25 var7 var6 var5 var4 var3 var2 var1) (not (= var0 0)))) (inv_main20 var7 var6 var5 var4 var3 var2 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (or (not (and (inv_main25 var7 var6 var5 var4 var3 var2 var1) (= var0 0))) (inv_main20 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main38 var6 var5 var4 var3 var2 var1 var0)) (inv_main17 var6 var5 var4 var3 var2 var0 (* 2 var0)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Int) (var15 Int)) (or (not (and (inv_main3 var14 var13 var12 var11 var10 var9 var8) (and (<= 0 (+ (+ var7 (- 1)) (- 1))) (and (<= 0 (+ (+ var6 (- 1)) (- 1))) (and (and (<= 0 (+ var5 (- 1))) (<= 0 (+ 1000000 (* (- 1) var5)))) (and (and (and (and (and (and (= var4 var14) (= var3 var13)) (= var7 var5)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var15)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var15)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var15)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var15))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1))))) (= var6 (+ var15 1)))) (= var2 var10)) (= var1 var9)) (= var0 var8))))))) (inv_main17 var4 var3 var7 (+ var6 (- 1)) var7 (+ var6 (- 1)) (* 2 (+ var6 (- 1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Int) (var15 Int)) (or (not (and (inv_main3 var14 var13 var12 var11 var10 var9 var8) (and (<= 0 (+ (+ (+ var7 (- 1)) (- 1)) (- 1))) (and (not (<= 0 (+ (+ var6 (- 1)) (- 1)))) (and (and (<= 0 (+ var5 (- 1))) (<= 0 (+ 1000000 (* (- 1) var5)))) (and (and (and (and (and (and (= var4 var14) (= var3 var13)) (= var7 var5)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var15)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var15)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var15)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var15))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1))))) (= var6 (+ var15 1)))) (= var2 var10)) (= var1 var9)) (= var0 var8))))))) (inv_main17 var4 var3 var7 var6 (+ var7 (- 1)) var6 (* 2 var6)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main43 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ var2 (- 1)) (- 1))))) (inv_main17 var6 var5 var4 (+ var3 (- 1)) var2 (+ var3 (- 1)) (* 2 (+ var3 (- 1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main45 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (+ var2 (- 1)) (- 1)) (- 1))))) (inv_main17 var6 var5 var4 var3 (+ var2 (- 1)) var3 (* 2 var3)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main23 var6 var5 var4 var3 var2 var1 var0)) (inv_main24 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main21 var6 var5 var4 var3 var2 var1 var0)) (inv_main23 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var2 (* (- 1) var0)) (- 1))) (<= 0 (+ var2 (* (- 1) var0)))))) (inv_main21 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ (+ var3 (- 1)) (- 1)))) (not (<= 0 (+ var2 (* (- 1) var0))))))) (inv_main42 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int)) (or (not (and (inv_main30 var7 var6 var5 var4 var3 var2 var1) (and (not (<= 0 (+ (+ var4 (- 1)) (- 1)))) (not (= var0 0))))) (inv_main42 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main41 var6 var5 var4 var3 var2 var1 var0)) (inv_main43 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main42 var6 var5 var4 var3 var2 var1 var0)) (inv_main45 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main37 var6 var5 var4 var3 var2 var1 var0)) (inv_main38 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (or (not (inv_main32 var6 var5 var4 var3 var2 var1 var0)) (inv_main36 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main21 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var0 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var0 1) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main25 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) (+ var0 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main20 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var0 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main32 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var1 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main37 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var0 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main41 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var3 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main43 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main42 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var2 (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int)) (not (and (inv_main45 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) var2))))))))
(check-sat)
