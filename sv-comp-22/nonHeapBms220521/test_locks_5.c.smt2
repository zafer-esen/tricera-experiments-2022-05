(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main18 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main34 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main40 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main43 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main46 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main52 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main58 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main64 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main75 (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main34 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var4 0)) (not (= var6 0))))) (inv_main40 var10 var9 var8 var7 var6 1 var4 1 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main34 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var4 0) (not (= var6 0))))) (inv_main40 var10 var9 var8 var7 var6 1 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main34 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var4 0)) (= var6 0)))) (inv_main40 var10 var9 var8 var7 var6 var5 var4 1 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main34 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var4 0) (= var6 0)))) (inv_main40 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main64 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var2 0))) (inv_main18 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main64 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var1 1) (not (= var2 0))))) (inv_main18 var10 var9 var8 var7 var6 var5 var4 var3 var2 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not inv_main2) (inv_main18 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main58 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var4 0))) (inv_main64 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main58 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var3 1) (not (= var4 0))))) (inv_main64 var10 var9 var8 var7 var6 var5 var4 0 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main43 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var10 0))) (inv_main46 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main43 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var9 1) (not (= var10 0))))) (inv_main46 var10 0 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main46 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var8 0))) (inv_main52 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main46 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var7 1) (not (= var8 0))))) (inv_main52 var10 var9 var8 0 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main52 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var6 0))) (inv_main58 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main52 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var5 1) (not (= var6 0))))) (inv_main58 var10 var9 var8 var7 var6 0 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main40 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var2 0)))) (inv_main43 var10 var9 var8 var7 var6 var5 var4 var3 var2 1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main40 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var2 0))) (inv_main43 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main43 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var9 1)) (not (= var10 0))))) (inv_main75 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main46 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var7 1)) (not (= var8 0))))) (inv_main75 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main52 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var5 1)) (not (= var6 0))))) (inv_main75 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main58 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var3 1)) (not (= var4 0))))) (inv_main75 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main64 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (= var1 1)) (not (= var2 0))))) (inv_main75 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (or (not (and (inv_main18 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (and (not (= var9 0)) (and (not (= var11 0)) (not (= var0 0)))))) (inv_main34 var11 1 var9 1 var7 0 var5 0 var3 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (or (not (and (inv_main18 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (and (= var9 0) (and (not (= var11 0)) (not (= var0 0)))))) (inv_main34 var11 1 var9 0 var7 0 var5 0 var3 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (or (not (and (inv_main18 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (and (not (= var9 0)) (and (= var11 0) (not (= var0 0)))))) (inv_main34 var11 0 var9 1 var7 0 var5 0 var3 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (or (not (and (inv_main18 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1) (and (= var9 0) (and (= var11 0) (not (= var0 0)))))) (inv_main34 var11 0 var9 0 var7 0 var5 0 var3 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (not (inv_main75 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(check-sat)
