(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main19 (Int Int Int Int) Bool)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main22 (Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int) Bool)
(declare-fun is_prime_0 (Int Int Int Int) Bool)
(declare-fun is_prime_1 (Int Int Int Int Int) Bool)
(declare-fun is_prime_10 (Int Int Int Int) Bool)
(declare-fun is_prime_11 (Int Int Int Int) Bool)
(declare-fun is_prime_12 (Int Int Int Int) Bool)
(declare-fun is_prime_13 (Int Int Int Int) Bool)
(declare-fun is_prime_14 (Int Int Int Int) Bool)
(declare-fun is_prime_15 (Int Int Int Int) Bool)
(declare-fun is_prime_2 (Int Int Int Int) Bool)
(declare-fun is_prime_3 (Int Int Int Int) Bool)
(declare-fun is_prime_4 (Int Int Int Int) Bool)
(declare-fun is_prime_5 (Int Int Int Int) Bool)
(declare-fun is_prime_6 (Int Int Int Int) Bool)
(declare-fun is_prime_7 (Int Int Int Int) Bool)
(declare-fun is_prime_8 (Int Int Int Int) Bool)
(declare-fun is_prime_9 (Int Int Int Int) Bool)
(declare-fun is_prime__post (Int Int Int) Bool)
(declare-fun is_prime__pre (Int Int) Bool)
(declare-fun mult0 (Int Int Int Int) Bool)
(declare-fun mult1 (Int Int Int Int Int) Bool)
(declare-fun mult10 (Int Int Int Int) Bool)
(declare-fun mult11 (Int Int Int Int) Bool)
(declare-fun mult3 (Int Int Int Int) Bool)
(declare-fun mult4 (Int Int Int Int) Bool)
(declare-fun mult5 (Int Int Int Int) Bool)
(declare-fun mult6 (Int Int Int Int) Bool)
(declare-fun mult7 (Int Int Int Int) Bool)
(declare-fun mult8 (Int Int Int Int) Bool)
(declare-fun mult9 (Int Int Int Int) Bool)
(declare-fun mult_post (Int Int Int) Bool)
(declare-fun mult_pre (Int Int) Bool)
(declare-fun multiple_of0 (Int Int Int Int) Bool)
(declare-fun multiple_of1 (Int Int Int Int Int) Bool)
(declare-fun multiple_of10 (Int Int Int Int) Bool)
(declare-fun multiple_of11 (Int Int Int Int) Bool)
(declare-fun multiple_of12 (Int Int Int Int) Bool)
(declare-fun multiple_of13 (Int Int Int Int) Bool)
(declare-fun multiple_of14 (Int Int Int Int) Bool)
(declare-fun multiple_of3 (Int Int Int Int) Bool)
(declare-fun multiple_of4 (Int Int Int Int) Bool)
(declare-fun multiple_of5 (Int Int Int Int) Bool)
(declare-fun multiple_of6 (Int Int Int Int) Bool)
(declare-fun multiple_of7 (Int Int Int Int) Bool)
(declare-fun multiple_of8 (Int Int Int Int) Bool)
(declare-fun multiple_of9 (Int Int Int Int) Bool)
(declare-fun multiple_of_post (Int Int Int) Bool)
(declare-fun multiple_of_pre (Int Int) Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (and (inv_main19 var9 var8 var7 var6) (mult_post var7 var6 var5)) (and (and (and (and (not (= var4 0)) (<= 0 (+ (+ var3 (- 1)) (- 1)))) (<= 0 (+ (+ var2 (- 1)) (- 1)))) (= var8 1)) (and (and (and (and (= var1 var9) (= var0 var8)) (= var3 var7)) (= var2 var6)) (or (and (= var5 var9) (= var4 1)) (and (not (= var5 var9)) (= var4 0))))))) (inv_main22 var1 var0 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (inv_main8 var4 var3) (is_prime__post var3 (+ var3 (- 1)) var2)) (and (and (not (<= 0 (+ (+ 1 (* (- 1) var1)) (- 1)))) (not (<= 0 (+ (+ var1 (- 46340)) (- 1))))) (and (not (<= 0 (+ (+ 1 (* (- 1) var0)) (- 1)))) (not (<= 0 (+ (+ var0 (- 46340)) (- 1)))))))) (inv_main19 var4 var2 var0 var1))))
(assert (forall ((var0 Int)) (or (not (and inv_main2 (and (not (<= 0 (+ (+ 1 (* (- 1) var0)) (- 1)))) (not (<= 0 (+ (+ var0 (- 46340)) (- 1))))))) (inv_main8 var0 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main8 var1 var0)) (is_prime__pre var0 (+ var0 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main19 var3 var2 var1 var0) (= var2 1))) (mult_pre var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (inv_main22 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (is_prime__pre var1 var0)) (is_prime_0 var1 var0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_0 var3 var2 var1 var0) (<= 0 (+ 1 (* (- 1) var3))))) (is_prime_4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_0 var3 var2 var1 var0) (not (<= 0 (+ 1 (* (- 1) var3)))))) (is_prime_5 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_4 var3 var2 var1 var0)) (is_prime_1 var3 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_5 var3 var2 var1 var0)) (is_prime_3 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_3 var3 var2 var1 var0) (= var3 2))) (is_prime_7 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_3 var3 var2 var1 var0) (not (= var3 2)))) (is_prime_8 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_7 var3 var2 var1 var0)) (is_prime_1 var3 var2 var1 var0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_8 var3 var2 var1 var0)) (is_prime_6 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_6 var3 var2 var1 var0) (<= 0 (+ (+ var3 (- 2)) (- 1))))) (is_prime_9 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_6 var3 var2 var1 var0) (not (<= 0 (+ (+ var3 (- 2)) (- 1)))))) (is_prime_10 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_9 var3 var2 var1 var0) (<= 0 (+ 1 (* (- 1) var2))))) (is_prime_11 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (is_prime_9 var3 var2 var1 var0) (not (<= 0 (+ 1 (* (- 1) var2)))))) (is_prime_12 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_11 var3 var2 var1 var0)) (is_prime_1 var3 var2 var1 var0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (is_prime_12 var4 var3 var2 var1) (multiple_of_post var4 var3 var0)) (= var0 0))) (is_prime_14 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (is_prime_12 var4 var3 var2 var1) (multiple_of_post var4 var3 var0)) (not (= var0 0)))) (is_prime_15 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_14 var3 var2 var1 var0)) (is_prime_1 var3 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_15 var3 var2 var1 var0)) (is_prime_13 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (is_prime_13 var4 var3 var2 var1) (is_prime__post var4 (+ var3 (- 1)) var0))) (is_prime_1 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_10 var3 var2 var1 var0)) (is_prime_2 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (is_prime_1 var4 var3 var2 var1 var0)) (is_prime__post var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (mult_pre var1 var0)) (mult0 var1 var0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (mult0 var3 var2 var1 var0) (<= 0 (+ (* (- 1) var2) (- 1))))) (mult4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (mult0 var3 var2 var1 var0) (not (<= 0 (+ (* (- 1) var2) (- 1)))))) (mult5 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (mult4 var4 var3 var2 var1) (mult_post var4 (* (- 1) var3) var0))) (mult1 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (mult5 var3 var2 var1 var0)) (mult3 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (mult3 var3 var2 var1 var0) (= var2 0))) (mult7 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (mult3 var3 var2 var1 var0) (not (= var2 0)))) (mult8 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (mult7 var3 var2 var1 var0)) (mult1 var3 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (mult8 var3 var2 var1 var0)) (mult6 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (mult6 var3 var2 var1 var0) (= var2 1))) (mult10 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (mult6 var3 var2 var1 var0) (not (= var2 1)))) (mult11 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (mult10 var3 var2 var1 var0)) (mult1 var3 var2 var1 var0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (mult11 var3 var2 var1 var0)) (mult9 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (mult9 var4 var3 var2 var1) (mult_post var4 (+ var3 (- 1)) var0))) (mult1 var4 var3 var2 var1 (+ var4 var0)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (mult1 var4 var3 var2 var1 var0)) (mult_post var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (multiple_of_pre var1 var0)) (multiple_of0 var1 var0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of0 var3 var2 var1 var0) (<= 0 (+ (* (- 1) var2) (- 1))))) (multiple_of4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of0 var3 var2 var1 var0) (not (<= 0 (+ (* (- 1) var2) (- 1)))))) (multiple_of5 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (multiple_of4 var4 var3 var2 var1) (multiple_of_post var4 (* (- 1) var3) var0))) (multiple_of1 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of5 var3 var2 var1 var0)) (multiple_of3 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of3 var3 var2 var1 var0) (<= 0 (+ (* (- 1) var3) (- 1))))) (multiple_of7 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of3 var3 var2 var1 var0) (not (<= 0 (+ (* (- 1) var3) (- 1)))))) (multiple_of8 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (multiple_of7 var4 var3 var2 var1) (multiple_of_post (* (- 1) var4) var3 var0))) (multiple_of1 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of8 var3 var2 var1 var0)) (multiple_of6 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of6 var3 var2 var1 var0) (= var2 0))) (multiple_of10 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of6 var3 var2 var1 var0) (not (= var2 0)))) (multiple_of11 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of10 var3 var2 var1 var0)) (multiple_of1 var3 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of11 var3 var2 var1 var0)) (multiple_of9 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of9 var3 var2 var1 var0) (= var3 0))) (multiple_of13 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (multiple_of9 var3 var2 var1 var0) (not (= var3 0)))) (multiple_of14 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of13 var3 var2 var1 var0)) (multiple_of1 var3 var2 var1 var0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of14 var3 var2 var1 var0)) (multiple_of12 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (multiple_of12 var4 var3 var2 var1) (multiple_of_post (+ var4 (* (- 1) var3)) var3 var0))) (multiple_of1 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (multiple_of1 var4 var3 var2 var1 var0)) (multiple_of_post var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_12 var3 var2 var1 var0)) (multiple_of_pre var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (is_prime_13 var3 var2 var1 var0)) (is_prime__pre var3 (+ var2 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (mult4 var3 var2 var1 var0)) (mult_pre var3 (* (- 1) var2)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (mult9 var3 var2 var1 var0)) (mult_pre var3 (+ var2 (- 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of4 var3 var2 var1 var0)) (multiple_of_pre var3 (* (- 1) var2)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of7 var3 var2 var1 var0)) (multiple_of_pre (* (- 1) var3) var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (multiple_of12 var3 var2 var1 var0)) (multiple_of_pre (+ var3 (* (- 1) var2)) var2))))
(check-sat)
