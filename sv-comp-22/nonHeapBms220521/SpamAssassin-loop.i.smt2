(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main19 (Int Int Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int Int Int) Bool)
(declare-fun inv_main23 (Int Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Int Int Int Int) Bool)
(declare-fun inv_main26 (Int Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int Int) Bool)
(declare-fun inv_main31 (Int Int Int Int Int) Bool)
(declare-fun inv_main32 (Int Int Int Int Int) Bool)
(declare-fun inv_main35 (Int Int Int Int Int) Bool)
(declare-fun inv_main36 (Int Int Int Int Int) Bool)
(declare-fun inv_main37 (Int Int Int Int Int) Bool)
(declare-fun inv_main38 (Int Int Int Int Int) Bool)
(declare-fun inv_main41 (Int Int Int Int Int) Bool)
(declare-fun inv_main42 (Int Int Int Int Int) Bool)
(declare-fun inv_main44 (Int Int Int Int Int) Bool)
(declare-fun inv_main45 (Int Int Int Int Int) Bool)
(declare-fun inv_main46 (Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (inv_main6 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (and (not (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1)))) (and (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))) (<= 0 (+ (+ var0 (* (- 1) var2)) (- 1))))))) (inv_main23 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main24 var5 var4 var3 var2 var1) (not (= var0 0)))) (inv_main23 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main37 var4 var3 var2 var1 var0)) (inv_main38 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1))) (and (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))) (<= 0 (+ (+ var0 (* (- 1) var2)) (- 1))))))) (inv_main22 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))) (or (not (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1)))) (not (<= 0 (+ (+ var0 (* (- 1) var2)) (- 1)))))))) (inv_main19 var4 var3 0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main42 var4 var3 var2 var1 var0)) (inv_main19 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main46 var4 var3 var2 var1 var0)) (inv_main19 var4 (+ var3 1) (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main6 var5 var4 var3 var2) (and (<= 0 (+ var1 (- 1))) (not (<= 0 (+ (* (- 1) var0) (- 1))))))) (inv_main19 var1 0 0 var0 (+ var0 (- 4))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main44 var4 var3 var2 var1 var0)) (inv_main45 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main24 var5 var4 var3 var2 var1) (= var0 0))) (inv_main26 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main35 var4 var3 var2 var1 var0)) (inv_main36 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main26 var4 var3 var2 var1 var0)) (inv_main30 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main45 var4 var3 var2 var1 var0)) (inv_main46 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main38 var4 var3 var2 var1 var0)) (inv_main41 var4 (+ var3 1) (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main32 var4 var3 var2 var1 var0)) (inv_main35 var4 (+ var3 1) (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main41 var4 var3 var2 var1 var0)) (inv_main42 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main31 var4 var3 var2 var1 var0)) (inv_main32 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main36 var4 var3 var2 var1 var0)) (inv_main37 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main23 var4 var3 var2 var1 var0)) (inv_main44 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main30 var4 var3 var2 var1 var0)) (inv_main31 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main22 var4 var3 var2 var1 var0)) (inv_main24 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main22 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main24 var4 var3 var2 var1 var0) (not (<= 0 var3))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main26 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main30 var4 var3 var2 var1 var0) (not (<= 0 var3))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main31 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main32 var4 var3 var2 var1 var0) (not (<= 0 var2))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main35 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main36 var4 var3 var2 var1 var0) (not (<= 0 var3))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main37 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main38 var4 var3 var2 var1 var0) (not (<= 0 var2))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main41 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main42 var4 var3 var2 var1 var0) (not (<= 0 var2))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main23 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main44 var4 var3 var2 var1 var0) (not (<= 0 var3))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main45 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var1 (* (- 1) var2)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main46 var4 var3 var2 var1 var0) (not (<= 0 var2))))))
(check-sat)
