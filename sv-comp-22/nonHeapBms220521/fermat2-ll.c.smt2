(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main24 (Int Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (inv_main4 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main25 var4 var3 var2 var1 var0) (= var0 0))) (inv_main24 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int)) (or (not (and (inv_main4 var23 var22 var21 var20 var19) (and (and (and (not (= var18 0)) (and (and (and (and (and (= var17 var16) (= var15 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var24)) (- 1))) (<= 0 (+ (+ 2 (* 1 var24)) (- 1)))) (or (not (<= 0 (+ var24 (- 1)))) (<= 0 (+ var16 (- 1))))) (or (not (<= 0 (+ (* (- 1) var24) (- 1)))) (<= 0 (+ (* (- 1) var16) (- 1))))) (= var16 (+ (* 2 var25) var24))) (= var24 1)) (= var18 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var26)) (- 1))) (<= 0 (+ (+ 2 (* 1 var26)) (- 1)))) (or (not (<= 0 (+ var26 (- 1)))) (<= 0 (+ var16 (- 1))))) (or (not (<= 0 (+ (* (- 1) var26) (- 1)))) (<= 0 (+ (* (- 1) var16) (- 1))))) (= var16 (+ (* 2 var27) var26)))) (= var26 1))) (= var18 0))))) (and (not (= var7 0)) (and (and (and (and (and (= var16 var6) (= var14 var5)) (= var12 var21)) (= var10 var20)) (= var8 var19)) (or (and (<= 0 (+ (+ var6 (* (- 1) (* (+ var5 (- 1)) (+ var5 (- 1))))) (- 1))) (= var7 1)) (and (not (<= 0 (+ (+ var6 (* (- 1) (* (+ var5 (- 1)) (+ var5 (- 1))))) (- 1)))) (= var7 0)))))) (and (and (and (and (= var4 var17) (= var3 var15)) (= var2 (+ (* 2 var15) 1))) (= var1 1)) (= var0 (+ (* var15 var15) (* (- 1) var17))))))) (inv_main25 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main25 var4 var3 var2 var1 var0) (and (<= 0 (+ var0 (- 1))) (not (= var0 0))))) (inv_main25 var4 var3 var2 (+ var1 2) (+ var0 (* (- 1) var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main25 var4 var3 var2 var1 var0) (and (not (<= 0 (+ var0 (- 1)))) (not (= var0 0))))) (inv_main25 var4 var3 (+ var2 2) var1 (+ var0 var2)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main25 var4 var3 var2 var1 var0) (not (= (* 4 (+ var4 var0)) (+ (+ (+ (* var2 var2) (* (- 1) (* var1 var1))) (* (- 2) var2)) (* 2 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main24 var4 var3 var2 var1 var0) (not (= (* 4 var4) (+ (+ (+ (* var2 var2) (* (- 1) (* var1 var1))) (* (- 2) var2)) (* 2 var1))))))))
(check-sat)
