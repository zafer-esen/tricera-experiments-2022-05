(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main10 (Int Int Int Int) Bool)
(declare-fun inv_main11 (Int Int Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (inv_main4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main4 var4 var3 var2 var1)) (inv_main11 var0 0 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (inv_main11 var7 var6 var5 var4) (and (<= 0 (+ (+ var7 (* (- 1) var4)) (- 1))) (and (and (and (= var3 var7) (= var2 (+ var6 1))) (= var1 (+ (* (* (+ var6 1) (+ var6 1)) (+ var6 1)) var5))) (= var0 (+ var4 1)))))) (inv_main11 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main11 var3 var2 var1 var0) (not (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1)))))) (inv_main10 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (inv_main10 var3 var2 var1 var0)) (inv_main18 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main11 var3 var2 var1 var0) (not (= (+ (+ (+ (* 4 var1) (* (- 1) (* (* (* var2 var2) var2) var2))) (* (- 1) (* (* (* 2 var2) var2) var2))) (* (- 1) (* var2 var2))) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main10 var3 var2 var1 var0) (not (= (+ (* var3 var2) (* (- 1) (* var2 var2))) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main18 var3 var2 var1 var0) (not (= (+ (+ (+ (* 4 var1) (* (- 1) (* (* (* var2 var2) var2) var2))) (* (- 1) (* (* (* 2 var2) var2) var2))) (* (- 1) (* var2 var2))) 0))))))
(check-sat)
