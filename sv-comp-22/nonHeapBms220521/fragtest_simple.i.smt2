(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main16 (Int Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main6 (Int Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (inv_main6 var3 var2 var1 0 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var0 1) (* (- 1) var1)))))) (inv_main25 (+ var5 (- 1)) var4 var3 (+ var2 (- 1)) var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main16 var5 var4 var3 var2 var1) (or (= var0 0) (not (<= 0 (+ 1000000 (* (- 1) var5))))))) (inv_main25 var5 var4 var3 var2 var5 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (inv_main6 var5 var4 var3 var2 var1)) (inv_main8 0 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var5 var4 var3 var2 var1) (and (not (= var0 0)) (<= 0 (+ 1000000 (* (- 1) var5)))))) (inv_main8 (+ var5 1) var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main16 var5 var4 var3 var2 var1) (and (not (= var0 0)) (<= 0 (+ 1000000 (* (- 1) var5)))))) (inv_main16 (+ var5 1) var4 var5 (+ var2 1) var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var5 var4 var3 var2 var1) (and (<= 0 (+ (+ var5 (* (- 1) var4)) (- 1))) (or (= var0 0) (not (<= 0 (+ 1000000 (* (- 1) var5)))))))) (inv_main16 0 var5 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var5 var4 var3 var2 var1) (and (not (<= 0 (+ (+ var5 (* (- 1) var4)) (- 1)))) (or (= var0 0) (not (<= 0 (+ 1000000 (* (- 1) var5)))))))) (inv_main16 0 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (not (<= 0 var2))))))
(check-sat)
