(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main14 (Int Int Int Int Int) Bool)
(declare-fun inv_main2 (Int) Bool)
(declare-fun inv_main21 (Int Int Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int Int Int) Bool)
(assert (inv_main2 0))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main21 var4 var3 var2 var1 var0)) (inv_main9 var4 var3 var2 0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main9 var4 var3 var2 var1 var0) (and (= var1 var4) (<= 0 (+ (+ 200000 (* (- 1) var1)) (- 1)))))) (inv_main9 var4 var3 var2 (+ var1 1) 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main9 var4 var3 var2 var1 var0) (and (not (= var1 var4)) (<= 0 (+ (+ 200000 (* (- 1) var1)) (- 1)))))) (inv_main9 var4 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main2 var1)) (inv_main9 var0 0 0 0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main9 var10 var9 var8 var7 var6) (and (and (and (not (= var5 0)) (= var6 0)) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (or (and (= var7 (+ var10 1)) (= var5 1)) (and (not (= var7 (+ var10 1))) (= var5 0))))) (not (<= 0 (+ (+ 200000 (* (- 1) var7)) (- 1))))))) (inv_main14 var4 (+ var3 3) (+ var2 3) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main9 var4 var3 var2 var1 var0) (and (not (= var0 0)) (not (<= 0 (+ (+ 200000 (* (- 1) var1)) (- 1))))))) (inv_main14 var4 (+ var3 2) (+ var2 2) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main9 var10 var9 var8 var7 var6) (and (and (and (= var5 0) (= var6 0)) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (or (and (= var7 (+ var10 1)) (= var5 1)) (and (not (= var7 (+ var10 1))) (= var5 0))))) (not (<= 0 (+ (+ 200000 (* (- 1) var7)) (- 1))))))) (inv_main14 var4 (+ var3 2) (+ var2 2) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main14 var10 var9 var8 var7 var6) (and (and (not (= var5 0)) (= var4 0)) (and (and (and (and (and (= var3 var10) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var4 var6)) (or (and (= var7 var10) (= var5 1)) (and (not (= var7 var10)) (= var5 0))))))) (inv_main21 var3 (+ var2 1) var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int)) (or (not (and (inv_main14 var10 var9 var8 var7 var6) (and (or (= var5 0) (not (= var4 0))) (and (and (and (and (and (= var3 var10) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var4 var6)) (or (and (= var7 var10) (= var5 1)) (and (not (= var7 var10)) (= var5 0))))))) (inv_main21 var3 var2 var1 var0 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main21 var4 var3 var2 var1 var0) (or (not (= var3 var2)) (not (= var1 200000)))))))
(check-sat)
