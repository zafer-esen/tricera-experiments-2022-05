(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main11 (Int Int) Bool)
(declare-fun inv_main12 (Int Int) Bool)
(declare-fun inv_main15 (Int Int) Bool)
(declare-fun inv_main17 (Int Int) Bool)
(declare-fun inv_main19 (Int Int) Bool)
(declare-fun inv_main23 (Int Int) Bool)
(declare-fun inv_main25 (Int Int) Bool)
(declare-fun inv_main27 (Int Int) Bool)
(declare-fun inv_main28 (Int Int) Bool)
(declare-fun inv_main31 (Int Int) Bool)
(declare-fun inv_main33 (Int Int) Bool)
(declare-fun inv_main35 (Int Int) Bool)
(declare-fun inv_main39 (Int Int) Bool)
(declare-fun inv_main4 (Int Int) Bool)
(declare-fun inv_main42 (Int Int) Bool)
(declare-fun inv_main45 (Int Int) Bool)
(declare-fun inv_main47 (Int Int) Bool)
(declare-fun inv_main52 (Int Int) Bool)
(declare-fun inv_main54 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int)) (inv_main4 var1 var0)))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main25 var1 var0)) (inv_main27 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main52 var1 var0)) (inv_main27 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main11 var2 var1) (and (= var0 0) (not (= var1 var2))))) (inv_main19 var2 var1))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main39 var1 var0)) (inv_main42 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main42 var1 var0) (= (+ var0 1) var1))) (inv_main45 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main45 var1 var0)) (inv_main47 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main19 var1 var0)) (inv_main23 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main15 var1 var0)) (inv_main17 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main12 var1 var0)) (inv_main25 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main11 var2 var1) (and (not (= var0 0)) (not (= var1 var2))))) (inv_main12 var2 var1))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main28 var1 var0)) (inv_main54 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main31 var1 var0)) (inv_main33 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main11 var1 var0) (= var0 var1))) (inv_main15 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main27 var3 var2) (and (not (= var1 0)) (and (not (= var0 0)) (not (= var2 var3)))))) (inv_main39 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main27 var3 var2) (and (= var1 0) (and (not (= var0 0)) (not (= var2 var3)))))) (inv_main35 var3 var2))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main42 var1 var0) (not (= (+ var0 1) var1)))) (inv_main35 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main27 var3 var2) (and (= var1 0) (and (= var0 0) (not (= var2 var3)))))) (inv_main35 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var2 var1) (<= 0 (+ var0 (- 1))))) (inv_main11 (+ var0 (- 1)) 0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main23 var1 var0)) (inv_main11 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main27 var1 var0) (= var0 var1))) (inv_main31 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main27 var3 var2) (and (not (= var1 0)) (and (= var0 0) (not (= var2 var3)))))) (inv_main28 var3 var2))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main35 var1 var0)) (inv_main52 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main15 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main17 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main19 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main23 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main12 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main25 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main31 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main33 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main39 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main42 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main45 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main47 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main35 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main52 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main28 var1 var0) (not (<= 0 var0))))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main54 var1 var0) (not (<= 0 (+ var1 (* (- 1) var0))))))))
(check-sat)
