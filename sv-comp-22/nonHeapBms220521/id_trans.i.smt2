(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-fun inv_main16 (Int Int Int Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int Int) Bool)
(declare-fun inv_main20 (Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (inv_main4 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main16 var4 var3 var2 var1 var0)) (inv_main18 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main19 var4 var3 var2 var1 var0)) (inv_main20 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main18 var4 var3 var2 var1 var0)) (inv_main19 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main4 var7 var6 var5 var4 var3) (and (and (and (and (and (and (<= 0 (+ (+ 8 (* (- 1) (+ var2 (* (- 8) var8)))) (- 1))) (<= 0 (+ (+ 8 (* 1 (+ var2 (* (- 8) var8)))) (- 1)))) (or (not (<= 0 (+ (+ var2 (* (- 8) var8)) (- 1)))) (<= 0 (+ var2 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 8) var8))) (- 1)))) (<= 0 (+ (* (- 1) var2) (- 1))))) (<= 0 (+ var8 (- 1)))) (<= 0 (+ var1 (- 1)))) (and (and (and (and (<= 0 (+ (+ 32 (* (- 1) (+ var2 (* (- 32) var9)))) (- 1))) (<= 0 (+ (+ 32 (* 1 (+ var2 (* (- 32) var9)))) (- 1)))) (or (not (<= 0 (+ (+ var2 (* (- 32) var9)) (- 1)))) (<= 0 (+ var2 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var2 (* (- 32) var9))) (- 1)))) (<= 0 (+ (* (- 1) var2) (- 1))))) (= var0 var9))))) (inv_main16 var2 var1 var0 0 var3))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main20 var4 var3 var2 var1 var0) (and (and (and (and (and (<= 0 (+ (+ 8 (* (- 1) (+ var4 (* (- 8) var5)))) (- 1))) (<= 0 (+ (+ 8 (* 1 (+ var4 (* (- 8) var5)))) (- 1)))) (or (not (<= 0 (+ (+ var4 (* (- 8) var5)) (- 1)))) (<= 0 (+ var4 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var4 (* (- 8) var5))) (- 1)))) (<= 0 (+ (* (- 1) var4) (- 1))))) (<= 0 (+ (+ var5 (* (- 1) (+ var1 1))) (- 1)))) (<= 0 (+ (+ var3 (* (- 1) (+ var1 1))) (- 1)))))) (inv_main16 var4 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main16 var4 var3 var2 var1 var0) (not (<= 0 var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main18 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var3 (* (- 1) var1)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main19 var4 var3 var2 var1 var0) (not (or (not (and (and (and (<= 0 (+ (+ 4 (* (- 1) (+ var1 (* (- 4) var5)))) (- 1))) (<= 0 (+ (+ 4 (* 1 (+ var1 (* (- 4) var5)))) (- 1)))) (or (not (<= 0 (+ (+ var1 (* (- 4) var5)) (- 1)))) (<= 0 (+ var1 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var1 (* (- 4) var5))) (- 1)))) (<= 0 (+ (* (- 1) var1) (- 1)))))) (<= 0 var5)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main20 var4 var3 var2 var1 var0) (not (or (not (and (and (and (<= 0 (+ (+ 4 (* (- 1) (+ var1 (* (- 4) var5)))) (- 1))) (<= 0 (+ (+ 4 (* 1 (+ var1 (* (- 4) var5)))) (- 1)))) (or (not (<= 0 (+ (+ var1 (* (- 4) var5)) (- 1)))) (<= 0 (+ var1 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var1 (* (- 4) var5))) (- 1)))) (<= 0 (+ (* (- 1) var1) (- 1)))))) (<= 0 (+ (+ var2 (* (- 1) var5)) (- 1)))))))))
(check-sat)
