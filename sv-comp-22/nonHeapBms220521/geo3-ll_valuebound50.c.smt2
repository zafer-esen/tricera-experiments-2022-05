(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main33 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main34 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (inv_main4 var6 var5 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Int) (var31 Int) (var32 Int) (var33 Int) (var34 Int) (var35 Int) (var36 Int) (var37 Int) (var38 Int) (var39 Int) (var40 Int)) (or (not (and (inv_main4 var40 var39 var38 var37 var36 var35 var34) (and (and (and (not (= var33 0)) (and (and (and (and (and (and (and (= var32 var31) (= var30 var29)) (= var28 var27)) (= var26 var25)) (= var24 var23)) (= var22 var21)) (= var20 var19)) (or (and (and (<= 0 var27) (<= 0 (+ 50 (* (- 1) var27)))) (= var33 1)) (and (not (and (<= 0 var27) (<= 0 (+ 50 (* (- 1) var27))))) (= var33 0))))) (and (and (not (= var18 0)) (and (and (and (and (and (and (and (= var31 var17) (= var29 var16)) (= var15 var14)) (= var25 var13)) (= var23 var12)) (= var21 var11)) (= var19 var10)) (or (and (and (<= 0 var16) (<= 0 (+ 50 (* (- 1) var16)))) (= var18 1)) (and (not (and (<= 0 var16) (<= 0 (+ 50 (* (- 1) var16))))) (= var18 0))))) (and (not (= var9 0)) (and (and (and (and (and (and (and (= var17 var8) (= var7 var39)) (= var14 var38)) (= var13 var37)) (= var12 var36)) (= var11 var35)) (= var10 var34)) (or (and (and (<= 0 var8) (<= 0 (+ 50 (* (- 1) var8)))) (= var9 1)) (and (not (and (<= 0 var8) (<= 0 (+ 50 (* (- 1) var8))))) (= var9 0))))))) (and (and (and (and (and (and (= var6 var32) (= var5 var30)) (= var4 var28)) (= var3 var30)) (= var2 1)) (= var1 1)) (= var0 (* var30 var32)))))) (inv_main34 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int)) (or (not (and (inv_main34 var20 var19 var18 var17 var16 var15 var14) (and (and (<= 0 (+ (+ var18 (* (- 1) var15)) (- 1))) (and (and (and (and (and (and (= var13 var20) (= var12 var19)) (= var11 var18)) (= var10 (+ (* var17 var20) var19))) (= var9 var16)) (= var8 (+ var15 1))) (= var7 var14))) (and (and (and (and (and (and (= var6 var13) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 (* var9 var13))) (= var1 var8)) (= var0 var7))))) (inv_main34 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var4 (* (- 1) var1)) (- 1)))))) (inv_main33 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (* var6 var3) (* (- 1) var3)) var5) (* (- 1) (* var0 var2))) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (* var6 var3) (* (- 1) var3)) var5) (* (- 1) (* var0 var2))) 0))))))
(check-sat)
