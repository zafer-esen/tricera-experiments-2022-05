(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main26 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main30 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (inv_main3 0 var5 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main3 var9 var8 var7 var6 var5 var4 var3) (and (<= 0 (+ var2 (- 1))) (and (<= 0 (+ (+ var1 var0) (* (- 3) var2))) (and (and (<= 0 (+ (+ var0 1000000) (- 1))) (<= 0 (+ (+ 1000000 (* (- 1) var0)) (- 1)))) (and (and (<= 0 (+ (+ var1 1000000) (- 1))) (<= 0 (+ (+ 1000000 (* (- 1) var1)) (- 1)))) (and (<= 0 (+ (+ var2 1000000) (- 1))) (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))))))))) (inv_main26 var9 0 0 var6 var2 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main26 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var2 (* (- 1) (+ var5 1))) (- 1))) (not (<= 0 (+ (+ (* 3 var5) (* (- 1) var4)) (- 1))))))) (inv_main26 var6 (+ var5 1) (* 2 (+ var5 1)) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main26 var6 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (<= 0 (+ (+ (* 3 var5) (* (- 1) var4)) (- 1)))))) (inv_main26 var6 var5 (+ var4 1) var5 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1)))))) (inv_main26 var6 var5 (+ var4 1) (+ var3 1) var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main26 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1))) (<= 0 (+ (+ (* 3 var5) (* (- 1) var4)) (- 1)))))) (inv_main30 var6 var5 var4 var5 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1))))) (inv_main30 var6 var5 var4 (+ var3 1) var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (* 2 var2) (* (- 1) (+ var3 (* (- 1) var5))))))))))
(check-sat)
