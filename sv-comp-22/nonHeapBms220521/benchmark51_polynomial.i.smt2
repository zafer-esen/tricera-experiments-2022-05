(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main5 (Int) Bool)
(declare-fun inv_main8 (Int) Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main5 var1) (and (= (+ var1 1) 0) (and (<= 0 (+ (+ var1 (- 50)) (- 1))) (not (= var0 0)))))) (inv_main5 (+ (+ var1 1) 1)))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main5 var1) (and (not (= (+ var1 1) 0)) (and (<= 0 (+ (+ var1 (- 50)) (- 1))) (not (= var0 0)))))) (inv_main5 (+ (+ var1 1) (- 1))))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main5 var1) (and (= var1 0) (and (not (<= 0 (+ (+ var1 (- 50)) (- 1)))) (not (= var0 0)))))) (inv_main5 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main5 var1) (and (not (= var1 0)) (and (not (<= 0 (+ (+ var1 (- 50)) (- 1)))) (not (= var0 0)))))) (inv_main5 (+ var1 (- 1))))))
(assert (forall ((var0 Int)) (or (not (and inv_main2 (and (<= 0 var0) (<= 0 (+ 50 (* (- 1) var0)))))) (inv_main5 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (inv_main5 var1) (= var0 0))) (inv_main8 var1))))
(assert (forall ((var0 Int)) (not (and (inv_main8 var0) (or (not (<= 0 var0)) (not (<= 0 (+ 50 (* (- 1) var0)))))))))
(check-sat)
