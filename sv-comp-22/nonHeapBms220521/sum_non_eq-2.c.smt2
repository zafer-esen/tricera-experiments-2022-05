(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main6 (Int Int) Bool)
(declare-fun inv_main8 (Int Int Int) Bool)
(declare-fun sum0 (Int Int Int Int) Bool)
(declare-fun sum1 (Int Int Int Int Int) Bool)
(declare-fun sum3 (Int Int Int Int) Bool)
(declare-fun sum4 (Int Int Int Int) Bool)
(declare-fun sum_post (Int Int Int) Bool)
(declare-fun sum_pre (Int Int) Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int)) (or (not (and inv_main2 (and (<= 0 var1) (<= 0 var0)))) (inv_main6 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (and (inv_main6 var2 var1) (sum_post var2 var1 var0)) (not (= var0 (+ var2 var1))))) (inv_main8 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main6 var1 var0)) (sum_pre var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (not (inv_main8 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (sum_pre var1 var0)) (sum0 var1 var0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (sum0 var3 var2 var1 var0) (= var3 0))) (sum3 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (sum0 var3 var2 var1 var0) (not (= var3 0)))) (sum4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (sum3 var3 var2 var1 var0)) (sum1 var3 var2 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (sum4 var4 var3 var2 var1) (sum_post (+ var4 (- 1)) (+ var3 1) var0))) (sum1 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (sum1 var4 var3 var2 var1 var0)) (sum_post var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (sum4 var3 var2 var1 var0)) (sum_pre (+ var3 (- 1)) (+ var2 1)))))
(check-sat)
