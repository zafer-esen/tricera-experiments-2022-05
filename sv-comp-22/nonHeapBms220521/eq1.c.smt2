(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main8 (Int Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int Int) Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main8 var4 var3 var2 var1) (and (<= 0 var0) (= var0 0)))) (inv_main9 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var5 var4 var3 var2) (and (and (<= 0 var1) (not (= var1 0))) (and (<= 0 var0) (not (= var0 0)))))) (inv_main8 (+ var5 1) (+ var4 1) var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main8 var5 var4 var3 var2) (and (and (<= 0 var1) (= var1 0)) (and (<= 0 var0) (not (= var0 0)))))) (inv_main8 var5 var4 (+ var3 (- 1)) (+ var2 (- 1))))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and inv_main2 (and (<= 0 var1) (<= 0 var0)))) (inv_main8 var0 var0 var1 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main9 var3 var2 var1 var0) (or (not (= var3 var2)) (not (= var1 var0)))))))
(check-sat)
