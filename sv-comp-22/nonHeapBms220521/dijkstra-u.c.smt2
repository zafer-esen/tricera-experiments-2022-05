(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main15 (Int Int Int Int Int) Bool)
(declare-fun inv_main21 (Int Int Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int Int Int) Bool)
(declare-fun inv_main23 (Int Int Int Int Int) Bool)
(declare-fun inv_main24 (Int Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int Int) Bool)
(declare-fun inv_main26 (Int Int Int Int Int) Bool)
(declare-fun inv_main27 (Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int Int) Bool)
(declare-fun inv_main38 (Int Int Int Int Int) Bool)
(declare-fun inv_main39 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (and (<= 0 var4) (<= 0 var3)) (<= 0 var2)) (<= 0 var1)) (<= 0 var0))) (inv_main3 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main15 var4 var3 var2 var1 var0) (not (<= 0 (+ var4 (* (- 1) var2)))))) (inv_main22 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int)) (or (not (and (inv_main27 var14 var13 var12 var11 var10) (and (and (not (<= 0 (+ var9 (* (- 1) var8)))) (and (not (= var12 1)) (and (and (and (and (= var7 var14) (= var6 var13)) (and (and (and (and (<= 0 (+ (+ 4 (* (- 1) (+ var12 (* (- 4) var15)))) (- 1))) (<= 0 (+ (+ 4 (* 1 (+ var12 (* (- 4) var15)))) (- 1)))) (or (not (<= 0 (+ (+ var12 (* (- 4) var15)) (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var12 (* (- 4) var15))) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var5 var15))) (= var4 var11)) (= var3 var10)))) (and (and (and (and (= var2 var7) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var16)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var16)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var16)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var16))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (= var1 var16))) (= var0 var5)) (= var9 var4)) (= var8 (+ var6 var5)))))) (inv_main22 var2 var1 var0 var9 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int)) (or (not (and (inv_main27 var14 var13 var12 var11 var10) (and (and (<= 0 (+ var9 (* (- 1) var8))) (and (not (= var12 1)) (and (and (and (and (= var7 var14) (= var6 var13)) (and (and (and (and (<= 0 (+ (+ 4 (* (- 1) (+ var12 (* (- 4) var15)))) (- 1))) (<= 0 (+ (+ 4 (* 1 (+ var12 (* (- 4) var15)))) (- 1)))) (or (not (<= 0 (+ (+ var12 (* (- 4) var15)) (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var12 (* (- 4) var15))) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var5 var15))) (= var4 var11)) (= var3 var10)))) (and (and (and (and (= var2 var7) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var16)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var16)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var16)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var16))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (= var1 var16))) (= var0 var5)) (= var9 var4)) (= var8 (+ var6 var5)))))) (inv_main22 var2 (+ var1 var0) var0 (+ var9 (* (- 1) var8)) var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main25 var4 var3 var2 var1 var0)) (inv_main26 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main23 var4 var3 var2 var1 var0)) (inv_main24 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main38 var4 var3 var2 var1 var0)) (inv_main39 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main21 var4 var3 var2 var1 var0)) (inv_main38 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main24 var4 var3 var2 var1 var0)) (inv_main25 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main3 var11 var10 var9 var8 var7) (and (and (not (= var6 0)) (and (and (and (and (and (= var5 var4) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (or (and (and (and (and (<= 0 (+ (+ 4 (* (- 1) (+ 4294967295 (* (- 4) var12)))) (- 1))) (<= 0 (+ (+ 4 (* 1 (+ 4294967295 (* (- 4) var12)))) (- 1)))) (not (<= 0 (+ (* (- 1) (+ 4294967295 (* (- 4) var12))) (- 1))))) (<= 0 (+ (+ var12 (* (- 1) var4)) (- 1)))) (= var6 1)) (and (not (or (not (and (and (<= 0 (+ (+ 4 (* (- 1) (+ 4294967295 (* (- 4) var13)))) (- 1))) (<= 0 (+ (+ 4 (* 1 (+ 4294967295 (* (- 4) var13)))) (- 1)))) (not (<= 0 (+ (* (- 1) (+ 4294967295 (* (- 4) var13))) (- 1)))))) (<= 0 (+ (+ var13 (* (- 1) var4)) (- 1))))) (= var6 0))))) (<= 0 var4)))) (inv_main15 var5 0 1 var5 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main15 var4 var3 var2 var1 var0) (<= 0 (+ var4 (* (- 1) var2))))) (inv_main15 var4 var3 (* 4 var2) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main26 var4 var3 var2 var1 var0)) (inv_main27 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main22 var4 var3 var2 var1 var0)) (inv_main23 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main27 var4 var3 var2 var1 var0) (= var2 1))) (inv_main21 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main22 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (+ (* 2 var3) var2) (* (- 1) var1)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main23 var4 var3 var2 var1 var0) (not (= (+ (* var3 var3) (* var1 var2)) (* var4 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main24 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (+ (* (* var0 var0) var0) (* (- 1) (* (* (* 12 var0) var4) var2))) (* (* (* 16 var4) var3) var2)) (* (- 1) (* (* var0 var2) var2))) (* (- 1) (* (* (* 4 var3) var2) var2))) (* (* (* 12 var0) var2) var1)) (* (- 1) (* (* (* 16 var3) var2) var1))) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main25 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (+ (+ (+ (* (* var0 var0) var4) (* (- 1) (* (* (* 4 var0) var4) var3))) (* (* 4 (* var4 var4)) var2)) (* (- 1) (* (* var4 var2) var2))) (* (- 1) (* (* var0 var0) var1))) (* (* (* 4 var0) var3) var1)) (* (- 1) (* (* (* 8 var4) var2) var1))) (* (* var2 var2) var1)) (* (* (* 4 var2) var1) var1)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main26 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (* (* var0 var0) var3) (* (- 1) (* (* (* 4 var0) var4) var2))) (* (* (* 4 var4) var3) var2)) (* (- 1) (* (* var3 var2) var2))) (* (* (* 4 var0) var2) var1)) (* (- 1) (* (* (* 4 var3) var2) var1))) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main27 var4 var3 var2 var1 var0) (not (= (+ (+ (* var3 var3) (* (- 1) (* var4 var2))) (* var2 var1)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main21 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (+ (* (* var0 var0) var0) (* (- 1) (* (* 12 var0) var4))) (* (* 16 var4) var3)) (* (* 12 var0) var1)) (* (- 1) (* (* 16 var3) var1))) (* (- 1) var0)) (* (- 4) var3)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main38 var4 var3 var2 var1 var0) (not (= (+ (+ (* var3 var3) (* (- 1) var4)) var1) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main39 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (* (* var0 var0) var3) (* (- 1) (* (* 4 var0) var4))) (* (* 4 var4) var3)) (* (* 4 var0) var1)) (* (- 1) (* (* 4 var3) var1))) (* (- 1) var3)) 0))))))
(check-sat)
