(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main21 (Int Int Int Int Int) Bool)
(declare-fun inv_main22 (Int Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int Int) Bool)
(declare-fun inv_main28 (Int Int Int Int Int) Bool)
(declare-fun inv_main3 (Int) Bool)
(declare-fun inv_main31 (Int Int Int Int Int) Bool)
(declare-fun inv_main32 (Int Int Int Int Int) Bool)
(declare-fun inv_main33 (Int Int Int Int Int) Bool)
(declare-fun inv_main35 (Int Int Int Int Int) Bool)
(declare-fun inv_main36 (Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (inv_main3 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main28 var4 var3 var2 var1 var0)) (inv_main31 (+ var4 1) var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main33 var4 var3 var2 var1 var0)) (inv_main35 var4 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main22 var4 var3 var2 var1 var0)) (inv_main33 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main35 var4 var3 var2 var1 var0)) (inv_main36 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main25 var4 var3 var2 var1 var0)) (inv_main28 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main21 var5 var4 var3 var2 var1) (and (not (= var2 var1)) (not (= var0 0))))) (inv_main25 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main21 var5 var4 var3 var2 var1) (= var0 0))) (inv_main22 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main21 var5 var4 var3 var2 var1) (and (= var2 var1) (not (= var0 0))))) (inv_main22 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main32 var4 var3 var2 var1 var0)) (inv_main21 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main3 var2) (and (<= 0 (+ (+ var1 (* (- 1) var0)) (- 1))) (and (<= 0 (+ var1 (- 1))) (<= 0 (+ (+ var0 (- 1)) (- 1))))))) (inv_main21 0 var1 var0 0 (+ var0 (- 2))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (inv_main31 var4 var3 var2 var1 var0)) (inv_main32 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main25 var4 var3 var2 var1 var0) (not (<= 0 var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main28 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main31 var4 var3 var2 var1 var0) (not (<= 0 var4))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main32 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var3 (* (- 1) var4)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main22 var4 var3 var2 var1 var0) (not (<= 0 var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main33 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main35 var4 var3 var2 var1 var0) (not (<= 0 var1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main36 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1))))))))
(check-sat)
