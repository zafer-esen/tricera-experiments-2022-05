(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main11 (Int Int) Bool)
(declare-fun inv_main16 (Int Int) Bool)
(declare-fun inv_main3 (Int Int) Bool)
(declare-fun inv_main4 (Int Int) Bool)
(declare-fun inv_main9 (Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int)) (inv_main3 var1 var0)))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main3 var1 var0)) (inv_main4 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var2 var1) (and (not (= var0 0)) (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))))) (inv_main4 (+ var2 1) var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var2 var1) (and (not (<= 0 (+ var2 (- 100)))) (or (= var0 0) (not (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))))))) (inv_main11 var2 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main11 var2 var1) (and (not (= var0 0)) (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))))) (inv_main11 (+ var2 1) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (inv_main9 var1 var0)) (inv_main9 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main4 var2 var1) (and (<= 0 (+ var2 (- 100))) (or (= var0 0) (not (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))))))) (inv_main9 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main11 var2 var1) (and (<= 0 (+ var1 (- 100))) (or (= var0 0) (not (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))))))) (inv_main9 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (inv_main11 var2 var1) (and (not (<= 0 (+ var1 (- 100)))) (or (= var0 0) (not (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1)))))))) (inv_main16 var2 var1))))
(assert (forall ((var0 Int) (var1 Int)) (not (and (inv_main16 var1 var0) (not (<= 0 (+ (+ 200 (* (- 1) var1)) (- 1))))))))
(check-sat)
