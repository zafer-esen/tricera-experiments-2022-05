(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-fun inv_main10 (Int Int Int Int) Bool)
(declare-fun inv_main17 (Int Int Int Int) Bool)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main21 (Int Int Int Int) Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main10 var4 var3 var2 var1) (and (<= 0 var0) (<= 0 (+ (+ var4 (* (- 1) var1)) (- 1)))))) (inv_main10 var4 var0 (+ var2 var0) (+ var1 1)))))
(assert (forall ((var0 Int)) (or (not (and inv_main2 (and (not (= var0 0)) (<= 0 var0)))) (inv_main10 var0 0 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main10 var3 var2 var1 var0) (and (<= 0 (+ (+ var1 (- 65025)) (- 1))) (and (not (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1)))) (not (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1)))))))) (inv_main21 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main10 var3 var2 var1 var0) (and (<= 0 (+ (+ var2 (* (- 1) var1)) (- 1))) (not (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1))))))) (inv_main17 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (inv_main17 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (inv_main21 var3 var2 var1 var0))))
(check-sat)
