(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main15 (Int Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int Int) Bool)
(declare-fun inv_main2 () Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1))))) (inv_main19 var4 var3 (+ var2 1) var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) (+ var1 1))) (- 1))) (not (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1))))))) (inv_main19 var4 var3 var2 (+ var1 1) 0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and inv_main2 (and (<= 0 (+ var1 (- 1))) (and (and (<= 0 (+ var0 (- 10))) (<= 0 (+ 10000 (* (- 1) var0)))) (and (<= 0 (+ var1 (- 10))) (<= 0 (+ 10000 (* (- 1) var1)))))))) (inv_main19 var1 var0 0 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main19 var4 var3 var2 var1 var0) (and (not (<= 0 (+ (+ var4 (* (- 1) (+ var1 1))) (- 1)))) (not (<= 0 (+ (+ var3 (* (- 1) var0)) (- 1))))))) (inv_main15 var4 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and inv_main2 (and (not (<= 0 (+ var2 (- 1)))) (and (and (<= 0 (+ var1 (- 10))) (<= 0 (+ 10000 (* (- 1) var1)))) (and (<= 0 (+ var2 (- 10))) (<= 0 (+ 10000 (* (- 1) var2)))))))) (inv_main15 var2 var1 0 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (not (and (inv_main15 var4 var3 var2 var1 var0) (not (<= 0 (+ var2 (- 100))))))))
(check-sat)
