(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-fun inv_main37 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main43 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main53 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main56 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main57 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main58 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main72 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (inv_main4 0 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main37 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 50 (* (- 1) var12)) (- 1)))))) (inv_main43 (+ var12 1) var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main37 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (= var8 0) (<= 0 (+ (+ 50 (* (- 1) var12)) (- 1)))))) (inv_main43 (+ var12 1) var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (inv_main43 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main72 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (inv_main53 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main56 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main37 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ 50 (* (- 1) (+ var12 1))) (- 1))) (and (not (= var8 0)) (<= 0 (+ (+ 50 (* (- 1) var12)) (- 1))))))) (inv_main53 (+ (+ var12 1) 1) var11 var10 var9 var8 var7 var6 var5 var4 var9 0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main58 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ 50 (* (- 1) var12)) (- 1))) (<= 0 (+ var3 (* (- 1) var8)))))) (inv_main53 (+ var12 1) var11 var10 var9 var8 var7 var6 var5 var4 (+ var3 (* (- 1) var8)) (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (inv_main56 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main57 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Int) (var31 Int) (var32 Int) (var33 Int) (var34 Int) (var35 Int) (var36 Int) (var37 Int) (var38 Int) (var39 Int) (var40 Int) (var41 Int) (var42 Int) (var43 Int) (var44 Int) (var45 Int) (var46 Int) (var47 Int) (var48 Int) (var49 Int) (var50 Int) (var51 Int) (var52 Int) (var53 Int) (var54 Int) (var55 Int) (var56 Int) (var57 Int) (var58 Int) (var59 Int) (var60 Int) (var61 Int) (var62 Int) (var63 Int) (var64 Int) (var65 Int) (var66 Int) (var67 Int) (var68 Int) (var69 Int) (var70 Int) (var71 Int) (var72 Int) (var73 Int) (var74 Int) (var75 Int) (var76 Int) (var77 Int) (var78 Int) (var79 Int) (var80 Int) (var81 Int) (var82 Int) (var83 Int) (var84 Int) (var85 Int) (var86 Int) (var87 Int) (var88 Int) (var89 Int) (var90 Int) (var91 Int) (var92 Int) (var93 Int) (var94 Int) (var95 Int) (var96 Int)) (or (not (and (inv_main4 var96 var95 var94 var93 var92 var91 var90 var89 var88 var87 var86 var85 var84) (and (and (not (= var83 0)) (and (and (and (and (and (and (and (and (and (and (and (and (and (= var82 var81) (= var80 var79)) (= var78 var77)) (= var76 var75)) (= var74 var73)) (= var72 var71)) (= var70 var69)) (= var68 var67)) (= var66 var65)) (= var64 var63)) (= var62 var61)) (= var60 var59)) (= var58 var57)) (or (and (<= 0 (+ (+ 2147483647 (* (- 1) var57)) (- 1))) (= var83 1)) (and (not (<= 0 (+ (+ 2147483647 (* (- 1) var57)) (- 1)))) (= var83 0))))) (and (and (and (not (= var56 0)) (and (and (and (and (and (and (and (and (and (and (and (and (and (= var81 var55) (= var79 var54)) (= var77 var53)) (= var75 var52)) (= var73 var51)) (= var71 var50)) (= var69 var49)) (= var67 var48)) (= var65 var47)) (= var63 var46)) (= var61 var45)) (= var59 var44)) (= var57 var43)) (or (and (<= 0 (+ (+ 2147483647 (* (- 1) var44)) (- 1))) (= var56 1)) (and (not (<= 0 (+ (+ 2147483647 (* (- 1) var44)) (- 1)))) (= var56 0))))) (and (and (and (not (= var42 0)) (and (and (and (and (and (and (and (and (and (and (and (and (and (= var41 var40) (= var39 var38)) (= var37 var36)) (= var35 var34)) (= var33 var32)) (= var31 var30)) (= var29 var28)) (= var27 var26)) (= var25 var24)) (= var23 var22)) (= var21 var20)) (= var19 var18)) (= var17 var16)) (or (and (<= 0 (+ var36 (- 1))) (= var42 1)) (and (not (<= 0 (+ var36 (- 1)))) (= var42 0))))) (and (not (= var15 0)) (and (and (and (and (and (and (and (and (and (and (and (and (and (= var40 var96) (= var38 var14)) (= var36 var13)) (= var34 var93)) (= var32 var92)) (= var30 var91)) (= var28 var90)) (= var26 var89)) (= var24 var88)) (= var22 var87)) (= var20 var86)) (= var18 var85)) (= var16 var84)) (or (and (<= 0 (+ var14 (- 1))) (= var15 1)) (and (not (<= 0 (+ var14 (- 1)))) (= var15 0)))))) (and (and (and (and (and (and (and (and (and (and (and (and (= var12 var41) (= var11 var39)) (= var10 var37)) (= var9 var39)) (= var8 var37)) (= var7 1)) (= var6 0)) (= var5 0)) (= var4 1)) (= var3 0)) (= var2 0)) (= var1 (* var39 var37))) (= var0 var17)))) (and (and (and (and (and (and (and (and (and (and (and (and (= var55 var12) (= var54 var11)) (= var53 var10)) (= var52 var9)) (= var51 var8)) (= var50 var7)) (= var49 var6)) (= var48 var5)) (= var47 var4)) (= var46 var3)) (= var45 var2)) (= var44 var1)) (= var43 (* var10 var10))))))) (inv_main37 var82 var80 var78 var76 var74 var72 var70 var68 var66 var64 var62 var60 var58))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int)) (or (not (and (inv_main58 var26 var25 var24 var23 var22 var21 var20 var19 var18 var17 var16 var15 var14) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= var13 var26) (= var12 var25)) (= var11 var24)) (= var10 var22)) (= var9 var17)) (= var8 var20)) (= var7 (+ var21 (* (- 1) (* var20 var16))))) (= var6 var19)) (= var5 var18)) (= var4 var17)) (= var3 var16)) (= var2 var15)) (= var1 var14)) (= var0 var21)) (not (<= 0 (+ var17 (* (- 1) var22))))))) (inv_main37 var13 var12 var11 var10 var9 var8 var7 var5 (+ var6 (* (- 1) (* var5 var3))) var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int)) (or (not (and (inv_main37 var26 var25 var24 var23 var22 var21 var20 var19 var18 var17 var16 var15 var14) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= var13 (+ (+ var26 1) 1)) (= var12 var25)) (= var11 var24)) (= var10 var22)) (= var9 var23)) (= var8 var20)) (= var7 (+ var21 (* (- 1) (* var20 0))))) (= var6 var19)) (= var5 var18)) (= var4 var23)) (= var3 0)) (= var2 var15)) (= var1 var14)) (= var0 var21)) (and (not (<= 0 (+ (+ 50 (* (- 1) (+ var26 1))) (- 1)))) (and (not (= var22 0)) (<= 0 (+ (+ 50 (* (- 1) var26)) (- 1)))))))) (inv_main37 var13 var12 var11 var10 var9 var8 var7 var5 (+ var6 (* (- 1) (* var5 var3))) var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int)) (or (not (and (inv_main58 var26 var25 var24 var23 var22 var21 var20 var19 var18 var17 var16 var15 var14) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= var13 (+ var26 1)) (= var12 var25)) (= var11 var24)) (= var10 var22)) (= var9 (+ var17 (* (- 1) var22)))) (= var8 var20)) (= var7 (+ var21 (* (- 1) (* var20 (+ var16 1)))))) (= var6 var19)) (= var5 var18)) (= var4 (+ var17 (* (- 1) var22)))) (= var3 (+ var16 1))) (= var2 var15)) (= var1 var14)) (= var0 var21)) (and (not (<= 0 (+ (+ 50 (* (- 1) var26)) (- 1)))) (<= 0 (+ var17 (* (- 1) var22))))))) (inv_main37 var13 var12 var11 var10 var9 var8 var7 var5 (+ var6 (* (- 1) (* var5 var3))) var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (inv_main57 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main58 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_main53 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var9 (+ (* var2 var8) var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_main56 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var9 (+ (* var10 var5) (* var11 var7))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_main57 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var8 (+ (* var11 var6) (* var10 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_main58 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (* var6 var1) (* var4 var0)) (* (- 1) (* var6 var11))) (* (- 1) (* var8 var10))) (* (- 1) (* var4 var10))) var8) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_main43 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (* var6 var11) (* var4 var10)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (not (and (inv_main72 var12 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (* var7 var11) (* var5 var10)) var9))))))
(check-sat)
