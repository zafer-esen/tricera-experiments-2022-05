(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-fun inv_main3 (Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (inv_main3 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (inv_main3 var3 var2 var1 var0)) (inv_main4 0 0 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main4 var5 var4 var3 var2) (and (not (= var1 0)) (and (not (= var0 0)) (<= 0 (+ (+ 10000 (* (- 1) var4)) (- 1))))))) (inv_main4 (+ var5 1) (+ var4 100) (+ var3 10) (+ var2 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main4 var6 var5 var4 var3) (and (not (<= 0 (+ var6 (- 4)))) (and (not (= var2 0)) (and (= var1 0) (and (not (= var0 0)) (<= 0 (+ (+ 10000 (* (- 1) var5)) (- 1))))))))) (inv_main4 var6 var5 (+ var4 10) (+ var3 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main4 var6 var5 var4 var3) (and (<= 0 (+ var6 (- 4))) (and (not (= var2 0)) (and (= var1 0) (and (not (= var0 0)) (<= 0 (+ (+ 10000 (* (- 1) var5)) (- 1))))))))) (inv_main4 (+ var6 1) (+ var5 1) (+ var4 10) (+ var3 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main4 var6 var5 var4 var3) (and (and (<= 0 (+ (+ var5 (* (- 10) var3)) (- 1))) (<= 0 (+ var4 (* (- 100) var6)))) (and (= var2 0) (and (= var1 0) (and (not (= var0 0)) (<= 0 (+ (+ 10000 (* (- 1) var5)) (- 1))))))))) (inv_main4 var6 (* (- 1) var5) (+ var4 10) (+ var3 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main4 var6 var5 var4 var3) (and (or (not (<= 0 (+ (+ var5 (* (- 10) var3)) (- 1)))) (not (<= 0 (+ var4 (* (- 100) var6))))) (and (= var2 0) (and (= var1 0) (and (not (= var0 0)) (<= 0 (+ (+ 10000 (* (- 1) var5)) (- 1))))))))) (inv_main4 var6 var5 (+ var4 10) (+ var3 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main4 var4 var3 var2 var1) (or (= var0 0) (not (<= 0 (+ (+ 10000 (* (- 1) var3)) (- 1))))))) (inv_main5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main5 var3 var2 var1 var0) (or (not (<= 0 (+ var3 (- 4)))) (not (<= 0 (+ 2 (* (- 1) var2)))))))))
(check-sat)
