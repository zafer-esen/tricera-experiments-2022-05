(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun f910 (Int Int) Bool)
(declare-fun f911 (Int Int Int) Bool)
(declare-fun f913 (Int Int) Bool)
(declare-fun f914 (Int Int) Bool)
(declare-fun f915 (Int Int Int) Bool)
(declare-fun f91_post (Int Int) Bool)
(declare-fun f91_pre (Int) Bool)
(declare-fun inv_main2 () Bool)
(declare-fun inv_main4 (Int) Bool)
(declare-fun inv_main7 (Int Int) Bool)
(assert inv_main2)
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (and (inv_main4 var1) (f91_post var1 var0)) (and (not (= var0 91)) (or (not (<= 0 (+ (+ var1 (- 101)) (- 1)))) (not (= var0 (+ var1 (- 10)))))))) (inv_main7 var1 var0))))
(assert (forall ((var0 Int)) (or (not inv_main2) (inv_main4 var0))))
(assert (forall ((var0 Int)) (or (not (inv_main4 var0)) (f91_pre var0))))
(assert (forall ((var0 Int) (var1 Int)) (not (inv_main7 var1 var0))))
(assert (forall ((var0 Int)) (or (not (f91_pre var0)) (f910 var0 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (f910 var1 var0) (<= 0 (+ (+ var1 (- 100)) (- 1))))) (f913 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (and (f910 var1 var0) (not (<= 0 (+ (+ var1 (- 100)) (- 1)))))) (f914 var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (f913 var1 var0)) (f911 var1 var0 (+ var1 (- 10))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (and (f914 var2 var1) (f91_post (+ var2 11) var0))) (f915 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (f915 var3 var2 var1) (f91_post var1 var0))) (f911 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (f911 var2 var1 var0)) (f91_post var1 var0))))
(assert (forall ((var0 Int) (var1 Int)) (or (not (f914 var1 var0)) (f91_pre (+ var1 11)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (f915 var2 var1 var0)) (f91_pre var0))))
(check-sat)
