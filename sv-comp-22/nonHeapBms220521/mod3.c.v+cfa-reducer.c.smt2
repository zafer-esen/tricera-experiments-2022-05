(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main2 (Int Int) Bool)
(declare-fun inv_main36 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main5 (Int Int Int Int) Bool)
(assert (inv_main2 0 0))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int)) (or (not (and (inv_main5 var10 var9 var8 var7) (and (and (= var6 0) (and (and (and (and (and (= var5 var10) (= var4 var9)) (= var3 var8)) (= var2 var7)) (= var1 var0)) (or (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var11)) (- 1))) (<= 0 (+ (+ 3 (* 1 var11)) (- 1)))) (or (not (<= 0 (+ var11 (- 1)))) (<= 0 (+ var8 (- 1))))) (or (not (<= 0 (+ (* (- 1) var11) (- 1)))) (<= 0 (+ (* (- 1) var8) (- 1))))) (= var8 (+ (* 3 var12) var11))) (= var11 0)) (= var6 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var13)) (- 1))) (<= 0 (+ (+ 3 (* 1 var13)) (- 1)))) (or (not (<= 0 (+ var13 (- 1)))) (<= 0 (+ var8 (- 1))))) (or (not (<= 0 (+ (* (- 1) var13) (- 1)))) (<= 0 (+ (* (- 1) var8) (- 1))))) (= var8 (+ (* 3 var14) var13)))) (= var13 0))) (= var6 0))))) (and (= var7 0) (= var0 0))))) (inv_main36 var5 var4 var3 var2 var1 var6 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main5 var4 var3 var2 var1) (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var5)) (- 1))) (<= 0 (+ (+ 3 (* 1 var5)) (- 1)))) (or (not (<= 0 (+ var5 (- 1)))) (<= 0 (+ var2 (- 1))))) (or (not (<= 0 (+ (* (- 1) var5) (- 1)))) (<= 0 (+ (* (- 1) var2) (- 1))))) (= var2 (+ (* 3 var6) var5))) (= var5 1)) (not (= var0 0))))) (inv_main5 var4 var3 (+ var2 2) 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main5 var5 var4 var3 var2) (and (not (= var1 0)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var6)) (- 1))) (<= 0 (+ (+ 3 (* 1 var6)) (- 1)))) (or (not (<= 0 (+ var6 (- 1)))) (<= 0 (+ var3 (- 1))))) (or (not (<= 0 (+ (* (- 1) var6) (- 1)))) (<= 0 (+ (* (- 1) var3) (- 1))))) (= var3 (+ (* 3 var7) var6)))) (= var6 2))) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var8)) (- 1))) (<= 0 (+ (+ 3 (* 1 var8)) (- 1)))) (or (not (<= 0 (+ var8 (- 1)))) (<= 0 (+ var3 (- 1))))) (or (not (<= 0 (+ (* (- 1) var8) (- 1)))) (<= 0 (+ (* (- 1) var3) (- 1))))) (= var3 (+ (* 3 var9) var8)))) (= var8 1))) (not (= var0 0))))))) (inv_main5 var5 var4 (+ var3 4) 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int)) (or (not (and (inv_main5 var5 var4 var3 var2) (and (= var1 0) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var6)) (- 1))) (<= 0 (+ (+ 3 (* 1 var6)) (- 1)))) (or (not (<= 0 (+ var6 (- 1)))) (<= 0 (+ var3 (- 1))))) (or (not (<= 0 (+ (* (- 1) var6) (- 1)))) (<= 0 (+ (* (- 1) var3) (- 1))))) (= var3 (+ (* 3 var7) var6)))) (= var6 2))) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var8)) (- 1))) (<= 0 (+ (+ 3 (* 1 var8)) (- 1)))) (or (not (<= 0 (+ var8 (- 1)))) (<= 0 (+ var3 (- 1))))) (or (not (<= 0 (+ (* (- 1) var8) (- 1)))) (<= 0 (+ (* (- 1) var3) (- 1))))) (= var3 (+ (* 3 var9) var8)))) (= var8 1))) (not (= var0 0))))))) (inv_main5 var5 var4 (+ var3 5) 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main5 var4 var3 var2 var1) (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var5)) (- 1))) (<= 0 (+ (+ 3 (* 1 var5)) (- 1)))) (or (not (<= 0 (+ var5 (- 1)))) (<= 0 (+ var2 (- 1))))) (or (not (<= 0 (+ (* (- 1) var5) (- 1)))) (<= 0 (+ (* (- 1) var2) (- 1))))) (= var2 (+ (* 3 var6) var5))) (= var5 2)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var7)) (- 1))) (<= 0 (+ (+ 3 (* 1 var7)) (- 1)))) (or (not (<= 0 (+ var7 (- 1)))) (<= 0 (+ var2 (- 1))))) (or (not (<= 0 (+ (* (- 1) var7) (- 1)))) (<= 0 (+ (* (- 1) var2) (- 1))))) (= var2 (+ (* 3 var8) var7)))) (= var7 1))) (not (= var0 0)))))) (inv_main5 var4 var3 (+ var2 1) 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int)) (or (not (inv_main2 var2 var1)) (inv_main5 var2 var1 var0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (inv_main36 var6 var5 var4 var3 var2 var1 var0))))
(check-sat)
