(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main12 (Int Int Int Int) Bool)
(declare-fun inv_main3 (Int Int Int Int) Bool)
(declare-fun inv_main9 (Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (inv_main3 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main3 var4 var3 var2 var1) (and (<= 0 var0) (<= 0 (+ 1000000 (* (- 1) var0)))))) (inv_main9 0 var0 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main9 var4 var3 var2 var1) (and (not (= var0 0)) (<= 0 (+ (+ var3 (* (- 1) var4)) (- 1)))))) (inv_main9 (+ var4 1) var3 (+ var2 1) (+ var1 2)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (inv_main9 var4 var3 var2 var1) (and (= var0 0) (<= 0 (+ (+ var3 (* (- 1) var4)) (- 1)))))) (inv_main9 (+ var4 1) var3 (+ var2 2) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (or (not (and (inv_main9 var3 var2 var1 var0) (not (<= 0 (+ (+ var2 (* (- 1) var3)) (- 1)))))) (inv_main12 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int)) (not (and (inv_main12 var3 var2 var1 var0) (not (= (+ var1 var0) (* 3 var2)))))))
(check-sat)
