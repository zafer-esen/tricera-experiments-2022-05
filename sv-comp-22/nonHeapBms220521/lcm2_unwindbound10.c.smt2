(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main36 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main37 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main38 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (and (and (and (<= 0 var5) (<= 0 var4)) (<= 0 var3)) (<= 0 var2)) (and (<= 0 var1) (<= 0 var0)))) (inv_main4 0 var1 var0 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 10 (* (- 1) var6)) (- 1)))))) (inv_main37 (+ var6 1) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (= var3 var2))) (inv_main37 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Int) (var31 Int) (var32 Int) (var33 Int) (var34 Int) (var35 Int) (var36 Int) (var37 Int) (var38 Int) (var39 Int) (var40 Int)) (or (not (and (inv_main4 var40 var39 var38 var37 var36 var35 var34) (and (and (not (= var33 0)) (and (and (and (and (and (and (and (= var32 var31) (= var30 var29)) (= var28 var27)) (= var26 var25)) (= var24 var23)) (= var22 var21)) (= var20 var19)) (or (and (<= 0 (+ 65535 (* (- 1) var27))) (= var33 1)) (and (not (<= 0 (+ 65535 (* (- 1) var27)))) (= var33 0))))) (and (and (not (= var18 0)) (and (and (and (and (and (and (and (= var31 var17) (= var29 var16)) (= var27 var15)) (= var25 var14)) (= var23 var13)) (= var21 var12)) (= var19 var11)) (or (and (<= 0 (+ 65535 (* (- 1) var16))) (= var18 1)) (and (not (<= 0 (+ 65535 (* (- 1) var16)))) (= var18 0))))) (and (and (not (= var10 0)) (and (and (and (and (and (and (and (= var17 var9) (= var16 var8)) (= var15 var7)) (= var14 var6)) (= var13 var5)) (= var12 var4)) (= var11 var3)) (or (and (<= 0 (+ var7 (- 1))) (= var10 1)) (and (not (<= 0 (+ var7 (- 1)))) (= var10 0))))) (and (and (not (= var2 0)) (and (and (and (and (and (and (and (= var9 var40) (= var8 var1)) (= var7 var0)) (= var6 var37)) (= var5 var36)) (= var4 var35)) (= var3 var34)) (or (and (<= 0 (+ var1 (- 1))) (= var2 1)) (and (not (<= 0 (+ var1 (- 1)))) (= var2 0))))) (and (<= 0 var0) (<= 0 var1)))))))) (inv_main36 var32 var30 var28 var30 var28 var28 var30))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var3 (* (- 1) var2)) (- 1))) (not (= var3 var2))))) (inv_main36 var6 var5 var4 (+ var3 (* (- 1) var2)) var2 var1 (+ var0 var1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ (+ var3 (* (- 1) var2)) (- 1)))) (not (= var3 var2))))) (inv_main36 var6 var5 var4 var3 (+ var2 (* (- 1) var3)) (+ var1 var0) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ 10 (* (- 1) var6)) (- 1))))) (inv_main38 (+ var6 1) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (* var3 var1) (* var2 var0)) (* (* 2 var5) var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main37 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (* var3 var1) (* var2 var0)) (* (* 2 var5) var4)))))))
(check-sat)
