(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main15 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main25 (Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (inv_main4 var6 var5 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int)) (or (not (and (inv_main4 var15 var14 var13 var12 var11 var10 var9) (and (and (and (and (and (and (= var8 var7) (= var6 var5)) (= var4 0)) (= var3 0)) (= var2 (+ (* 2 var5) (* (- 1) var7)))) (= var1 var10)) (= var0 (* var5 0))))) (inv_main15 var8 var6 var4 var3 var2 (* var8 var3) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main15 var13 var12 var11 var10 var9 var8 var7) (and (and (and (and (and (and (and (= var6 var13) (= var5 var12)) (= var4 (+ var11 1))) (= var3 var10)) (= var2 (+ var9 (* 2 var12)))) (= var1 var8)) (= var0 (* var12 (+ var11 1)))) (and (<= 0 (+ (* (- 1) var9) (- 1))) (<= 0 (+ var13 (* (- 1) var11))))))) (inv_main15 var6 var5 var4 var3 var2 (* var6 var3) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main15 var13 var12 var11 var10 var9 var8 var7) (and (and (and (and (and (and (and (= var6 var13) (= var5 var12)) (= var4 (+ var11 1))) (= var3 (+ var10 1))) (= var2 (+ var9 (* 2 (+ var12 (* (- 1) var13)))))) (= var1 var8)) (= var0 (* var12 (+ var11 1)))) (and (not (<= 0 (+ (* (- 1) var9) (- 1)))) (<= 0 (+ var13 (* (- 1) var11))))))) (inv_main15 var6 var5 var4 var3 var2 (* var6 var3) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int)) (or (not (and (inv_main15 var13 var12 var11 var10 var9 var8 var7) (and (not (<= 0 (+ var13 (* (- 1) var11)))) (and (and (and (and (and (and (= var6 var13) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 (* var11 var10))) (= var0 var7))))) (inv_main25 var6 var5 var4 var3 var2 var1 (* var5 var4)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main15 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (* 2 var0) (* (- 2) var1)) (* (- 1) var6)) (* 2 var5)) (* (- 1) var2)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (not (and (inv_main25 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (* 2 var0) (* (- 2) var1)) (* (- 1) var6)) (* 2 var5)) (* (- 1) var2)) (* 2 var3)) 0))))))
(check-sat)
