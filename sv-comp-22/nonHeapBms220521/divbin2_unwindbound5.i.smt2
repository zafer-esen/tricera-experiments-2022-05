(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main10 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main11 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main18 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main19 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int)) (or (not (and (and (and (<= 0 var4) (<= 0 var3)) (<= 0 var2)) (and (<= 0 var1) (<= 0 var0)))) (inv_main4 0 var1 var0 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main11 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 5 (* (- 1) var5)) (- 1)))))) (inv_main18 (+ var5 1) var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main19 var5 var4 var3 var2 var1 var0) (= var0 var3))) (inv_main18 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main10 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 5 (* (- 1) var5)) (- 1)))))) (inv_main11 (+ var5 1) var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main10 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ var1 (* (- 1) var0)))) (<= 0 (+ (+ 5 (* (- 1) var5)) (- 1)))))) (inv_main11 (+ var5 1) var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main19 var11 var10 var9 var8 var7 var6) (and (and (not (<= 0 (+ var5 (* (- 1) var4)))) (not (= var6 var9))) (and (and (and (and (and (= var3 var11) (= var2 var10)) (= var1 var9)) (= var0 (* 2 var8))) (= var5 var7)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var12)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var12)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var12)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var12))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (= var4 var12)))))) (inv_main11 var3 var2 var1 var0 var5 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int)) (or (not (and (inv_main19 var11 var10 var9 var8 var7 var6) (and (and (<= 0 (+ var5 (* (- 1) var4))) (not (= var6 var9))) (and (and (and (and (and (= var3 var11) (= var2 var10)) (= var1 var9)) (= var0 (* 2 var8))) (= var5 var7)) (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var12)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var12)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var12)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var12))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (= var4 var12)))))) (inv_main11 var3 var2 var1 (+ var0 1) (+ var5 (* (- 1) var4)) var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int)) (or (not (and (inv_main4 var6 var5 var4 var3 var2 var1) (<= 0 var0))) (inv_main10 var6 var0 1 0 var0 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main10 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var1 (* (- 1) var0))) (<= 0 (+ (+ 5 (* (- 1) var5)) (- 1)))))) (inv_main10 (+ var5 1) var4 var3 var2 var1 (* 2 var0)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main11 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ 5 (* (- 1) var5)) (- 1))))) (inv_main19 (+ var5 1) var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (= var4 (+ (* var2 var0) var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main18 var5 var4 var3 var2 var1 var0) (not (= var4 (+ (* var2 var0) var1)))))))
(check-sat)
