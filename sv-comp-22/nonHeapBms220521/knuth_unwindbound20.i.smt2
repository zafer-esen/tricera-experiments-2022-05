(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main29 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main32 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main33 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main34 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (or (not (and (and (and (and (and (and (<= 0 var7) (<= 0 var6)) (<= 0 var5)) (<= 0 var4)) (<= 0 var3)) (<= 0 var2)) (and (<= 0 var1) (<= 0 var0)))) (inv_main4 0 var1 var0 var7 var6 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Int) (var31 Int) (var32 Int) (var33 Int) (var34 Int) (var35 Int) (var36 Int) (var37 Int) (var38 Int) (var39 Int) (var40 Int) (var41 Int) (var42 Int) (var43 Int) (var44 Int) (var45 Int) (var46 Int) (var47 Int) (var48 Int) (var49 Int) (var50 Int) (var51 Int) (var52 Int) (var53 Int) (var54 Int) (var55 Int) (var56 Int) (var57 Int) (var58 Int) (var59 Int) (var60 Int) (var61 Int) (var62 Int) (var63 Int) (var64 Int) (var65 Int) (var66 Int) (var67 Int) (var68 Int) (var69 Int) (var70 Int) (var71 Int) (var72 Int)) (or (not (and (inv_main4 var58 var57 var56 var55 var54 var53 var52 var51 var50) (and (<= 0 (+ (+ 20 (* (- 1) var49)) (- 1))) (and (and (and (and (and (not (= var48 0)) (and (and (and (and (and (and (and (and (and (= var47 var46) (= var45 var44)) (= var43 var42)) (= var41 var40)) (= var39 var38)) (= var37 var36)) (= var35 var34)) (= var33 var32)) (= var31 var30)) (or (and (<= 0 (+ (+ var42 (- 2)) (- 1))) (= var48 1)) (and (not (<= 0 (+ (+ var42 (- 2)) (- 1)))) (= var48 0))))) (and (and (not (= var29 0)) (and (and (and (and (and (and (and (and (and (= var46 var58) (= var44 var28)) (= var42 var27)) (= var40 var55)) (= var38 var54)) (= var36 var53)) (= var34 var52)) (= var32 var51)) (= var30 var50)) (or (and (and (and (and (<= 0 (+ (+ 8 (* (- 1) (+ 4294967295 (* (- 8) var59)))) (- 1))) (<= 0 (+ (+ 8 (* 1 (+ 4294967295 (* (- 8) var59)))) (- 1)))) (not (<= 0 (+ (* (- 1) (+ 4294967295 (* (- 8) var59))) (- 1))))) (<= 0 (+ (+ var59 (* (- 1) var28)) (- 1)))) (= var29 1)) (and (not (or (not (and (and (<= 0 (+ (+ 8 (* (- 1) (+ 4294967295 (* (- 8) var60)))) (- 1))) (<= 0 (+ (+ 8 (* 1 (+ 4294967295 (* (- 8) var60)))) (- 1)))) (not (<= 0 (+ (* (- 1) (+ 4294967295 (* (- 8) var60))) (- 1)))))) (<= 0 (+ (+ var60 (* (- 1) var28)) (- 1))))) (= var29 0))))) (and (<= 0 var27) (<= 0 var28)))) (and (and (and (and (and (and (and (and (= var26 var47) (= var25 var45)) (= var24 var43)) (and (and (and (and (and (or (and (<= 0 var43) (<= 0 (+ (+ var43 (* (- 1) var61)) (- 1)))) (and (not (<= 0 var43)) (<= 0 (+ (+ (* (- 1) var43) (* (- 1) var61)) (- 1))))) (or (and (<= 0 var43) (<= 0 (+ (+ var43 (* 1 var61)) (- 1)))) (and (not (<= 0 var43)) (<= 0 (+ (+ (* (- 1) var43) (* 1 var61)) (- 1)))))) (or (not (<= 0 (+ var61 (- 1)))) (<= 0 (+ var45 (- 1))))) (or (not (<= 0 (+ (* (- 1) var61) (- 1)))) (<= 0 (+ (* (- 1) var45) (- 1))))) (= var45 (+ (* var62 var43) var61))) (= var23 var61))) (= var22 var39)) (= var21 var37)) (= var20 var43)) (= var19 var33)) (= var18 var31))) (and (and (and (and (and (and (and (and (= var17 var26) (= var16 var25)) (= var15 var24)) (= var14 var23)) (and (and (and (and (and (or (and (<= 0 (+ var20 (- 2))) (<= 0 (+ (+ (+ var20 (- 2)) (* (- 1) var63)) (- 1)))) (and (not (<= 0 (+ var20 (- 2)))) (<= 0 (+ (+ (* (- 1) (+ var20 (- 2))) (* (- 1) var63)) (- 1))))) (or (and (<= 0 (+ var20 (- 2))) (<= 0 (+ (+ (+ var20 (- 2)) (* 1 var63)) (- 1)))) (and (not (<= 0 (+ var20 (- 2)))) (<= 0 (+ (+ (* (- 1) (+ var20 (- 2))) (* 1 var63)) (- 1)))))) (or (not (<= 0 (+ var63 (- 1)))) (<= 0 (+ var25 (- 1))))) (or (not (<= 0 (+ (* (- 1) var63) (- 1)))) (<= 0 (+ (* (- 1) var25) (- 1))))) (= var25 (+ (* var64 (+ var20 (- 2))) var63))) (= var13 var63))) (= var12 var21)) (= var11 var20)) (= var10 var19)) (= var9 0))) (and (and (and (and (and (and (and (and (= var49 var17) (= var8 var16)) (= var7 var15)) (= var6 var14)) (= var5 var13)) (and (and (and (and (and (and (and (= var68 var16) (= var67 (+ var68 (* (- 1) (* var65 var66))))) (= var66 (+ var11 (- 2)))) (or (and (<= 0 var66) (<= 0 (+ (+ var66 (* (- 1) var67)) (- 1)))) (and (not (<= 0 var66)) (<= 0 (+ (+ (* (- 1) var66) (* (- 1) var67)) (- 1)))))) (or (and (<= 0 var66) (<= 0 (+ (+ var66 (* 1 var67)) (- 1)))) (and (not (<= 0 var66)) (<= 0 (+ (+ (* (- 1) var66) (* 1 var67)) (- 1)))))) (or (not (<= 0 (+ var67 (- 1)))) (<= 0 (+ var68 (- 1))))) (or (not (<= 0 (+ (* (- 1) var67) (- 1)))) (<= 0 (+ (* (- 1) var68) (- 1))))) (and (and (and (and (and (and (and (= var72 var16) (= var71 (+ var72 (* (- 1) (* var69 var70))))) (= var70 var11)) (or (and (<= 0 var70) (<= 0 (+ (+ var70 (* (- 1) var71)) (- 1)))) (and (not (<= 0 var70)) (<= 0 (+ (+ (* (- 1) var70) (* (- 1) var71)) (- 1)))))) (or (and (<= 0 var70) (<= 0 (+ (+ var70 (* 1 var71)) (- 1)))) (and (not (<= 0 var70)) (<= 0 (+ (+ (* (- 1) var70) (* 1 var71)) (- 1)))))) (or (not (<= 0 (+ var71 (- 1)))) (<= 0 (+ var72 (- 1))))) (or (not (<= 0 (+ (* (- 1) var71) (- 1)))) (<= 0 (+ (* (- 1) var72) (- 1))))) (= var4 (* 4 (+ var65 (* (- 1) var69))))))) (= var3 var11)) (= var2 var10)) (= var1 var9)))))) (inv_main29 (+ var49 1) var8 var7 var6 var5 var4 var3 var0 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main34 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ 20 (* (- 1) var8)) (- 1))) (and (<= 0 (+ (+ var4 (* (- 1) (+ (* 2 var5) var3))) (- 1))) (and (<= 0 (+ var1 (* (- 1) var2))) (not (= var5 0))))))) (inv_main29 (+ var8 1) var7 var6 (+ (+ (+ (+ (* 2 var5) (* (- 1) var4)) var3) var2) 2) var5 (+ var3 4) (+ var2 2) var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main34 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ 20 (* (- 1) var8)) (- 1))) (and (and (<= 0 (+ (+ (* 2 var5) var3) (* (- 1) var4))) (<= 0 (+ (+ (+ (+ var2 var4) 2) (* (- 1) (+ (* 2 var5) var3))) (- 1)))) (and (not (<= 0 (+ (+ var4 (* (- 1) (+ (* 2 var5) var3))) (- 1)))) (and (<= 0 (+ var1 (* (- 1) var2))) (not (= var5 0)))))))) (inv_main29 (+ var8 1) var7 var6 (+ (+ (* 2 var5) (* (- 1) var4)) var3) var5 var3 (+ var2 2) var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main34 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ 20 (* (- 1) var8)) (- 1))) (and (and (and (<= 0 (+ (+ (* 2 var5) var3) (* (- 1) var4))) (<= 0 (+ (+ (* 2 var5) var3) (* (- 1) (+ (+ var2 var4) 2))))) (<= 0 (+ (+ (+ (+ (* 2 var2) var4) 4) (* (- 1) (+ (* 2 var5) var3))) (- 1)))) (and (or (not (<= 0 (+ (+ (* 2 var5) var3) (* (- 1) var4)))) (not (<= 0 (+ (+ (+ (+ var2 var4) 2) (* (- 1) (+ (* 2 var5) var3))) (- 1))))) (and (not (<= 0 (+ (+ var4 (* (- 1) (+ (* 2 var5) var3))) (- 1)))) (and (<= 0 (+ var1 (* (- 1) var2))) (not (= var5 0))))))))) (inv_main29 (+ var8 1) var7 var6 (+ (+ (+ (+ (* 2 var5) (* (- 1) var4)) var3) (* (- 1) var2)) (- 2)) var5 (+ var3 (- 4)) (+ var2 2) var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main34 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ 20 (* (- 1) var8)) (- 1))) (and (or (or (not (<= 0 (+ (+ (* 2 var5) var3) (* (- 1) var4)))) (not (<= 0 (+ (+ (* 2 var5) var3) (* (- 1) (+ (+ var2 var4) 2)))))) (not (<= 0 (+ (+ (+ (+ (* 2 var2) var4) 4) (* (- 1) (+ (* 2 var5) var3))) (- 1))))) (and (or (not (<= 0 (+ (+ (* 2 var5) var3) (* (- 1) var4)))) (not (<= 0 (+ (+ (+ (+ var2 var4) 2) (* (- 1) (+ (* 2 var5) var3))) (- 1))))) (and (not (<= 0 (+ (+ var4 (* (- 1) (+ (* 2 var5) var3))) (- 1)))) (and (<= 0 (+ var1 (* (- 1) var2))) (not (= var5 0))))))))) (inv_main29 (+ var8 1) var7 var6 (+ (+ (+ (+ (* 2 var5) (* (- 1) var4)) var3) (* (- 2) var2)) (- 4)) var5 (+ var3 (- 8)) (+ var2 2) var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main33 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main34 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main33 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main29 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main29 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (* (* var2 var2) var3) (* (- 1) (* (* 2 var3) var2))) (* (- 1) (* (* 4 var5) var2))) (* (* 4 var4) var2)) (* 8 var5)) (* 8 var7)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (* var4 var0) (* var0 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main33 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (+ (+ (+ (+ (* (* var2 var2) var3) (* (- 1) (* (* 2 var2) var3))) (* (- 1) (* (* 4 var2) var5))) (* (* 4 var2) var0)) (* (* 4 var6) var4)) (* (- 1) (* (* 4 var6) var0))) (* (- 8) var7)) (* 8 var5)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main34 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (+ (* var2 var4) (* (- 1) (* var2 var0))) (* (- 1) (* var6 var4))) (* var6 var0)) 0))))))
(check-sat)
