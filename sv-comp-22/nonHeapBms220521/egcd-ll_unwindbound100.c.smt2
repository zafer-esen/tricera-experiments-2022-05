(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
(declare-fun inv_main26 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main27 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main28 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main31 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main32 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main43 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main44 (Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun inv_main45 (Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int)) (inv_main4 0 var7 var6 var5 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Int)) (or (not (and (inv_main4 var30 var29 var28 var27 var26 var25 var24 var23 var22) (and (and (not (= var21 0)) (and (and (and (and (and (and (and (and (and (= var20 var19) (= var18 var17)) (= var16 var15)) (= var14 var13)) (= var12 var11)) (= var10 var9)) (= var8 var7)) (= var6 var5)) (= var4 var3)) (or (and (<= 0 (+ var3 (- 1))) (= var21 1)) (and (not (<= 0 (+ var3 (- 1)))) (= var21 0))))) (and (not (= var2 0)) (and (and (and (and (and (and (and (and (and (= var19 var30) (= var17 var29)) (= var15 var28)) (= var13 var27)) (= var11 var26)) (= var9 var25)) (= var7 var24)) (= var5 var1)) (= var3 var0)) (or (and (<= 0 (+ var1 (- 1))) (= var2 1)) (and (not (<= 0 (+ var1 (- 1)))) (= var2 0)))))))) (inv_main26 var20 var6 var4 1 0 0 1 var6 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var7 (* (- 1) var6)) (- 1))) (not (= var7 var6))))) (inv_main26 var8 (+ var7 (* (- 1) var6)) var6 (+ var5 (* (- 1) var4)) var4 (+ var3 (* (- 1) var2)) var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ (+ var7 (* (- 1) var6)) (- 1)))) (not (= var7 var6))))) (inv_main26 var8 var7 (+ var6 (* (- 1) var7)) var5 (+ var4 (* (- 1) var5)) var3 (+ var2 (* (- 1) var3)) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main27 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main44 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main45 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main44 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main31 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (inv_main28 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main31 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main26 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 100 (* (- 1) var8)) (- 1)))))) (inv_main27 (+ var8 1) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var7 var6))) (inv_main27 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main26 var8 var7 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ 100 (* (- 1) var8)) (- 1))))) (inv_main28 (+ var8 1) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main28 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= 1 (+ (* var5 var2) (* (- 1) (* var3 var4)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main31 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var7 (+ (* var0 var3) (* var1 var5))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main32 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var6 (+ (* var1 var4) (* var0 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main27 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ var7 (* (- 1) var6)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (* var5 var1) (* var3 var0)) (* (- 1) var6)) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main44 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (* var4 var3) (* (- 1) (* var5 var2))) 1) 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (not (and (inv_main45 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= (+ (+ (* var4 var1) (* var2 var0)) (* (- 1) var6)) 0))))))
(check-sat)
