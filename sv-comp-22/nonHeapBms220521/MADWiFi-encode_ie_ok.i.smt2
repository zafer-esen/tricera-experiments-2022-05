(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun inv_main45 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main47 (Int Int Int Int Int Int) Bool)
(declare-fun inv_main8 (Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (inv_main8 var5 var4 var3 var2 var1 var0)))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int)) (or (not (and (inv_main8 var8 var7 var6 var5 var4 var3) (and (and (<= 0 (+ var2 (- 1))) (<= 0 (+ (+ (+ var1 (* (- 1) var0)) (- 2)) (- 1)))) (and (not (<= 0 (+ (+ (* 2 var2) (* (- 1) (+ var1 (* (- 1) var0)))) (- 1)))) (and (not (<= 0 (+ (+ var0 (* (- 1) var1)) (- 1)))) (and (<= 0 (+ var2 (- 1))) (and (<= 0 (+ var1 (- 1))) (and (<= 0 (+ var0 (- 1))) (and (<= 0 (+ (+ 1000000 (* (- 1) var2)) (- 1))) (and (<= 0 (+ (+ 1000000 (* (- 1) var1)) (- 1))) (<= 0 (+ (+ 1000000 (* (- 1) var0)) (- 1))))))))))))) (inv_main45 var0 0 var0 (+ var1 (* (- 1) var0)) var1 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (and (inv_main47 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var0 (* (- 1) (+ var4 1))) (- 1))) (<= 0 (+ (+ var2 (- 2)) (- 1)))))) (inv_main45 (+ var5 2) (+ var4 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (or (not (inv_main45 var5 var4 var3 var2 var1 var0)) (inv_main47 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main45 var5 var4 var3 var2 var1 var0) (not (<= 0 var5))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int)) (not (and (inv_main47 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ var1 (* (- 1) (+ var5 1))) (- 1))))))))
(check-sat)
