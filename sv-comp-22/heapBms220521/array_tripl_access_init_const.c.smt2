(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main10 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main11 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main14 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main5 (Heap Int Int AddrRange) Bool)
(declare-fun inv_main8 (Heap Int Int AddrRange) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Heap)) (or (not (= var2 emptyHeap)) (inv_main5 (newBatchHeap (batchAlloc emptyHeap (O_Int var1) 300001)) var0 100000 (newAddrRange (batchAlloc emptyHeap (O_Int var1) 300001))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main8 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2)))) (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2))))))) (inv_main10 (write var3 (nthAddrRange var0 (* 3 var2)) (O_Int 0)) var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main5 var3 var2 var1 var0) (<= 0 var1))) (inv_main8 var3 0 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Heap) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main11 var7 var6 var5 var4) (and (<= 0 (+ var3 (* (- 1) (+ var2 1)))) (and (and (is-O_Int (read var7 (nthAddrRange var4 (+ (* 3 var6) 2)))) (is-O_Int (read var7 (nthAddrRange var4 (+ (* 3 var6) 2))))) (and (and (and (= var1 (write var7 (nthAddrRange var4 (+ (* 3 var6) 2)) (O_Int 0))) (= var2 var6)) (= var3 var5)) (= var0 var4)))))) (inv_main8 var1 (+ var2 1) var3 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main14 var3 var2 var1 var0) (and (<= 0 (+ (* 3 var1) (* (- 1) (+ var2 1)))) (is-O_Int (read var3 (nthAddrRange var0 var2)))))) (inv_main14 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main5 var3 var2 var1 var0) (and (<= 0 (* 3 var1)) (not (<= 0 var1))))) (inv_main14 var3 0 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Heap) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main11 var7 var6 var5 var4) (and (<= 0 (* 3 var3)) (and (not (<= 0 (+ var3 (* (- 1) (+ var2 1))))) (and (and (is-O_Int (read var7 (nthAddrRange var4 (+ (* 3 var6) 2)))) (is-O_Int (read var7 (nthAddrRange var4 (+ (* 3 var6) 2))))) (and (and (and (= var1 (write var7 (nthAddrRange var4 (+ (* 3 var6) 2)) (O_Int 0))) (= var2 var6)) (= var3 var5)) (= var0 var4))))))) (inv_main14 var1 0 var3 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main10 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1)))) (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1))))))) (inv_main11 (write var3 (nthAddrRange var0 (+ (* 3 var2) 1)) (O_Int 0)) var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main8 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main8 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2)))) (not (within var0 (nthAddrRange var0 (* 3 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main8 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2)))) (not (is-O_Int (read var3 (nthAddrRange var0 (* 3 var2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1)))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main10 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1)))) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2)))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) 2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2)))) (not (is-O_Int (read var3 (nthAddrRange var0 (+ (* 3 var2) 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (not (is-O_Int (read var3 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap)) (not (and (inv_main14 var3 var2 var1 var0) (and (is-O_Int (read var3 (nthAddrRange var0 var2))) (not (<= 0 (getInt (read var3 (nthAddrRange var0 var2))))))))))
(check-sat)
