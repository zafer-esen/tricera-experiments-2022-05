(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main10 (Heap AddrRange AddrRange Int Int Int Int) Bool)
(declare-fun inv_main14 (Heap AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main2 (Heap AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main20 (Heap AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main5 (Heap AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main6 (Heap AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main7 (Heap AddrRange AddrRange Int Int Int) Bool)
(assert (inv_main2 (newBatchHeap (batchAlloc (newBatchHeap (batchAlloc emptyHeap (O_Int 0) 100)) (O_Int 0) 100)) (newAddrRange (batchAlloc emptyHeap (O_Int 0) 100)) (newAddrRange (batchAlloc (newBatchHeap (batchAlloc emptyHeap (O_Int 0) 100)) (O_Int 0) 100)) 0 0 0))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Heap)) (or (not (inv_main2 var6 var5 var4 var3 var2 var1)) (inv_main5 var6 var5 var4 0 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Heap)) (or (not (and (inv_main10 var12 var11 var10 var9 var8 var7 var6) (and (and (is-O_Int (read var12 (nthAddrRange var10 var9))) (is-O_Int (read var12 (nthAddrRange var10 var9)))) (and (and (and (and (and (= var5 (write var12 (nthAddrRange var10 var9) (O_Int var6))) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7))))) (inv_main5 var5 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 AddrRange) (var17 AddrRange) (var18 Heap)) (or (not (and (inv_main6 var18 var17 var16 var15 var14 var13) (and (and (and (not (= var12 0)) (and (<= 0 var11) (and (and (and (and (and (and (= var10 var9) (= var8 var7)) (= var6 var5)) (= var4 var3)) (= var2 var1)) (= var0 var11)) (or (and (<= 0 (+ (+ var3 (* (- 1) var11)) (- 1))) (= var12 1)) (and (not (<= 0 (+ (+ var3 (* (- 1) var11)) (- 1)))) (= var12 0)))))) (and (is-O_Int (read var18 (nthAddrRange var16 var15))) (is-O_Int (read var18 (nthAddrRange var16 var15))))) (and (and (and (and (and (= var9 (write var18 (nthAddrRange var16 var15) (O_Int 0))) (= var7 var17)) (= var5 var16)) (= var3 var15)) (= var1 var14)) (= var11 var13))))) (inv_main14 var10 var8 var6 var4 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (or (not (and (inv_main7 var5 var4 var3 var2 var1 var0) (is-O_Int (read var5 (nthAddrRange var4 var2))))) (inv_main10 var5 var4 var3 var2 var1 var0 (getInt (read var5 (nthAddrRange var4 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Heap)) (or (not (and (inv_main5 var12 var11 var10 var9 var8 var7) (and (and (not (= var6 0)) (is-O_Int (read var12 (nthAddrRange var11 var9)))) (and (and (and (and (and (and (= var5 var12) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var6 (getInt (read var12 (nthAddrRange var11 var9)))))))) (inv_main7 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Heap)) (or (not (and (inv_main14 var12 var11 var10 var9 var8 var7) (and (and (not (= var6 0)) (is-O_Int (read var12 (nthAddrRange var10 var7)))) (and (and (and (and (and (and (= var5 var12) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var6 (getInt (read var12 (nthAddrRange var10 var7)))))))) (inv_main20 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Heap)) (or (not (and (inv_main5 var12 var11 var10 var9 var8 var7) (and (and (= var6 0) (is-O_Int (read var12 (nthAddrRange var11 var9)))) (and (and (and (and (and (and (= var5 var12) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var6 (getInt (read var12 (nthAddrRange var11 var9)))))))) (inv_main6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main5 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var4 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main5 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var4 var2))) (not (within var4 (nthAddrRange var4 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main7 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var4 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main7 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var4 var2))) (not (within var4 (nthAddrRange var4 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Heap)) (not (and (inv_main10 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var4 var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Heap)) (not (and (inv_main10 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var4 var3))) (not (within var4 (nthAddrRange var4 var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Heap)) (not (and (inv_main10 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var4 var3))) (not (is-O_Int (read var6 (nthAddrRange var4 var3)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var3 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var3 var2))) (not (within var3 (nthAddrRange var3 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var3 var2))) (not (is-O_Int (read var5 (nthAddrRange var3 var2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main14 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (and (inv_main14 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var3 var0))) (not (within var3 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap)) (not (inv_main20 var5 var4 var3 var2 var1 var0))))
(check-sat)
