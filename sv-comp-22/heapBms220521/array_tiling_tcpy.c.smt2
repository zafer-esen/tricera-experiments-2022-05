(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main24 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main25 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main26 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main29 (Heap Int Int AddrRange AddrRange) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main26 var10 var9 var8 var7 var6 var5) (and (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1))) (and (and (is-O_Int (read var10 (nthAddrRange var6 var8))) (is-O_Int (read var10 (nthAddrRange var6 var8)))) (and (and (and (and (= var2 (write var10 (nthAddrRange var6 var8) (O_Int var5))) (= var4 var9)) (= var3 var8)) (= var1 var7)) (= var0 var6)))))) (inv_main22 var2 var4 (+ var3 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (inv_main2 var19) (and (and (and (<= 0 (+ var18 (- 1))) (and (and (and (and (= var17 (newBatchHeap (batchAlloc emptyHeap (O_Int var16) (* 2 var15)))) (= var18 var15)) (= var14 var13)) (= var12 var11)) (= var10 (newAddrRange (batchAlloc emptyHeap (O_Int var16) (* 2 var15)))))) (and (and (and (= var9 (newBatchHeap (batchAlloc emptyHeap (O_Int var8) (* 2 var7)))) (= var15 var7)) (= var13 var6)) (= var11 (newAddrRange (batchAlloc emptyHeap (O_Int var8) (* 2 var7)))))) (and (and (not (= var5 0)) (and (and (= var4 var3) (= var7 var2)) (or (and (<= 0 (+ (+ 1073741823 (* (- 1) var2)) (- 1))) (= var5 1)) (and (not (<= 0 (+ (+ 1073741823 (* (- 1) var2)) (- 1)))) (= var5 0))))) (and (not (= var1 0)) (and (and (= var3 var19) (= var2 var0)) (or (and (<= 0 (+ (+ var0 (- 1)) (- 1))) (= var1 1)) (and (not (<= 0 (+ (+ var0 (- 1)) (- 1)))) (= var1 0))))))))) (inv_main22 var17 var18 0 var12 var10))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main22 var4 var3 var2 var1 var0) (is-O_Int (read var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))))) (inv_main25 var4 var3 var2 var1 var0 (getInt (read var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main29 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ (* 2 var3) (* (- 1) (+ var2 1))) (- 1))) (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (is-O_Int (read var4 (nthAddrRange var1 var2))))))) (inv_main29 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main26 var10 var9 var8 var7 var6 var5) (and (<= 0 (+ (* 2 var4) (- 1))) (and (not (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1)))) (and (and (is-O_Int (read var10 (nthAddrRange var6 var8))) (is-O_Int (read var10 (nthAddrRange var6 var8)))) (and (and (and (and (= var2 (write var10 (nthAddrRange var6 var8) (O_Int var5))) (= var4 var9)) (= var3 var8)) (= var1 var7)) (= var0 var6))))))) (inv_main29 var2 var4 0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (inv_main2 var19) (and (<= 0 (+ (* 2 var18) (- 1))) (and (and (and (not (<= 0 (+ var18 (- 1)))) (and (and (and (and (= var17 (newBatchHeap (batchAlloc emptyHeap (O_Int var16) (* 2 var15)))) (= var18 var15)) (= var14 var13)) (= var12 var11)) (= var10 (newAddrRange (batchAlloc emptyHeap (O_Int var16) (* 2 var15)))))) (and (and (and (= var9 (newBatchHeap (batchAlloc emptyHeap (O_Int var8) (* 2 var7)))) (= var15 var7)) (= var13 var6)) (= var11 (newAddrRange (batchAlloc emptyHeap (O_Int var8) (* 2 var7)))))) (and (and (not (= var5 0)) (and (and (= var4 var3) (= var7 var2)) (or (and (<= 0 (+ (+ 1073741823 (* (- 1) var2)) (- 1))) (= var5 1)) (and (not (<= 0 (+ (+ 1073741823 (* (- 1) var2)) (- 1)))) (= var5 0))))) (and (not (= var1 0)) (and (and (= var3 var19) (= var2 var0)) (or (and (<= 0 (+ (+ var0 (- 1)) (- 1))) (= var1 1)) (and (not (<= 0 (+ (+ var0 (- 1)) (- 1)))) (= var1 0)))))))))) (inv_main29 var17 var18 0 var12 var10))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))) (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1))))))))) (inv_main24 (write var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))) (O_Int var0)) var4 var3 var2 var1))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main24 var4 var3 var2 var1 var0) (is-O_Int (read var4 (nthAddrRange var1 var2))))) (inv_main26 var4 var3 var2 var1 var0 (getInt (read var4 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main22 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main22 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))) (not (within var1 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))) (not (within var1 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))) (not (is-O_Int (read var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1))))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main24 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main24 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var1 var2))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main26 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main26 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 var3))) (not (within var1 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main26 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 var3))) (not (is-O_Int (read var5 (nthAddrRange var1 var3)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (within var1 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (not (is-O_Int (read var4 (nthAddrRange var1 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (is-O_Int (read var4 (nthAddrRange var1 var2)))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var4 (nthAddrRange var0 var2))) (is-O_Int (read var4 (nthAddrRange var1 var2)))) (not (= (getInt (read var4 (nthAddrRange var0 var2))) (getInt (read var4 (nthAddrRange var1 var2))))))))))
(check-sat)
