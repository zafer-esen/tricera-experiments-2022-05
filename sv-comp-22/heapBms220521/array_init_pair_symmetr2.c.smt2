(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main27 (Heap Int Int AddrRange AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main33 (Heap Int Int AddrRange AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main36 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(declare-fun inv_main38 (Heap Int Int AddrRange AddrRange AddrRange Int) Bool)
(declare-fun inv_main39 (Heap Int Int AddrRange AddrRange AddrRange Int) Bool)
(declare-fun inv_main42 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(declare-fun inv_main6 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(declare-fun inv_main8 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (and (= var14 emptyHeap) (= var13 100000)) (and (and (and (= var12 (newBatchHeap (batchAlloc emptyHeap (O_Int var11) var13))) (= var10 var13)) (= var9 var8)) (= var7 (newAddrRange (batchAlloc emptyHeap (O_Int var11) var13))))) (and (and (and (and (= var6 (newBatchHeap (batchAlloc emptyHeap (O_Int var5) var10))) (= var4 var10)) (= var3 var9)) (= var2 var7)) (= var1 (newAddrRange (batchAlloc emptyHeap (O_Int var5) var10)))))) (inv_main6 (newBatchHeap (batchAlloc emptyHeap (O_Int var0) var4)) var4 var3 var2 var1 (newAddrRange (batchAlloc emptyHeap (O_Int var0) var4))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main27 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var4 var5))) (is-O_Int (read var7 (nthAddrRange var4 var5)))))) (inv_main33 (write var7 (nthAddrRange var4 var5) (O_Int var1)) var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) (+ var3 1))) (- 1))) (is-O_Int (read var5 (nthAddrRange var0 var3)))))) (inv_main42 var5 var4 (+ var3 1) var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main8 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (- 1)) (- 1))) (and (not (<= 0 (+ var4 (- 1)))) (not (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1)))))))) (inv_main42 var5 var4 1 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main39 var12 var11 var10 var9 var8 var7 var6) (and (<= 0 (+ (+ var5 (- 1)) (- 1))) (and (not (<= 0 (+ (+ var5 (* (- 1) (+ var4 1))) (- 1)))) (and (and (is-O_Int (read var12 (nthAddrRange var7 var10))) (is-O_Int (read var12 (nthAddrRange var7 var10)))) (and (and (and (and (and (= var3 (write var12 (nthAddrRange var7 var10) (O_Int var6))) (= var5 var11)) (= var4 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7))))))) (inv_main42 var3 var5 1 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (inv_main6 var5 var4 var3 var2 var1 var0)) (inv_main8 var5 var4 0 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 AddrRange) (var9 AddrRange) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main33 var13 var12 var11 var10 var9 var8 var7 var6) (and (and (is-O_Int (read var13 (nthAddrRange var9 var11))) (is-O_Int (read var13 (nthAddrRange var9 var11)))) (and (and (and (and (and (= var5 (write var13 (nthAddrRange var9 var11) (O_Int var6))) (= var4 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var8))))) (inv_main8 var5 var4 (+ var3 1) var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (read var6 (nthAddrRange var2 var4))))) (inv_main39 var6 var5 var4 var3 var2 var1 (+ var0 (* (- 1) (getInt (read var6 (nthAddrRange var2 var4)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main8 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var4 (- 1))) (not (<= 0 (+ (+ var4 (* (- 1) var3)) (- 1))))))) (inv_main36 var5 var4 0 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main39 var12 var11 var10 var9 var8 var7 var6) (and (<= 0 (+ (+ var5 (* (- 1) (+ var4 1))) (- 1))) (and (and (is-O_Int (read var12 (nthAddrRange var7 var10))) (is-O_Int (read var12 (nthAddrRange var7 var10)))) (and (and (and (and (and (= var3 (write var12 (nthAddrRange var7 var10) (O_Int var6))) (= var5 var11)) (= var4 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)))))) (inv_main36 var3 var5 (+ var4 1) var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (is-O_Int (read var5 (nthAddrRange var2 var3))))) (inv_main38 var5 var4 var3 var2 var1 var0 (getInt (read var5 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 AddrRange) (var17 AddrRange) (var18 AddrRange) (var19 AddrRange) (var20 AddrRange) (var21 AddrRange) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Heap) (var27 Heap) (var28 Int) (var29 AddrRange) (var30 AddrRange) (var31 AddrRange) (var32 Int) (var33 Int) (var34 Heap)) (or (not (and (inv_main8 var34 var33 var32 var31 var30 var29) (and (and (and (not (= var28 0)) (and (and (and (and (and (and (and (and (= var27 var26) (= var25 var24)) (= var23 var22)) (= var21 var20)) (= var19 var18)) (= var17 var16)) (= var15 var14)) (= var13 var12)) (or (and (<= 0 (+ (+ var14 (* (- 1) var12)) (- 1))) (= var28 1)) (and (not (<= 0 (+ (+ var14 (* (- 1) var12)) (- 1)))) (= var28 0))))) (and (and (not (= var11 0)) (and (and (and (and (and (and (and (and (= var26 var10) (= var24 var9)) (= var22 var8)) (= var20 var7)) (= var18 var6)) (= var16 var5)) (= var14 var4)) (= var12 var3)) (or (and (and (<= 0 (+ (+ 100000 (* (- 1) var4)) (- 1))) (<= 0 (+ (+ var4 100000) (- 1)))) (= var11 1)) (and (not (and (<= 0 (+ (+ 100000 (* (- 1) var4)) (- 1))) (<= 0 (+ (+ var4 100000) (- 1))))) (= var11 0))))) (and (not (= var2 0)) (and (and (and (and (and (and (and (and (= var10 var34) (= var9 var33)) (= var8 var32)) (= var7 var31)) (= var6 var30)) (= var5 var29)) (= var4 var1)) (= var3 var0)) (or (and (and (<= 0 (+ (+ 100000 (* (- 1) var0)) (- 1))) (<= 0 (+ (+ var0 100000) (- 1)))) (= var2 1)) (and (not (and (<= 0 (+ (+ 100000 (* (- 1) var0)) (- 1))) (<= 0 (+ (+ var0 100000) (- 1))))) (= var2 0))))))) (<= 0 (+ (+ var33 (* (- 1) var32)) (- 1)))))) (inv_main27 var27 var25 var23 var21 var19 var17 var15 var13))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main27 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var4 var5))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main27 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var4 var5))) (not (within var4 (nthAddrRange var4 var5))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main27 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var4 var5))) (not (is-O_Int (read var7 (nthAddrRange var4 var5)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main33 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var3 var5))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main33 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var3 var5))) (not (within var3 (nthAddrRange var3 var5))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main33 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var3 var5))) (not (is-O_Int (read var7 (nthAddrRange var3 var5)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var2 var3))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var2 var3))) (not (within var2 (nthAddrRange var2 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var2 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var2 var4))) (not (within var2 (nthAddrRange var2 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var1 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var1 var4))) (not (within var1 (nthAddrRange var1 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var1 var4))) (not (is-O_Int (read var6 (nthAddrRange var1 var4)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 var3))) (not (within var0 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 var3))) (not (<= 0 (+ (getInt (read var5 (nthAddrRange var0 var3))) (- 1)))))))))
(check-sat)
