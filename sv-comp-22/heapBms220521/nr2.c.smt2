(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main2 (Heap Int) Bool)
(declare-fun inv_main30 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main33 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main34 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main36 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main39 (Heap Int Int Int Int Int AddrRange Int) Bool)
(assert (inv_main2 emptyHeap 0))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ var6 (* (- 1) (+ var3 1))) (- 1))))) (inv_main36 var7 var6 var5 var4 (+ var3 1) var2 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var5 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var7)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var7)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var7)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var7))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1)))))) (<= 0 (+ var7 (* (- 1) (+ var2 1)))))) (not (<= 0 (+ var1 (- 1)))))))) (inv_main36 var6 var5 var4 var3 0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap) (var16 Heap) (var17 Int) (var18 Int) (var19 Int) (var20 Heap) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int)) (or (not (and (inv_main2 var20 var19) (and (<= 0 (+ var18 (- 1))) (and (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var18 (* (- 2) var21)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var18 (* (- 2) var21)))) (- 1)))) (or (not (<= 0 (+ (+ var18 (* (- 2) var21)) (- 1)))) (<= 0 (+ var18 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var18 (* (- 2) var21))) (- 1)))) (<= 0 (+ (* (- 1) var18) (- 1)))))) (<= 0 (+ var21 (- 1))))) (and (and (not (= var17 0)) (and (and (and (and (and (and (and (= var16 var15) (= var18 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var22)) (- 1))) (<= 0 (+ (+ 2 (* 1 var22)) (- 1)))) (or (not (<= 0 (+ var22 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var22) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 2 var23) var22))) (= var22 0)) (= var17 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var24)) (- 1))) (<= 0 (+ (+ 2 (* 1 var24)) (- 1)))) (or (not (<= 0 (+ var24 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var24) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 2 var25) var24)))) (= var24 0))) (= var17 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var26)) (- 1))) (<= 0 (+ (+ 2 (* 1 var26)) (- 1)))) (or (not (<= 0 (+ var26 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var26) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 2 var27) var26))) (= var26 0)) (and (and (and (and (and (and (= var15 (newBatchHeap (batchAlloc emptyHeap (O_Int var3) var2))) (= var14 var2)) (= var12 1)) (= var10 2)) (= var8 var1)) (= var6 var0)) (= var4 (newAddrRange (batchAlloc emptyHeap (O_Int var3) var2))))))) (<= 0 (+ (+ var2 (- 1)) (- 1))))))) (inv_main36 var16 var18 var13 var11 0 var7 var5))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var1 (* (- 1) var3))) (<= 0 (+ var1 (- 1)))))) (inv_main33 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main36 var14 var13 var12 var11 var10 var9 var8) (and (and (and (is-O_Int (read var14 (nthAddrRange var8 var10))) (not (<= 0 (+ (getInt (read var14 (nthAddrRange var8 var10))) (* (- 1) var11))))) (is-O_Int (read var14 (nthAddrRange var8 var10)))) (and (and (and (and (and (and (and (= var7 var14) (= var6 var13)) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (or (and (= (getInt (read var14 (nthAddrRange var8 var10))) 0) (= var0 1)) (and (not (= (getInt (read var14 (nthAddrRange var8 var10))) 0)) (= var0 0))))))) (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var2))) (<= 0 (+ (getInt (read var6 (nthAddrRange var0 var2))) (* (- 1) var3)))))) (inv_main39 var6 var5 var4 var3 var2 var1 var0 1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var7)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var7)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var7)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var7))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1))))) (<= 0 (+ var7 (* (- 1) (+ var2 1))))) (not (<= 0 (+ var1 (- 1))))))) (inv_main30 var6 var5 var4 var3 (+ var2 1) 2 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main33 var13 var12 var11 var10 var9 var8 var7) (and (and (is-O_Int (read var13 (nthAddrRange var7 (+ (* 2 var9) (* (- 1) var8))))) (is-O_Int (read var13 (nthAddrRange var7 (+ (* 2 var9) (* (- 1) var8)))))) (and (and (and (and (and (and (= var6 (write var13 (nthAddrRange var7 (+ (* 2 var9) (* (- 1) var8))) (O_Int var8))) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7))))) (inv_main30 var6 var5 var4 var3 var2 (+ var1 (- 1)) var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main34 var13 var12 var11 var10 var9 var8 var7) (and (and (is-O_Int (read var13 (nthAddrRange var7 (+ (* 2 var9) (* (- 1) var8))))) (is-O_Int (read var13 (nthAddrRange var7 (+ (* 2 var9) (* (- 1) var8)))))) (and (and (and (and (and (and (= var6 (write var13 (nthAddrRange var7 (+ (* 2 var9) (* (- 1) var8))) (O_Int 0))) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7))))) (inv_main30 var6 var5 var4 var3 var2 (+ var1 (- 1)) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap) (var16 Heap) (var17 Int) (var18 Int) (var19 Int) (var20 Heap) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int) (var26 Int) (var27 Int)) (or (not (and (inv_main2 var20 var19) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var18 (* (- 2) var21)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var18 (* (- 2) var21)))) (- 1)))) (or (not (<= 0 (+ (+ var18 (* (- 2) var21)) (- 1)))) (<= 0 (+ var18 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var18 (* (- 2) var21))) (- 1)))) (<= 0 (+ (* (- 1) var18) (- 1))))) (<= 0 (+ var21 (- 1)))) (and (and (not (= var17 0)) (and (and (and (and (and (and (and (= var16 var15) (= var18 var14)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var22)) (- 1))) (<= 0 (+ (+ 2 (* 1 var22)) (- 1)))) (or (not (<= 0 (+ var22 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var22) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 2 var23) var22))) (= var22 0)) (= var17 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var24)) (- 1))) (<= 0 (+ (+ 2 (* 1 var24)) (- 1)))) (or (not (<= 0 (+ var24 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var24) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 2 var25) var24)))) (= var24 0))) (= var17 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var26)) (- 1))) (<= 0 (+ (+ 2 (* 1 var26)) (- 1)))) (or (not (<= 0 (+ var26 (- 1)))) (<= 0 (+ var14 (- 1))))) (or (not (<= 0 (+ (* (- 1) var26) (- 1)))) (<= 0 (+ (* (- 1) var14) (- 1))))) (= var14 (+ (* 2 var27) var26))) (= var26 0)) (and (and (and (and (and (and (= var15 (newBatchHeap (batchAlloc emptyHeap (O_Int var3) var2))) (= var14 var2)) (= var12 1)) (= var10 2)) (= var8 var1)) (= var6 var0)) (= var4 (newAddrRange (batchAlloc emptyHeap (O_Int var3) var2))))))) (<= 0 (+ (+ var2 (- 1)) (- 1)))))) (inv_main30 var16 var18 var13 var11 1 2 var5))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main30 var6 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ var1 (* (- 1) var3)))) (<= 0 (+ var1 (- 1)))))) (inv_main34 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main33 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main34 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1))))) (not (is-O_Int (read var6 (nthAddrRange var0 (+ (* 2 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var6 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var6 (nthAddrRange var0 var2))) (* (- 1) var3))))) (not (is-O_Int (read var6 (nthAddrRange var0 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main36 var6 var5 var4 var3 var2 var1 var0) (and (and (and (is-O_Int (read var6 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var6 (nthAddrRange var0 var2))) (* (- 1) var3))))) (is-O_Int (read var6 (nthAddrRange var0 var2)))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 0)))))
(check-sat)
