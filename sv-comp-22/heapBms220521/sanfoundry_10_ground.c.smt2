(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main14 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main16 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main17 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main27 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Int AddrRange Int) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int Int AddrRange Int) Bool)
(declare-fun inv_main5 (Heap Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Heap)) (or (not (= var2 emptyHeap)) (inv_main5 var2 var1 100000 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ (+ var4 (- 1)) (* (- 1) var3)) (- 1))) (and (not (= var1 0)) (or (not (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (not (= var1 0))))))) (inv_main27 var6 var3 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main29 var14 var13 var12 var11 var10 var9 var8 var7) (and (<= 0 (+ (+ (+ var6 (- 1)) (* (- 1) (+ var5 1))) (- 1))) (and (and (is-O_Int (read var14 (nthAddrRange var8 var13))) (is-O_Int (read var14 (nthAddrRange var8 var13)))) (and (and (and (and (and (and (= var4 (write var14 (nthAddrRange var8 var13) (O_Int var7))) (= var5 var13)) (= var6 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var8)))))) (inv_main27 var4 (+ var5 1) var6 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main14 var14 var13 var12 var11 var10 var9 var8) (and (<= 0 (+ (+ var7 (* (- 1) (+ var6 1))) (- 1))) (and (and (is-O_Int (read var14 (nthAddrRange var8 var13))) (is-O_Int (read var14 (nthAddrRange var8 var13)))) (and (and (and (and (and (and (= var5 (write var14 (nthAddrRange var8 var13) (O_Int var4))) (= var6 var13)) (= var7 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var8)))))) (inv_main14 var5 (+ var6 1) var7 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main5 var12 var11 var10 var9) (and (<= 0 (+ var8 (- 1))) (and (and (and (and (and (and (= var7 (newBatchHeap (batchAlloc emptyHeap (O_Int var6) var10))) (= var5 var11)) (= var8 var10)) (= var4 var9)) (= var3 var2)) (= var1 0)) (= var0 (newAddrRange (batchAlloc emptyHeap (O_Int var6) var10))))))) (inv_main14 var7 0 var8 var4 var3 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main14 var14 var13 var12 var11 var10 var9 var8) (and (not (<= 0 (+ (+ var7 (* (- 1) (+ var6 1))) (- 1)))) (and (and (is-O_Int (read var14 (nthAddrRange var8 var13))) (is-O_Int (read var14 (nthAddrRange var8 var13)))) (and (and (and (and (and (and (= var5 (write var14 (nthAddrRange var8 var13) (O_Int var4))) (= var6 var13)) (= var7 var12)) (= var3 var11)) (= var2 var10)) (= var1 var9)) (= var0 var8)))))) (inv_main16 var5 0 var7 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main17 var14 var13 var12 var11 var10 var9 var8) (and (and (not (= var7 var6)) (is-O_Int (read var14 (nthAddrRange var8 var13)))) (and (and (and (and (and (and (and (= var5 var14) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var6 var10)) (= var1 var9)) (= var0 var8)) (= var7 (getInt (read var14 (nthAddrRange var8 var13)))))))) (inv_main16 var5 (+ var4 1) var3 var2 var6 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main17 var14 var13 var12 var11 var10 var9 var8) (and (and (= var7 var6) (is-O_Int (read var14 (nthAddrRange var8 var13)))) (and (and (and (and (and (and (and (= var5 var14) (= var4 var13)) (= var3 var12)) (= var2 var11)) (= var6 var10)) (= var1 var9)) (= var0 var8)) (= var7 (getInt (read var14 (nthAddrRange var8 var13)))))))) (inv_main16 var5 (+ var4 1) var3 var4 var6 1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main5 var12 var11 var10 var9) (and (not (<= 0 (+ var8 (- 1)))) (and (and (and (and (and (and (= var7 (newBatchHeap (batchAlloc emptyHeap (O_Int var6) var10))) (= var5 var11)) (= var8 var10)) (= var4 var9)) (= var3 var2)) (= var1 0)) (= var0 (newAddrRange (batchAlloc emptyHeap (O_Int var6) var10))))))) (inv_main16 var7 0 var8 var4 var3 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) (+ var0 1))) (- 1))) (is-O_Int (read var7 (nthAddrRange var1 var0)))))) (inv_main35 var7 var6 var5 var4 var3 var2 var1 (+ var0 1)))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (and (and (<= 0 (+ var3 (- 1))) (not (= var1 0))) (and (= var1 0) (or (not (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (not (= var1 0))))))) (inv_main35 var6 var5 var4 var3 var2 var1 var0 0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (and (and (<= 0 (+ var3 (- 1))) (not (= var1 0))) (and (not (<= 0 (+ (+ (+ var4 (- 1)) (* (- 1) var3)) (- 1)))) (and (not (= var1 0)) (or (not (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1)))) (not (= var1 0)))))))) (inv_main35 var6 var3 var4 var3 var2 var1 var0 0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (inv_main29 var14 var13 var12 var11 var10 var9 var8 var7) (and (and (<= 0 (+ var6 (- 1))) (not (= var5 0))) (and (not (<= 0 (+ (+ (+ var4 (- 1)) (* (- 1) (+ var3 1))) (- 1)))) (and (and (is-O_Int (read var14 (nthAddrRange var8 var13))) (is-O_Int (read var14 (nthAddrRange var8 var13)))) (and (and (and (and (and (and (= var2 (write var14 (nthAddrRange var8 var13) (O_Int var7))) (= var3 var13)) (= var4 var12)) (= var6 var11)) (= var1 var10)) (= var5 var9)) (= var0 var8))))))) (inv_main35 var2 (+ var3 1) var4 var6 var1 var5 var0 0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) var5)) (- 1))) (= var1 0)))) (inv_main17 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main27 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (read var6 (nthAddrRange var0 (+ var5 1)))))) (inv_main29 var6 var5 var4 var3 var2 var1 var0 (getInt (read var6 (nthAddrRange var0 (+ var5 1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var5))) (not (within var0 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main14 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var5))) (not (is-O_Int (read var6 (nthAddrRange var0 var5)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 var5))) (not (within var0 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main27 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var0 (+ var5 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main27 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var0 (+ var5 1)))) (not (within var0 (nthAddrRange var0 (+ var5 1)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var1 var6))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var6))) (not (within var1 (nthAddrRange var1 var6))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var6))) (not (is-O_Int (read var7 (nthAddrRange var1 var6)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (not (within var1 (nthAddrRange var1 var0)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var7 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var0))) (not (within var1 (nthAddrRange var1 var0))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main35 var7 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var7 (nthAddrRange var1 var0))) (= (getInt (read var7 (nthAddrRange var1 var0))) var3))))))
(check-sat)
