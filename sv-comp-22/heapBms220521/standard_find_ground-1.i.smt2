(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main12 (Heap AddrRange Int Int Int) Bool)
(declare-fun inv_main20 (Heap AddrRange Int Int Int Int) Bool)
(declare-fun inv_main3 (Heap AddrRange) Bool)
(declare-fun inv_main8 (Heap AddrRange Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Heap)) (or (not (= var1 emptyHeap)) (inv_main3 (newBatchHeap (batchAlloc emptyHeap (O_Int var0) 100000)) (newAddrRange (batchAlloc emptyHeap (O_Int var0) 100000))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Heap)) (or (not (and (inv_main20 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var2 (* (- 1) (+ var0 1))) (- 1))) (is-O_Int (read var5 (nthAddrRange var4 var0)))))) (inv_main20 var5 var4 var3 var2 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (or (not (and (inv_main8 var4 var3 var2 var1 var0) (and (<= 0 (+ var1 (- 1))) (not (<= 0 (+ (+ 100000 (* (- 1) var1)) (- 1))))))) (inv_main20 var4 var3 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 AddrRange) (var9 Heap) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 AddrRange) (var16 Heap)) (or (not (and (inv_main8 var16 var15 var14 var13 var12) (and (<= 0 (+ var11 (- 1))) (and (and (= var10 0) (and (and (<= 0 (+ (+ 100000 (* (- 1) var13)) (- 1))) (is-O_Int (read var16 (nthAddrRange var15 var13)))) (and (and (and (and (and (= var9 var16) (= var8 var15)) (= var7 var14)) (= var6 var13)) (= var5 var12)) (= var4 (getInt (read var16 (nthAddrRange var15 var13))))))) (and (and (and (and (and (= var3 var9) (= var2 var8)) (= var1 var7)) (= var11 var6)) (= var0 var5)) (or (and (not (= var4 var7)) (= var10 1)) (and (= var4 var7) (= var10 0)))))))) (inv_main20 var3 var2 var1 var11 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 AddrRange) (var16 Heap)) (or (not (and (inv_main8 var16 var15 var14 var13 var12) (and (and (not (= var11 0)) (and (and (<= 0 (+ (+ 100000 (* (- 1) var13)) (- 1))) (is-O_Int (read var16 (nthAddrRange var15 var13)))) (and (and (and (and (and (= var10 var16) (= var9 var15)) (= var8 var14)) (= var7 var13)) (= var6 var12)) (= var5 (getInt (read var16 (nthAddrRange var15 var13))))))) (and (and (and (and (and (= var4 var10) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6)) (or (and (not (= var5 var8)) (= var11 1)) (and (= var5 var8) (= var11 0))))))) (inv_main8 var4 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Heap)) (or (not (and (inv_main12 var10 var9 var8 var7 var6) (and (not (<= 0 (+ (+ 100000 (* (- 1) (+ var5 1))) (- 1)))) (and (and (is-O_Int (read var10 (nthAddrRange var9 var6))) (is-O_Int (read var10 (nthAddrRange var9 var6)))) (and (and (and (and (= var4 (write var10 (nthAddrRange var9 var6) (O_Int var3))) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var5 var6)))))) (inv_main8 var4 var2 var1 var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 AddrRange) (var10 Heap)) (or (not (and (inv_main12 var10 var9 var8 var7 var6) (and (<= 0 (+ (+ 100000 (* (- 1) (+ var5 1))) (- 1))) (and (and (is-O_Int (read var10 (nthAddrRange var9 var6))) (is-O_Int (read var10 (nthAddrRange var9 var6)))) (and (and (and (and (= var4 (write var10 (nthAddrRange var9 var6) (O_Int var3))) (= var2 var9)) (= var1 var8)) (= var0 var7)) (= var5 var6)))))) (inv_main12 var4 var2 var1 var0 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Heap)) (or (not (inv_main3 var2 var1)) (inv_main12 var2 var1 var0 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main12 var4 var3 var2 var1 var0) (not (is-O_Int (read var4 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main12 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var3 var0))) (not (within var3 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main12 var4 var3 var2 var1 var0) (and (is-O_Int (read var4 (nthAddrRange var3 var0))) (not (is-O_Int (read var4 (nthAddrRange var3 var0)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main8 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ 100000 (* (- 1) var1)) (- 1))) (not (is-O_Int (read var4 (nthAddrRange var3 var1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Heap)) (not (and (inv_main8 var4 var3 var2 var1 var0) (and (and (<= 0 (+ (+ 100000 (* (- 1) var1)) (- 1))) (is-O_Int (read var4 (nthAddrRange var3 var1)))) (not (within var3 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Heap)) (not (and (inv_main20 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var4 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Heap)) (not (and (inv_main20 var5 var4 var3 var2 var1 var0) (not (within var4 (nthAddrRange var4 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Heap)) (not (and (inv_main20 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var4 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Heap)) (not (and (inv_main20 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var4 var0))) (not (within var4 (nthAddrRange var4 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Heap)) (not (and (inv_main20 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var4 var0))) (= (getInt (read var5 (nthAddrRange var4 var0))) var3))))))
(check-sat)
