(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main16 (Heap Int Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main19 (Heap Int Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main2 (Heap Int Int) Bool)
(declare-fun inv_main36 (Heap Int Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main37 (Heap Int Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main39 (Heap Int Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main40 (Heap Int Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main42 (Heap Int Int Int AddrRange AddrRange) Bool)
(assert (inv_main2 emptyHeap 0 100000))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (inv_main37 var13 var12 var11 var10 var9 var8 var7) (and (is-O_Int (read var13 (nthAddrRange var9 (+ (+ var7 (* (- 1) var10)) (- 1))))) (and (and (and (and (and (and (= var6 var13) (= var5 var12)) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 (getInt (read var13 (nthAddrRange var9 (+ (+ var7 (* (- 1) var10)) (- 1)))))))))) (inv_main39 var6 var5 var4 var3 var2 var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (inv_main39 var7 var6 var5 var4 var3 var2 var1) (and (is-O_Int (read var7 (nthAddrRange var2 (+ (+ var1 (* (- 1) var4)) (- 1))))) (is-O_Int (read var7 (nthAddrRange var2 (+ (+ var1 (* (- 1) var4)) (- 1)))))))) (inv_main36 (write var7 (nthAddrRange var2 (+ (+ var1 (* (- 1) var4)) (- 1))) (O_Int var0)) var6 var5 var4 var3 var2))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main19 var12 var11 var10 var9 var8 var7) (and (and (is-O_Int (read var12 (nthAddrRange var8 var9))) (is-O_Int (read var12 (nthAddrRange var8 var9)))) (and (and (and (and (and (= var6 (write var12 (nthAddrRange var8 var9) (O_Int var5))) (= var4 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7))))) (inv_main16 var6 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Heap) (var19 Int) (var20 Int) (var21 Heap)) (or (not (and (inv_main2 var21 var20 var19) (and (and (and (and (and (and (and (= var18 (newBatchHeap (batchAlloc var17 (O_Int var16) var15))) (= var14 var15)) (= var13 var12)) (= var11 var10)) (= var9 var8)) (= var7 (newAddrRange (batchAlloc var17 (O_Int var16) var15)))) (and (and (and (and (= var17 (newBatchHeap (batchAlloc var6 (O_Int var5) var4))) (= var15 var4)) (= var12 var3)) (= var10 var2)) (= var8 (newAddrRange (batchAlloc var6 (O_Int var5) var4))))) (and (not (= var1 0)) (and (<= 0 (+ (+ var0 (- 1)) (- 1))) (and (and (and (= var6 var21) (= var4 var0)) (= var3 var19)) (or (and (<= 0 (+ (+ var19 (* (- 1) var0)) (- 1))) (= var1 1)) (and (not (<= 0 (+ (+ var19 (* (- 1) var0)) (- 1)))) (= var1 0))))))))) (inv_main16 var18 var14 var13 0 var9 var7))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (is-O_Int (read var5 (nthAddrRange var1 var2))))) (inv_main40 var5 var4 var3 var2 var1 var0 (getInt (read var5 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main16 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ var4 (* (- 1) var2)) (- 1))))) (inv_main19 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int)) (or (not (and (inv_main16 var12 var11 var10 var9 var8 var7) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var13)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var13)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var13)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var13))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1))))) (<= 0 (+ var13 (- 1)))) (and (and (not (= var5 0)) (and (and (and (and (and (and (= var4 var12) (= var6 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var14)) (- 1))) (<= 0 (+ (+ 2 (* 1 var14)) (- 1)))) (or (not (<= 0 (+ var14 (- 1)))) (<= 0 (+ var11 (- 1))))) (or (not (<= 0 (+ (* (- 1) var14) (- 1)))) (<= 0 (+ (* (- 1) var11) (- 1))))) (= var11 (+ (* 2 var15) var14))) (= var14 0)) (= var5 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var16)) (- 1))) (<= 0 (+ (+ 2 (* 1 var16)) (- 1)))) (or (not (<= 0 (+ var16 (- 1)))) (<= 0 (+ var11 (- 1))))) (or (not (<= 0 (+ (* (- 1) var16) (- 1)))) (<= 0 (+ (* (- 1) var11) (- 1))))) (= var11 (+ (* 2 var17) var16)))) (= var16 0))) (= var5 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var18)) (- 1))) (<= 0 (+ (+ 2 (* 1 var18)) (- 1)))) (or (not (<= 0 (+ var18 (- 1)))) (<= 0 (+ var11 (- 1))))) (or (not (<= 0 (+ (* (- 1) var18) (- 1)))) (<= 0 (+ (* (- 1) var11) (- 1))))) (= var11 (+ (* 2 var19) var18))) (= var18 0)) (not (<= 0 (+ (+ var11 (* (- 1) var9)) (- 1))))))))) (inv_main37 var4 var6 var3 0 var1 var0 var6))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int)) (or (not (and (inv_main40 var12 var11 var10 var9 var8 var7 var6) (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var13)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var13)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var13)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var13))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1))))) (<= 0 (+ (+ var13 (* (- 1) (+ var4 1))) (- 1)))) (and (and (is-O_Int (read var12 (nthAddrRange var7 var9))) (is-O_Int (read var12 (nthAddrRange var7 var9)))) (and (and (and (and (and (= var3 (write var12 (nthAddrRange var7 var9) (O_Int var6))) (= var5 var11)) (= var2 var10)) (= var4 var9)) (= var1 var8)) (= var0 var7)))))) (inv_main37 var3 var5 var2 (+ var4 1) var1 var0 var5))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ (+ var4 (* (- 1) (+ var2 1))) (- 1))) (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (is-O_Int (read var5 (nthAddrRange var1 var2))))))) (inv_main42 var5 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int)) (or (not (and (inv_main16 var12 var11 var10 var9 var8 var7) (and (<= 0 (+ var6 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var6 (* (- 2) var13)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var6 (* (- 2) var13)))) (- 1)))) (or (not (<= 0 (+ (+ var6 (* (- 2) var13)) (- 1)))) (<= 0 (+ var6 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var13))) (- 1)))) (<= 0 (+ (* (- 1) var6) (- 1)))))) (<= 0 (+ var13 (- 1))))) (and (and (not (= var5 0)) (and (and (and (and (and (and (= var4 var12) (= var6 var11)) (= var3 var10)) (= var2 var9)) (= var1 var8)) (= var0 var7)) (or (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var14)) (- 1))) (<= 0 (+ (+ 2 (* 1 var14)) (- 1)))) (or (not (<= 0 (+ var14 (- 1)))) (<= 0 (+ var11 (- 1))))) (or (not (<= 0 (+ (* (- 1) var14) (- 1)))) (<= 0 (+ (* (- 1) var11) (- 1))))) (= var11 (+ (* 2 var15) var14))) (= var14 0)) (= var5 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var16)) (- 1))) (<= 0 (+ (+ 2 (* 1 var16)) (- 1)))) (or (not (<= 0 (+ var16 (- 1)))) (<= 0 (+ var11 (- 1))))) (or (not (<= 0 (+ (* (- 1) var16) (- 1)))) (<= 0 (+ (* (- 1) var11) (- 1))))) (= var11 (+ (* 2 var17) var16)))) (= var16 0))) (= var5 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 2 (* (- 1) var18)) (- 1))) (<= 0 (+ (+ 2 (* 1 var18)) (- 1)))) (or (not (<= 0 (+ var18 (- 1)))) (<= 0 (+ var11 (- 1))))) (or (not (<= 0 (+ (* (- 1) var18) (- 1)))) (<= 0 (+ (* (- 1) var11) (- 1))))) (= var11 (+ (* 2 var19) var18))) (= var18 0)) (not (<= 0 (+ (+ var11 (* (- 1) var9)) (- 1)))))))))) (inv_main42 var4 var6 var3 0 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int)) (or (not (and (inv_main40 var12 var11 var10 var9 var8 var7 var6) (and (<= 0 (+ var5 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 2 (* (- 1) (+ var5 (* (- 2) var13)))) (- 1))) (<= 0 (+ (+ 2 (* 1 (+ var5 (* (- 2) var13)))) (- 1)))) (or (not (<= 0 (+ (+ var5 (* (- 2) var13)) (- 1)))) (<= 0 (+ var5 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var13))) (- 1)))) (<= 0 (+ (* (- 1) var5) (- 1)))))) (<= 0 (+ (+ var13 (* (- 1) (+ var4 1))) (- 1))))) (and (and (is-O_Int (read var12 (nthAddrRange var7 var9))) (is-O_Int (read var12 (nthAddrRange var7 var9)))) (and (and (and (and (and (= var3 (write var12 (nthAddrRange var7 var9) (O_Int var6))) (= var5 var11)) (= var2 var10)) (= var4 var9)) (= var1 var8)) (= var0 var7))))))) (inv_main42 var3 var5 var2 0 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main19 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 var2))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main19 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 var2))) (not (is-O_Int (read var5 (nthAddrRange var1 var2)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main37 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var2 (+ (+ var0 (* (- 1) var3)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main37 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var2 (+ (+ var0 (* (- 1) var3)) (- 1))))) (not (within var2 (nthAddrRange var2 (+ (+ var0 (* (- 1) var3)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var1 (+ (+ var0 (* (- 1) var3)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var1 (+ (+ var0 (* (- 1) var3)) (- 1))))) (not (within var1 (nthAddrRange var1 (+ (+ var0 (* (- 1) var3)) (- 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var1 (+ (+ var0 (* (- 1) var3)) (- 1))))) (not (is-O_Int (read var6 (nthAddrRange var1 (+ (+ var0 (* (- 1) var3)) (- 1)))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var1 var2))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main40 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var6 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main40 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var1 var3))) (not (within var1 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main40 var6 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var6 (nthAddrRange var1 var3))) (not (is-O_Int (read var6 (nthAddrRange var1 var3)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (within var1 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (is-O_Int (read var5 (nthAddrRange var1 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (is-O_Int (read var5 (nthAddrRange var1 var2)))) (not (within var1 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (is-O_Int (read var5 (nthAddrRange var1 var2)))) (not (= (getInt (read var5 (nthAddrRange var0 var2))) (getInt (read var5 (nthAddrRange var1 var2))))))))))
(check-sat)
