(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-heap Heap Addr HeapObject
 defObj
 ((HeapObject 0)) (
  (
   (O_Int (getInt Int))
   (O_UInt (getUInt Int))
   (O_Addr (getAddr Addr))
   (defObj)
  )
))
(declare-fun inv_main2 (Heap Int) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main32 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main33 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main35 (Heap Int Int Int Int AddrRange) Bool)
(declare-fun inv_main38 (Heap Int Int Int Int AddrRange Int) Bool)
(assert (inv_main2 emptyHeap 0))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main29 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var1 (* (- 1) var3))) (<= 0 (+ var1 (- 1)))))) (inv_main32 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ var5 (* (- 1) (+ var3 1))) (- 1))))) (inv_main35 var6 var5 var4 (+ var3 1) var2 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int)) (or (not (and (inv_main29 var5 var4 var3 var2 var1 var0) (and (<= 0 (+ var4 (- 1))) (and (not (or (not (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var4 (* (- 3) var6)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var4 (* (- 3) var6)))) (- 1)))) (or (not (<= 0 (+ (+ var4 (* (- 3) var6)) (- 1)))) (<= 0 (+ var4 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var4 (* (- 3) var6))) (- 1)))) (<= 0 (+ (* (- 1) var4) (- 1)))))) (<= 0 (+ var6 (* (- 1) (+ var2 1)))))) (not (<= 0 (+ var1 (- 1)))))))) (inv_main35 var5 var4 var3 0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap) (var14 Heap) (var15 Int) (var16 Int) (var17 Int) (var18 Heap) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int)) (or (not (and (inv_main2 var18 var17) (and (<= 0 (+ var16 (- 1))) (and (and (not (or (not (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var16 (* (- 3) var19)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var16 (* (- 3) var19)))) (- 1)))) (or (not (<= 0 (+ (+ var16 (* (- 3) var19)) (- 1)))) (<= 0 (+ var16 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var16 (* (- 3) var19))) (- 1)))) (<= 0 (+ (* (- 1) var16) (- 1)))))) (<= 0 (+ var19 (- 1))))) (and (and (not (= var15 0)) (and (and (and (and (and (and (= var14 var13) (= var16 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (or (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var20)) (- 1))) (<= 0 (+ (+ 3 (* 1 var20)) (- 1)))) (or (not (<= 0 (+ var20 (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) var20) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var12 (+ (* 3 var21) var20))) (= var20 0)) (= var15 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var22)) (- 1))) (<= 0 (+ (+ 3 (* 1 var22)) (- 1)))) (or (not (<= 0 (+ var22 (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) var22) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var12 (+ (* 3 var23) var22)))) (= var22 0))) (= var15 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var24)) (- 1))) (<= 0 (+ (+ 3 (* 1 var24)) (- 1)))) (or (not (<= 0 (+ var24 (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) var24) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var12 (+ (* 3 var25) var24))) (= var24 0)) (and (and (and (and (and (= var13 (newBatchHeap (batchAlloc emptyHeap (O_Int var3) var2))) (= var12 var2)) (= var10 2)) (= var8 var1)) (= var6 var0)) (= var4 (newAddrRange (batchAlloc emptyHeap (O_Int var3) var2))))))) (<= 0 (+ (+ var2 (- 1)) (- 1))))))) (inv_main35 var14 var16 var11 0 var7 var5))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (inv_main35 var12 var11 var10 var9 var8 var7) (and (and (and (is-O_Int (read var12 (nthAddrRange var7 var9))) (not (<= 0 (+ (getInt (read var12 (nthAddrRange var7 var9))) (* (- 1) var10))))) (is-O_Int (read var12 (nthAddrRange var7 var9)))) (and (and (and (and (and (and (= var6 var12) (= var5 var11)) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7)) (or (and (= (getInt (read var12 (nthAddrRange var7 var9))) 0) (= var0 1)) (and (not (= (getInt (read var12 (nthAddrRange var7 var9))) 0)) (= var0 0))))))) (inv_main38 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (<= 0 (+ (getInt (read var5 (nthAddrRange var0 var2))) (* (- 1) var3)))))) (inv_main38 var5 var4 var3 var2 var1 var0 1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main29 var5 var4 var3 var2 var1 var0) (and (not (<= 0 (+ var1 (* (- 1) var3)))) (<= 0 (+ var1 (- 1)))))) (inv_main33 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int)) (or (not (and (inv_main29 var5 var4 var3 var2 var1 var0) (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var4 (* (- 3) var6)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var4 (* (- 3) var6)))) (- 1)))) (or (not (<= 0 (+ (+ var4 (* (- 3) var6)) (- 1)))) (<= 0 (+ var4 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var4 (* (- 3) var6))) (- 1)))) (<= 0 (+ (* (- 1) var4) (- 1))))) (<= 0 (+ var6 (* (- 1) (+ var2 1))))) (not (<= 0 (+ var1 (- 1))))))) (inv_main29 var5 var4 var3 (+ var2 1) 3 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main32 var11 var10 var9 var8 var7 var6) (and (and (is-O_Int (read var11 (nthAddrRange var6 (+ (* 3 var8) (* (- 1) var7))))) (is-O_Int (read var11 (nthAddrRange var6 (+ (* 3 var8) (* (- 1) var7)))))) (and (and (and (and (and (= var5 (write var11 (nthAddrRange var6 (+ (* 3 var8) (* (- 1) var7))) (O_Int var7))) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6))))) (inv_main29 var5 var4 var3 var2 (+ var1 (- 1)) var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (inv_main33 var11 var10 var9 var8 var7 var6) (and (and (is-O_Int (read var11 (nthAddrRange var6 (+ (* 3 var8) (* (- 1) var7))))) (is-O_Int (read var11 (nthAddrRange var6 (+ (* 3 var8) (* (- 1) var7)))))) (and (and (and (and (and (= var5 (write var11 (nthAddrRange var6 (+ (* 3 var8) (* (- 1) var7))) (O_Int 0))) (= var4 var10)) (= var3 var9)) (= var2 var8)) (= var1 var7)) (= var0 var6))))) (inv_main29 var5 var4 var3 var2 (+ var1 (- 1)) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap) (var14 Heap) (var15 Int) (var16 Int) (var17 Int) (var18 Heap) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Int) (var24 Int) (var25 Int)) (or (not (and (inv_main2 var18 var17) (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) (+ var16 (* (- 3) var19)))) (- 1))) (<= 0 (+ (+ 3 (* 1 (+ var16 (* (- 3) var19)))) (- 1)))) (or (not (<= 0 (+ (+ var16 (* (- 3) var19)) (- 1)))) (<= 0 (+ var16 (- 1))))) (or (not (<= 0 (+ (* (- 1) (+ var16 (* (- 3) var19))) (- 1)))) (<= 0 (+ (* (- 1) var16) (- 1))))) (<= 0 (+ var19 (- 1)))) (and (and (not (= var15 0)) (and (and (and (and (and (and (= var14 var13) (= var16 var12)) (= var11 var10)) (= var9 var8)) (= var7 var6)) (= var5 var4)) (or (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var20)) (- 1))) (<= 0 (+ (+ 3 (* 1 var20)) (- 1)))) (or (not (<= 0 (+ var20 (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) var20) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var12 (+ (* 3 var21) var20))) (= var20 0)) (= var15 1)) (and (not (or (not (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var22)) (- 1))) (<= 0 (+ (+ 3 (* 1 var22)) (- 1)))) (or (not (<= 0 (+ var22 (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) var22) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var12 (+ (* 3 var23) var22)))) (= var22 0))) (= var15 0))))) (and (and (and (and (and (and (<= 0 (+ (+ 3 (* (- 1) var24)) (- 1))) (<= 0 (+ (+ 3 (* 1 var24)) (- 1)))) (or (not (<= 0 (+ var24 (- 1)))) (<= 0 (+ var12 (- 1))))) (or (not (<= 0 (+ (* (- 1) var24) (- 1)))) (<= 0 (+ (* (- 1) var12) (- 1))))) (= var12 (+ (* 3 var25) var24))) (= var24 0)) (and (and (and (and (and (= var13 (newBatchHeap (batchAlloc emptyHeap (O_Int var3) var2))) (= var12 var2)) (= var10 2)) (= var8 var1)) (= var6 var0)) (= var4 (newAddrRange (batchAlloc emptyHeap (O_Int var3) var2))))))) (<= 0 (+ (+ var2 (- 1)) (- 1)))))) (inv_main29 var14 var16 var11 1 3 var5))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main32 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main32 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main32 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main33 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main33 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (within var0 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main33 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1))))) (not (is-O_Int (read var5 (nthAddrRange var0 (+ (* 3 var2) (* (- 1) var1)))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (within var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (not (is-O_Int (read var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (and (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var5 (nthAddrRange var0 var2))) (* (- 1) var3))))) (not (is-O_Int (read var5 (nthAddrRange var0 var2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main35 var5 var4 var3 var2 var1 var0) (and (and (and (is-O_Int (read var5 (nthAddrRange var0 var2))) (not (<= 0 (+ (getInt (read var5 (nthAddrRange var0 var2))) (* (- 1) var3))))) (is-O_Int (read var5 (nthAddrRange var0 var2)))) (not (within var0 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main38 var6 var5 var4 var3 var2 var1 var0) (= var0 0)))))
(check-sat)
