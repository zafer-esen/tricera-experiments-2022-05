(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main13 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main16 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main19 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main2 (Heap Int) Bool)
(declare-fun inv_main20 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main21 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main24 (Heap Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int Int AddrRange Int) Bool)
(assert (inv_main2 emptyHeap 0))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main13 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ var2 (* (- 1) var3))))) (inv_main13 var6 var5 var4 (+ var3 1) var2 (+ var1 2) var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (batchAllocHeapPostHeap emptyHeap var10 (O_Int var9) 1025) (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14 var13) (<= 0 var1)) (<= 0 var3)) (<= 0 var5)) (= var0 (AddrRange (ite (<= 0 1024) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) 1025))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var11 var7)) (= var8 var13)) true) (not (= var11 0))) (<= 0 var12)) (not (<= 0 (+ (+ (* (- 1) 10000) var12) (* (- 1) 1))))))) (inv_main13 var10 var8 var11 0 0 var12 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14 var13) (<= 0 var1)) (<= 0 var3)) (<= 0 var5)) (= var0 (AddrRange (ite (<= 0 1024) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) 1025))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var11 var7)) (= var8 var13)) true) (not (= var11 0))) (<= 0 var12)) (not (<= 0 (+ (+ (* (- 1) 10000) var12) (* (- 1) 1)))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var9) 1025 1025))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (batchAllocHeapPostHeap emptyHeap var10 (O_Int var9) 1025) (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14 var13) (<= 0 var1)) (<= 0 var3)) (<= 0 var5)) (= var0 (AddrRange (ite (<= 0 1024) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) 1025))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var11 var7)) (= var8 var13)) true) (= var11 0)) (<= 0 var12)) (not (<= 0 (+ (+ (* (- 1) 10000) var12) (* (- 1) 1))))))) (inv_main13 var10 var8 var11 0 1023 var12 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14 var13) (<= 0 var1)) (<= 0 var3)) (<= 0 var5)) (= var0 (AddrRange (ite (<= 0 1024) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) 1025))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var11 var7)) (= var8 var13)) true) (= var11 0)) (<= 0 var12)) (not (<= 0 (+ (+ (* (- 1) 10000) var12) (* (- 1) 1)))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var9) 1025 1025))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var6 (nthAddrRange var0 var3)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var3))))) (inv_main19 (writeHeap var6 (nthAddrRange var0 var3) (O_Int 0)) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (inv_main19 var6 var5 var4 var3 var2 var1 var0)) (inv_main20 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main13 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ var2 (* (- 1) var3)))))) (inv_main16 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (inv_main20 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var6 (nthAddrRange var0 var1)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var1))))) (inv_main21 (writeHeap var6 (nthAddrRange var0 var1) (O_Int 0)) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main21 var13 var12 var11 var10 var9 var8 var7) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var6 var12)) (= var5 (writeHeap var13 (nthAddrRange var7 var12) (O_Int 0)))) (is-O_Int (readHeap var13 (nthAddrRange var7 var12)))) (is-O_Int (readHeap var13 (nthAddrRange var7 var12)))) (not (<= 0 var6)))) (inv_main29 var5 var6 var4 var3 var2 var1 var0 var6))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Heap) (var13 Int) (var14 Int) (var15 AddrRange) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main21 var21 var20 var19 var18 var17 var16 var15) (= var0 var15)) (= var2 var16)) (= var4 var17)) (= var6 var18)) (= var8 var19)) (= var13 var20)) (= var11 (writeHeap var21 (nthAddrRange var15 var20) (O_Int 0)))) (is-O_Int (readHeap var21 (nthAddrRange var15 var20)))) (is-O_Int (readHeap var21 (nthAddrRange var15 var20)))) (or (and (<= 0 (+ (+ (* (- 1) var13) 1023) (* (- 1) 1))) (= var14 1)) (and (not (<= 0 (+ (+ (* (- 1) var13) 1023) (* (- 1) 1)))) (= var14 0)))) (= var1 var0)) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var10 var13)) (= var12 var11)) (<= 0 var13)) (= var14 0))) (inv_main29 var12 var10 var9 var7 var5 var3 var1 var10))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Heap) (var13 Int) (var14 Int) (var15 AddrRange) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main21 var21 var20 var19 var18 var17 var16 var15) (= var0 var15)) (= var2 var16)) (= var4 var17)) (= var6 var18)) (= var8 var19)) (= var13 var20)) (= var11 (writeHeap var21 (nthAddrRange var15 var20) (O_Int 0)))) (is-O_Int (readHeap var21 (nthAddrRange var15 var20)))) (is-O_Int (readHeap var21 (nthAddrRange var15 var20)))) (or (and (<= 0 (+ (+ (* (- 1) var13) 1023) (* (- 1) 1))) (= var14 1)) (and (not (<= 0 (+ (+ (* (- 1) var13) 1023) (* (- 1) 1)))) (= var14 0)))) (= var1 var0)) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var10 var13)) (= var12 var11)) (<= 0 var13)) (not (= var14 0)))) (inv_main24 var12 var10 var9 var7 var5 var3 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var3)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main16 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var3))))) (is-O_Int (readHeap var6 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var1) 1025) (* (- 1) 1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main20 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main20 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var1)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var1)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main20 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var1))))) (is-O_Int (readHeap var6 (nthAddrRange var0 var1)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main21 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main21 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var5)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var5)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main21 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var5))))) (is-O_Int (readHeap var6 (nthAddrRange var0 var5)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var5))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var5)))) (is-O_Int (readHeap var6 (nthAddrRange var0 var5)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var0 var5))))) (is-O_Int (readHeap var6 (nthAddrRange var0 var5)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int)) (not (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var8) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var0) (* (- 1) 1)))) (or (not (<= 0 (+ var8 (* (- 1) 1)))) (<= 0 (+ var0 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var8) 1023) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var8) 1023) (* (- 1) 1)))) (= var0 (+ (* 1023 var9) var8)))) (is-O_Int (readHeap var7 (nthAddrRange var1 var8)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (not (and (and (and (and (and (and (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var10) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var0) (* (- 1) 1)))) (or (not (<= 0 (+ var10 (* (- 1) 1)))) (<= 0 (+ var0 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var10) 1023) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var10) 1023) (* (- 1) 1)))) (= var0 (+ (* 1023 var11) var10)))) (withinHeap var1 (nthAddrRange var1 var10))))) (is-O_Int (readHeap var7 (nthAddrRange var1 var8)))) (= var0 (+ (* 1023 var9) var8))) (or (not (<= 0 (+ (* (- 1) var8) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var0) (* (- 1) 1))))) (or (not (<= 0 (+ var8 (* (- 1) 1)))) (<= 0 (+ var0 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var8) 1023) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var8) 1023) (* (- 1) 1)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int)) (not (and (and (and (and (and (and (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var10) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var0) (* (- 1) 1)))) (or (not (<= 0 (+ var10 (* (- 1) 1)))) (<= 0 (+ var0 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var10) 1023) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var10) 1023) (* (- 1) 1)))) (= var0 (+ (* 1023 var11) var10)))) (is-O_Int (readHeap var7 (nthAddrRange var1 var10)))))) (is-O_Int (readHeap var7 (nthAddrRange var1 var8)))) (= var0 (+ (* 1023 var9) var8))) (or (not (<= 0 (+ (* (- 1) var8) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var0) (* (- 1) 1))))) (or (not (<= 0 (+ var8 (* (- 1) 1)))) (<= 0 (+ var0 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var8) 1023) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var8) 1023) (* (- 1) 1)))))))
(check-sat)
