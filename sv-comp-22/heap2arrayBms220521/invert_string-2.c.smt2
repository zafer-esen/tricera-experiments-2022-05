(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main12 (Heap Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main17 (Heap Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main20 (Heap Int AddrRange AddrRange Int Int Int Int) Bool)
(declare-fun inv_main23 (Heap Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main8 (Heap Int AddrRange AddrRange Int Int Int) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main8 var13 var12 var11 var10 var9 var8 var7) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var6 var12)) (= var5 (writeHeap var13 (nthAddrRange var11 (+ var12 (* (- 1) 1))) (O_Int 0)))) (is-O_Int (readHeap var13 (nthAddrRange var11 (+ var12 (* (- 1) 1)))))) (is-O_Int (readHeap var13 (nthAddrRange var11 (+ var12 (* (- 1) 1)))))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main17 var5 var6 var4 var3 var2 (+ var6 (* (- 1) 1)) 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main20 var14 var13 var12 var11 var10 var9 var8 var7) (= var0 var8)) (= var6 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 (writeHeap var14 (nthAddrRange var11 var8) (O_Int var7)))) (is-O_Int (readHeap var14 (nthAddrRange var11 var8)))) (is-O_Int (readHeap var14 (nthAddrRange var11 var8)))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main17 var5 var4 var3 var2 var1 (+ var6 (* (- 1) 1)) (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main12 var14 var13 var12 var11 var10 var9 var8) (= var0 var8)) (= var6 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var7 var13)) (= var5 (writeHeap var14 (nthAddrRange var12 var9) (O_Int var4)))) (is-O_Int (readHeap var14 (nthAddrRange var12 var9)))) (is-O_Int (readHeap var14 (nthAddrRange var12 var9)))) (not (<= 0 (+ (+ (* (- 1) (+ var6 1)) var7) (* (- 1) 1)))))) (inv_main8 var5 var7 var3 var2 var1 (+ var6 1) var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Heap)) (or (not (and (batchAllocHeapPostHeap (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)) var6 (O_Int var3) var4) (and (and (and (and (and (and (inv_main2 var8) (<= 0 var4)) (= var1 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4))) 1) (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)))) var4))) (= var2 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var4))) (= var7 var4)) true) (not (<= 0 (+ var7 (* (- 1) 1))))))) (inv_main8 var6 var7 var2 var1 0 0 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Heap)) (or (not (and (and (and (and (and (and (inv_main2 var8) (<= 0 var4)) (= var1 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4))) 1) (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)))) var4))) (= var2 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var4))) (= var7 var4)) true) (not (<= 0 (+ var7 (* (- 1) 1)))))) (batchAllocHeap (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)) (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)) (O_Int var3) var4 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main12 var14 var13 var12 var11 var10 var9 var8) (= var0 var8)) (= var6 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var7 var13)) (= var5 (writeHeap var14 (nthAddrRange var12 var9) (O_Int var4)))) (is-O_Int (readHeap var14 (nthAddrRange var12 var9)))) (is-O_Int (readHeap var14 (nthAddrRange var12 var9)))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var7) (* (- 1) 1))))) (inv_main12 var5 var7 var3 var2 var1 (+ var6 1) var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Heap)) (or (not (and (batchAllocHeapPostHeap (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)) var6 (O_Int var3) var4) (and (and (and (and (and (and (inv_main2 var8) (<= 0 var4)) (= var1 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4))) 1) (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)))) var4))) (= var2 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var4))) (= var7 var4)) true) (<= 0 (+ var7 (* (- 1) 1)))))) (inv_main12 var6 var7 var2 var1 0 0 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Heap)) (or (not (and (and (and (and (and (and (inv_main2 var8) (<= 0 var4)) (= var1 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4))) 1) (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)))) var4))) (= var2 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var4))) (= var7 var4)) true) (<= 0 (+ var7 (* (- 1) 1))))) (batchAllocHeap (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)) (newBatchHeap (batchAllocHeap emptyHeap (O_Int var5) var4)) (O_Int var3) var4 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (or (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var6 (nthAddrRange var4 0))))) (inv_main20 var6 var5 var4 var3 var2 var1 var0 (getInt (readHeap var6 (nthAddrRange var4 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (or (not (and (and (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var6 (nthAddrRange var3 var0)))) (is-O_Int (readHeap var6 (nthAddrRange var4 var1)))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1))))) (inv_main23 var6 var5 var4 var3 var2 (+ var1 1) (+ var0 (* (- 1) 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main8 var13 var12 var11 var10 var9 var8 var7) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var6 var12)) (= var5 (writeHeap var13 (nthAddrRange var11 (+ var12 (* (- 1) 1))) (O_Int 0)))) (is-O_Int (readHeap var13 (nthAddrRange var11 (+ var12 (* (- 1) 1)))))) (is-O_Int (readHeap var13 (nthAddrRange var11 (+ var12 (* (- 1) 1)))))) (not (<= 0 (+ var6 (* (- 1) 1))))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main23 var5 var6 var4 var3 var2 0 (+ var6 (* (- 1) 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main20 var14 var13 var12 var11 var10 var9 var8 var7) (= var0 var8)) (= var5 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var6 var13)) (= var4 (writeHeap var14 (nthAddrRange var11 var8) (O_Int var7)))) (is-O_Int (readHeap var14 (nthAddrRange var11 var8)))) (is-O_Int (readHeap var14 (nthAddrRange var11 var8)))) (not (<= 0 (+ var5 (* (- 1) 1))))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main23 var4 var6 var3 var2 var1 0 (+ var6 (* (- 1) 1))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main12 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var4 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (inv_main12 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 var1)))) (is-O_Int (readHeap var6 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (inv_main12 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var4 var1))))) (is-O_Int (readHeap var6 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main8 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var4 (+ var5 (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (inv_main8 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 (+ var5 (* (- 1) 1)))))) (is-O_Int (readHeap var6 (nthAddrRange var4 (+ var5 (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (inv_main8 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var4 (+ var5 (* (- 1) 1))))))) (is-O_Int (readHeap var6 (nthAddrRange var4 (+ var5 (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var4 0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (inv_main17 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 0)))) (is-O_Int (readHeap var6 (nthAddrRange var4 0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap)) (not (and (inv_main20 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var4 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap)) (not (and (and (inv_main20 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 var1)))) (is-O_Int (readHeap var7 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap)) (not (and (and (inv_main20 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var4 var1))))) (is-O_Int (readHeap var7 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var4 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var4 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 var1)))) (is-O_Int (readHeap var6 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var3 var0))))) (is-O_Int (readHeap var6 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_Int (readHeap var6 (nthAddrRange var3 var0)))) (is-O_Int (readHeap var6 (nthAddrRange var4 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main23 var6 var5 var4 var3 var2 var1 var0) (not (= (getInt (readHeap var6 (nthAddrRange var4 var1))) (getInt (readHeap var6 (nthAddrRange var3 var0)))))) (is-O_Int (readHeap var6 (nthAddrRange var3 var0)))) (is-O_Int (readHeap var6 (nthAddrRange var4 var1)))))))
(check-sat)
