(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0) (node 0) (TreeNode 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (O_TreeNode (getTreeNode TreeNode)) (defObj))
                   ((node (h Int) (n Addr)))
                   ((TreeNode (left Addr) (right Addr)))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main10 (Heap Addr Addr) Bool)
(declare-fun inv_main102 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main103 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main107 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main11 (Heap Addr Addr) Bool)
(declare-fun inv_main13 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr) Bool)
(declare-fun inv_main17 (Heap Addr Addr) Bool)
(declare-fun inv_main21 (Heap Addr Addr) Bool)
(declare-fun inv_main27 (Heap Addr Addr) Bool)
(declare-fun inv_main28 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr) Bool)
(declare-fun inv_main3 (Heap) Bool)
(declare-fun inv_main35 (Heap Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr Addr) Bool)
(declare-fun inv_main39 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main4 (Heap Addr Addr) Bool)
(declare-fun inv_main43 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main46 (Heap Addr Addr Addr Addr) Bool)
(declare-fun inv_main49 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main5 (Heap Addr Addr) Bool)
(declare-fun inv_main50 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main51 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main55 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main57 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main58 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main6 (Heap Addr Addr) Bool)
(declare-fun inv_main63 (Heap Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main68 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main69 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main74 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main77 (Heap Addr Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main80 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main82 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main83 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main88 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main91 (Heap Addr Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main94 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main97 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main98 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main99 (Heap Addr Addr Addr Addr Addr Addr) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main3 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main36 var3 var2 var1 var0) (is-O_TreeNode (readHeap var3 var1))) (is-O_TreeNode (readHeap var3 var1)))) (inv_main35 (writeHeap var3 var1 (O_TreeNode (TreeNode (left (getTreeNode (readHeap var3 var1))) var0))) var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (inv_main68 var7 var6 var5 var4 var3 var2 var1) (not (= var0 0)))) (inv_main83 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (inv_main57 var7 var6 var5 var4) (= var0 var4)) (= var1 var5)) (= var2 var6)) (= var3 (writeHeap var7 var4 (O_TreeNode (TreeNode nullAddr (right (getTreeNode (readHeap var7 var4)))))))) (is-O_TreeNode (readHeap var7 var4))) (is-O_TreeNode (readHeap var7 var4)))) (inv_main39 (writeHeap var3 var1 defObj) var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (inv_main58 var7 var6 var5 var4) (= var0 var4)) (= var1 var5)) (= var2 var6)) (= var3 (writeHeap var7 var4 (O_TreeNode (TreeNode (left (getTreeNode (readHeap var7 var4))) nullAddr))))) (is-O_TreeNode (readHeap var7 var4))) (is-O_TreeNode (readHeap var7 var4)))) (inv_main39 (writeHeap var3 var1 defObj) var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main46 var13 var12 var11 var10 var9) (= var0 var8)) (= var1 var4)) (= var2 nullAddr)) (= var3 var6)) (= var7 (right (getTreeNode (readHeap var13 var11))))) (= var8 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (is-O_TreeNode (readHeap var13 var11))) (= var9 nullAddr)) (= var7 0)) (= var8 nullAddr))) (inv_main39 (writeHeap var3 var1 defObj) var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (inv_main6 var7 var6 var5) (= var1 nullAddr)) (= var2 var6)) (= var3 var7)) (= var4 0))) (inv_main39 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (inv_main46 var4 var3 var2 var1 var0) (not (= var0 nullAddr)))) (inv_main49 var4 var3 var2 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main46 var9 var8 var7 var6 var5) (= var4 (right (getTreeNode (readHeap var9 var7))))) (= var0 var6)) (= var1 var7)) (= var2 var8)) (= var3 var9)) (is-O_TreeNode (readHeap var9 var7))) (= var5 nullAddr)) (not (= var4 0)))) (inv_main49 var3 var2 var1 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main80 var15 var14 var13 var12 var11 var10 var9) (= var0 (n (getnode (readHeap var15 var9))))) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (= var7 var15)) (is-O_node (readHeap var15 var9))) (not (= var8 0)))) (inv_main69 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 node) (var5 Heap) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main39 var11 var10 var9 var8) (= var10 nullAddr)) (= var6 (newAddr (allocHeap var11 (O_node var4))))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var5 (newHeap (allocHeap var11 (O_node var4))))) (not (= var6 nullAddr))) (not (= var7 0)))) (inv_main69 var5 var3 var2 var1 var6 var0 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main102 var14 var13 var12 var11 var10 var9 var8) (= var7 (h (getnode (readHeap var14 var8))))) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (is-O_node (readHeap var14 var8))) (not (= var7 3)))) (inv_main107 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (inv_main88 var6 var5 var4 var3 var2 var1 var0) (is-O_node (readHeap var6 var0))) (is-O_node (readHeap var6 var0)))) (inv_main94 (writeHeap var6 var0 (O_node (node (h (getnode (readHeap var6 var0))) var1))) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 TreeNode) (var2 Heap)) (or (not (inv_main3 var2)) (inv_main4 (newHeap (allocHeap var2 (O_TreeNode var1))) (newAddr (allocHeap var2 (O_TreeNode var1))) var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main98 var14 var13 var12 var11 var10 var9 var8) (= var7 (h (getnode (readHeap var14 var8))))) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (is-O_node (readHeap var14 var8))) (not (= var7 1)))) (inv_main102 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (inv_main63 var5 var4 var3 var2 var1 var0)) (inv_main63 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (and (and (and (and (and (and (inv_main39 var9 var8 var7 var6) (= var8 nullAddr)) (= var5 (newAddr (allocHeap var9 (O_node var3))))) (= var0 var6)) (= var1 var7)) (= var2 var8)) (= var4 (newHeap (allocHeap var9 (O_node var3))))) (= var5 nullAddr))) (inv_main63 var4 var2 var1 var0 var5 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main97 var14 var13 var12 var11 var10 var9 var8) (= var7 (h (getnode (readHeap var14 var8))))) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (is-O_node (readHeap var14 var8))) (= var7 2))) (inv_main99 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 node) (var13 Heap) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main83 var22 var21 var20 var19 var18 var17 var16) (= var0 var16)) (= var2 var17)) (= var4 var18)) (= var6 var19)) (= var8 var20)) (= var10 var21)) (= var13 (writeHeap var22 var16 (O_node (node 2 (n (getnode (readHeap var22 var16)))))))) (is-O_node (readHeap var22 var16))) (is-O_node (readHeap var22 var16))) (= var15 (newAddr (allocHeap var13 (O_node var12))))) (= var1 var0)) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var11 var10)) (= var14 (newHeap (allocHeap var13 (O_node var12))))) (not (= var15 nullAddr)))) (inv_main88 var14 var11 var9 var7 var5 var15 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main46 var9 var8 var7 var6 var5) (= var3 (right (getTreeNode (readHeap var9 var7))))) (= var4 var6)) (= var0 var7)) (= var1 var8)) (= var2 var9)) (is-O_TreeNode (readHeap var9 var7))) (= var5 nullAddr)) (= var3 0)) (not (= var4 nullAddr)))) (inv_main55 var2 var1 var0 var4))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main29 var2 var1 var0) (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0)))) (inv_main21 (writeHeap var2 (left (getTreeNode (readHeap var2 var0))) (O_TreeNode (TreeNode (left (getTreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0)))))) nullAddr))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (inv_main11 var6 var5 var4) (or (and (= (left (getTreeNode (readHeap var6 var4))) nullAddr) (= var3 1)) (and (not (= (left (getTreeNode (readHeap var6 var4))) nullAddr)) (= var3 0)))) (= var0 var4)) (= var1 var5)) (= var2 var6)) (is-O_TreeNode (readHeap var6 var4))) (= var3 0))) (inv_main21 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (and (inv_main11 var7 var6 var5) (or (and (= (left (getTreeNode (readHeap var7 var5))) nullAddr) (= var3 1)) (and (not (= (left (getTreeNode (readHeap var7 var5))) nullAddr)) (= var3 0)))) (= var0 var5)) (= var1 var6)) (= var2 var7)) (is-O_TreeNode (readHeap var7 var5))) (not (= var3 0))) (= var4 0))) (inv_main21 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (inv_main77 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main77 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 node) (var13 Heap) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main69 var22 var21 var20 var19 var18 var17 var16) (= var0 var16)) (= var2 var17)) (= var4 var18)) (= var6 var19)) (= var8 var20)) (= var10 var21)) (= var13 (writeHeap var22 var16 (O_node (node 1 (n (getnode (readHeap var22 var16)))))))) (is-O_node (readHeap var22 var16))) (is-O_node (readHeap var22 var16))) (= var15 (newAddr (allocHeap var13 (O_node var12))))) (= var1 var0)) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var11 var10)) (= var14 (newHeap (allocHeap var13 (O_node var12))))) (= var15 nullAddr))) (inv_main77 var14 var11 var9 var7 var5 var15 var1 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (inv_main50 var8 var7 var6 var5) (= var0 (left (getTreeNode (readHeap var8 var6))))) (= var1 var5)) (= var2 var6)) (= var3 var7)) (= var4 var8)) (is-O_TreeNode (readHeap var8 var6)))) (inv_main43 var4 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (inv_main51 var8 var7 var6 var5) (= var0 (right (getTreeNode (readHeap var8 var6))))) (= var1 var5)) (= var2 var6)) (= var3 var7)) (= var4 var8)) (is-O_TreeNode (readHeap var8 var6)))) (inv_main43 var4 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (inv_main39 var7 var6 var5 var4) (= var0 nullAddr)) (= var1 var5)) (= var2 var6)) (= var3 var7)) (not (= var6 nullAddr)))) (inv_main43 var3 var2 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main13 var8 var7 var6 var5) (= var3 (right (getTreeNode (readHeap var8 var6))))) (= var0 var6)) (= var1 var7)) (= var2 var8)) (is-O_TreeNode (readHeap var8 var6))) (not (= var5 nullAddr))) (not (= var3 0))) (not (= var4 0)))) (inv_main16 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main97 var14 var13 var12 var11 var10 var9 var8) (= var7 (h (getnode (readHeap var14 var8))))) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (is-O_node (readHeap var14 var8))) (not (= var7 2)))) (inv_main98 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main103 var14 var13 var12 var11 var10 var9 var8) (= var0 (n (getnode (readHeap var14 var8))))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 var14)) (is-O_node (readHeap var14 var8)))) (inv_main98 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main49 var3 var2 var1 var0) (not (= (left (getTreeNode (readHeap var3 var1))) nullAddr))) (is-O_TreeNode (readHeap var3 var1)))) (inv_main50 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main27 var2 var1 var0) (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0)))) (inv_main29 (writeHeap var2 (left (getTreeNode (readHeap var2 var0))) (O_TreeNode (TreeNode nullAddr (right (getTreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0))))))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main55 var3 var2 var1 var0) (= var1 (left (getTreeNode (readHeap var3 var0))))) (is-O_TreeNode (readHeap var3 var0)))) (inv_main57 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (inv_main13 var3 var2 var1 var0) (= var0 nullAddr))) (inv_main11 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (and (inv_main13 var7 var6 var5 var4) (= var3 (right (getTreeNode (readHeap var7 var5))))) (= var0 var5)) (= var1 var6)) (= var2 var7)) (is-O_TreeNode (readHeap var7 var5))) (not (= var4 nullAddr))) (= var3 0))) (inv_main11 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main28 var3 var2 var1 var0) (is-O_TreeNode (readHeap var3 var1))) (is-O_TreeNode (readHeap var3 var1)))) (inv_main27 (writeHeap var3 var1 (O_TreeNode (TreeNode var0 (right (getTreeNode (readHeap var3 var1)))))) var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (inv_main74 var6 var5 var4 var3 var2 var1 var0) (is-O_node (readHeap var6 var0))) (is-O_node (readHeap var6 var0)))) (inv_main80 (writeHeap var6 var0 (O_node (node (h (getnode (readHeap var6 var0))) var1))) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 TreeNode) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (inv_main11 var8 var7 var6) (or (and (= (left (getTreeNode (readHeap var8 var6))) nullAddr) (= var4 1)) (and (not (= (left (getTreeNode (readHeap var8 var6))) nullAddr)) (= var4 0)))) (= var1 var6)) (= var2 var7)) (= var3 var8)) (is-O_TreeNode (readHeap var8 var6))) (not (= var4 0))) (not (= var5 0)))) (inv_main28 (newHeap (allocHeap var3 (O_TreeNode var0))) var2 var1 (newAddr (allocHeap var3 (O_TreeNode var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (inv_main10 var2 var1 var0) (is-O_TreeNode (readHeap var2 var0)))) (inv_main13 var2 var1 var0 (left (getTreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main55 var3 var2 var1 var0) (not (= var1 (left (getTreeNode (readHeap var3 var0)))))) (is-O_TreeNode (readHeap var3 var0)))) (inv_main58 var3 var2 var1 var0))))
(assert (forall ((var0 TreeNode) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Int) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (inv_main21 var8 var7 var6) (or (and (= (right (getTreeNode (readHeap var8 var6))) nullAddr) (= var4 1)) (and (not (= (right (getTreeNode (readHeap var8 var6))) nullAddr)) (= var4 0)))) (= var1 var6)) (= var2 var7)) (= var3 var8)) (is-O_TreeNode (readHeap var8 var6))) (not (= var4 0))) (not (= var5 0)))) (inv_main36 (newHeap (allocHeap var3 (O_TreeNode var0))) var2 var1 (newAddr (allocHeap var3 (O_TreeNode var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main35 var2 var1 var0) (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0)))) (inv_main37 (writeHeap var2 (right (getTreeNode (readHeap var2 var0))) (O_TreeNode (TreeNode nullAddr (right (getTreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0))))))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main94 var14 var13 var12 var11 var10 var9 var8) (= var0 (n (getnode (readHeap var14 var8))))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 var14)) (is-O_node (readHeap var14 var8)))) (inv_main68 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Int) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main80 var15 var14 var13 var12 var11 var10 var9) (= var0 (n (getnode (readHeap var15 var9))))) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (= var7 var15)) (is-O_node (readHeap var15 var9))) (= var8 0))) (inv_main68 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 node) (var5 Heap) (var6 Addr) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main39 var11 var10 var9 var8) (= var10 nullAddr)) (= var6 (newAddr (allocHeap var11 (O_node var4))))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var5 (newHeap (allocHeap var11 (O_node var4))))) (not (= var6 nullAddr))) (= var7 0))) (inv_main68 var5 var3 var2 var1 var6 var0 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main4 var2 var1 var0) (is-O_TreeNode (readHeap var2 var1))) (is-O_TreeNode (readHeap var2 var1)))) (inv_main5 (writeHeap var2 var1 (O_TreeNode (TreeNode nullAddr (right (getTreeNode (readHeap var2 var1)))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main98 var14 var13 var12 var11 var10 var9 var8) (= var7 (h (getnode (readHeap var14 var8))))) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (is-O_node (readHeap var14 var8))) (= var7 1))) (inv_main103 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (inv_main16 var6 var5 var4) (= var0 (left (getTreeNode (readHeap var6 var4))))) (= var1 var4)) (= var2 var5)) (= var3 var6)) (is-O_TreeNode (readHeap var6 var4)))) (inv_main10 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (inv_main17 var6 var5 var4) (= var0 (right (getTreeNode (readHeap var6 var4))))) (= var1 var4)) (= var2 var5)) (= var3 var6)) (is-O_TreeNode (readHeap var6 var4)))) (inv_main10 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (inv_main6 var3 var2 var1) (not (= var0 0)))) (inv_main10 var3 var2 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (inv_main91 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main91 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 node) (var13 Heap) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main83 var22 var21 var20 var19 var18 var17 var16) (= var0 var16)) (= var2 var17)) (= var4 var18)) (= var6 var19)) (= var8 var20)) (= var10 var21)) (= var13 (writeHeap var22 var16 (O_node (node 2 (n (getnode (readHeap var22 var16)))))))) (is-O_node (readHeap var22 var16))) (is-O_node (readHeap var22 var16))) (= var15 (newAddr (allocHeap var13 (O_node var12))))) (= var1 var0)) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var11 var10)) (= var14 (newHeap (allocHeap var13 (O_node var12))))) (= var15 nullAddr))) (inv_main91 var14 var11 var9 var7 var5 var15 var1 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Int) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main13 var8 var7 var6 var5) (= var3 (right (getTreeNode (readHeap var8 var6))))) (= var0 var6)) (= var1 var7)) (= var2 var8)) (is-O_TreeNode (readHeap var8 var6))) (not (= var5 nullAddr))) (not (= var3 0))) (= var4 0))) (inv_main17 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (inv_main43 var3 var2 var1 var0) (is-O_TreeNode (readHeap var3 var1)))) (inv_main46 var3 var2 var1 var0 (left (getTreeNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main49 var3 var2 var1 var0) (= (left (getTreeNode (readHeap var3 var1))) nullAddr)) (is-O_TreeNode (readHeap var3 var1)))) (inv_main51 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 node) (var13 Heap) (var14 Heap) (var15 Addr) (var16 Addr) (var17 Addr) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main69 var22 var21 var20 var19 var18 var17 var16) (= var0 var16)) (= var2 var17)) (= var4 var18)) (= var6 var19)) (= var8 var20)) (= var10 var21)) (= var13 (writeHeap var22 var16 (O_node (node 1 (n (getnode (readHeap var22 var16)))))))) (is-O_node (readHeap var22 var16))) (is-O_node (readHeap var22 var16))) (= var15 (newAddr (allocHeap var13 (O_node var12))))) (= var1 var0)) (= var3 var2)) (= var5 var4)) (= var7 var6)) (= var9 var8)) (= var11 var10)) (= var14 (newHeap (allocHeap var13 (O_node var12))))) (not (= var15 nullAddr)))) (inv_main74 var14 var11 var9 var7 var5 var15 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main5 var2 var1 var0) (is-O_TreeNode (readHeap var2 var1))) (is-O_TreeNode (readHeap var2 var1)))) (inv_main6 (writeHeap var2 var1 (O_TreeNode (TreeNode (left (getTreeNode (readHeap var2 var1))) nullAddr))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main37 var2 var1 var0) (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0)))) (inv_main6 (writeHeap var2 (right (getTreeNode (readHeap var2 var0))) (O_TreeNode (TreeNode (left (getTreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0)))))) nullAddr))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (inv_main21 var6 var5 var4) (or (and (= (right (getTreeNode (readHeap var6 var4))) nullAddr) (= var3 1)) (and (not (= (right (getTreeNode (readHeap var6 var4))) nullAddr)) (= var3 0)))) (= var0 var4)) (= var1 var5)) (= var2 var6)) (is-O_TreeNode (readHeap var6 var4))) (= var3 0))) (inv_main6 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (and (inv_main21 var7 var6 var5) (or (and (= (right (getTreeNode (readHeap var7 var5))) nullAddr) (= var3 1)) (and (not (= (right (getTreeNode (readHeap var7 var5))) nullAddr)) (= var3 0)))) (= var0 var5)) (= var1 var6)) (= var2 var7)) (is-O_TreeNode (readHeap var7 var5))) (not (= var3 0))) (= var4 0))) (inv_main6 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (inv_main68 var7 var6 var5 var4 var3 var2 var1) (= var0 0))) (inv_main82 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main99 var14 var13 var12 var11 var10 var9 var8) (= var0 (n (getnode (readHeap var14 var8))))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 var14)) (is-O_node (readHeap var14 var8)))) (inv_main97 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main82 var13 var12 var11 var10 var9 var8 var7) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 (writeHeap var13 var7 (O_node (node 3 (n (getnode (readHeap var13 var7)))))))) (is-O_node (readHeap var13 var7))) (is-O_node (readHeap var13 var7)))) (inv_main97 var6 var5 var4 var3 var2 var1 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main4 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main4 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var1)))) (is-O_TreeNode (readHeap var2 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main5 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main5 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var1)))) (is-O_TreeNode (readHeap var2 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main10 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main13 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))) (not (= var0 nullAddr))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main16 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main17 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main11 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main28 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main28 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))) (is-O_TreeNode (readHeap var3 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main27 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main27 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main27 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main29 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main29 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main29 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 (left (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main21 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main36 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main36 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))) (is-O_TreeNode (readHeap var3 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main35 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main35 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main35 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main37 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main37 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main37 var2 var1 var0) (not (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0))))))) (is-O_TreeNode (readHeap var2 (right (getTreeNode (readHeap var2 var0)))))) (is-O_TreeNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main43 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap)) (not (and (and (inv_main46 var4 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var4 var2)))) (= var0 nullAddr)))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main49 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main50 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main51 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main55 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main57 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main57 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var0)))) (is-O_TreeNode (readHeap var3 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main58 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main58 var3 var2 var1 var0) (not (is-O_TreeNode (readHeap var3 var0)))) (is-O_TreeNode (readHeap var3 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main69 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (and (inv_main69 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))) (is-O_node (readHeap var6 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main74 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (and (inv_main74 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))) (is-O_node (readHeap var6 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main80 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main83 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (and (inv_main83 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))) (is-O_node (readHeap var6 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main88 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (and (inv_main88 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))) (is-O_node (readHeap var6 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main94 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main82 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (and (inv_main82 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))) (is-O_node (readHeap var6 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main97 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main99 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main98 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main103 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (and (inv_main102 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var6 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (not (inv_main107 var6 var5 var4 var3 var2 var1 var0))))
(check-sat)
