(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (next Addr)))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main15 (Heap Int Int Addr) Bool)
(declare-fun inv_main19 (Heap Int Int Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Int Int Addr Addr Int) Bool)
(declare-fun inv_main30 (Heap Int Addr Int Int Int) Bool)
(declare-fun inv_main36 (Heap Int Addr Int Int) Bool)
(declare-fun inv_main42 (Heap Int Addr Int Int Int Int Int) Bool)
(declare-fun inv_main47 (Heap Int Addr Int Int Int) Bool)
(declare-fun inv_main56 (Heap Int Addr Int Int Int Int Int Addr Int) Bool)
(declare-fun inv_main6 (Heap Int Int Int) Bool)
(declare-fun inv_main61 (Heap Int Addr Int Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main63 (Heap Int Addr Int Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main66 (Heap Int Addr Int Int Int Int Int Addr Addr Addr) Bool)
(declare-fun inv_main77 (Heap Int Addr Int Int Int Addr Int) Bool)
(declare-fun inv_main83 (Heap Int Addr Int Int Addr) Bool)
(declare-fun inv_main86 (Heap Int Addr Int Int) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Addr) (var20 Int) (var21 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main61 var21 var20 var19 var18 var17 var16 var15 var14 var13 var12 var11) (= var0 var11)) (= var10 var12)) (= var1 var13)) (= var2 var14)) (= var3 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var7 var19)) (= var8 var20)) (= var9 (writeHeap var21 var13 (O_node (node var11))))) (is-O_node (readHeap var21 var13))) (is-O_node (readHeap var21 var13))) (not (= var10 nullAddr)))) (inv_main66 var9 var8 var7 var6 var5 var4 var3 var2 var1 var10 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main77 var16 var15 var14 var13 var12 var11 var10 var9) (= var8 (next (getnode (readHeap var16 var10))))) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_node (readHeap var16 var10))) (not (= var8 nullAddr)))) (inv_main77 var7 var6 var5 var4 var3 var2 var8 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (and (inv_main36 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1))))) (not (= var2 nullAddr)))) (inv_main77 var4 var3 var2 var1 var0 (+ var1 var3) var2 1))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (and (and (and (and (and (and (inv_main15 var9 var8 var7 var6) (<= 0 (+ var7 (* (- 1) 1)))) (= var5 (newAddr (allocHeap var9 (O_node var3))))) (= var0 var6)) (= var1 (+ var7 (* (- 1) 1)))) (= var2 var8)) (= var4 (newHeap (allocHeap var9 (O_node var3))))) (not (= nullAddr var5)))) (inv_main19 var4 var2 var1 var0 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (and (inv_main30 var6 var5 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var1) var2) (* (- 1) 1)))) (not (= var0 0)))) (inv_main30 var6 var5 var4 var3 var2 (+ var1 1)))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main15 var3 var2 var1 var0) (not (<= 0 (+ var1 (* (- 1) 1)))))) (inv_main30 var3 var2 var0 0 (+ var2 (* (- 1) 1)) 0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Int) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main77 var16 var15 var14 var13 var12 var11 var10 var9) (= var6 (next (getnode (readHeap var16 var10))))) (= var7 var9)) (= var0 var10)) (= var8 var11)) (= var1 var12)) (= var2 var13)) (= var3 var14)) (= var4 var15)) (= var5 var16)) (is-O_node (readHeap var16 var10))) (= var6 nullAddr)) (not (= var8 var7)))) (inv_main86 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (and (and (inv_main36 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1))))) (= var2 nullAddr)) (not (= (+ var1 var3) 0)))) (inv_main86 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Addr) (var21 Int) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main63 var22 var21 var20 var19 var18 var17 var16 var15 var14 var13 var12) (= var0 (next (getnode (readHeap var22 var12))))) (= var1 var12)) (= var2 var13)) (= var3 var14)) (= var11 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var7 var19)) (= var8 var20)) (= var9 var21)) (= var10 var22)) (is-O_node (readHeap var22 var12))) (<= 0 (+ var11 (* (- 1) 1))))) (inv_main63 var10 var9 var8 var7 var6 var5 var4 (+ var11 (* (- 1) 1)) var3 var0 var0))))
(assert (forall ((var0 node) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int) (var17 Heap) (var18 Heap) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Addr) (var24 Int) (var25 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main47 var25 var24 var23 var22 var21 var20) (= var2 (newAddr (allocHeap var25 (O_node var0))))) (= var4 var20)) (= var5 2)) (= var7 var20)) (= var9 var21)) (= var11 var22)) (= var13 var23)) (= var15 var24)) (= var17 (newHeap (allocHeap var25 (O_node var0))))) (not (= nullAddr var2))) (= var1 nullAddr)) (= var3 var2)) (= var19 var4)) (= var6 var5)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var16 var15)) (= var18 var17)) (<= 0 (+ var19 (* (- 1) 1))))) (inv_main63 var18 var16 var14 var12 var10 var8 var6 (+ var19 (* (- 1) 1)) var3 var14 var14))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Heap) (var6 Addr) (var7 Addr) (var8 Int) (var9 Int) (var10 Addr) (var11 Int) (var12 Heap) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int) (var17 Addr) (var18 Int) (var19 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main83 var19 var18 var17 var16 var15 var14) (= var13 var6)) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 (writeHeap var12 var7 defObj))) (= var6 (next (getnode (readHeap var19 var14))))) (= var7 var14)) (= var8 var15)) (= var9 var16)) (= var10 var17)) (= var11 var18)) (= var12 var19)) (is-O_node (readHeap var19 var14))) (not (= var13 nullAddr)))) (inv_main83 var5 var4 var3 var2 var1 var13))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Addr) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main77 var16 var15 var14 var13 var12 var11 var10 var9) (= var5 (next (getnode (readHeap var16 var10))))) (= var6 var9)) (= var0 var10)) (= var7 var11)) (= var1 var12)) (= var2 var13)) (= var8 var14)) (= var3 var15)) (= var4 var16)) (is-O_node (readHeap var16 var10))) (= var5 nullAddr)) (= var7 var6)) (not (= var8 nullAddr)))) (inv_main83 var4 var3 var8 var2 var1 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (and (and (and (inv_main36 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1))))) (= var2 nullAddr)) (= (+ var1 var3) 0)) (not (= var2 nullAddr)))) (inv_main83 var4 var3 var2 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Heap)) (or (not (and (and (inv_main42 var8 var7 var6 var5 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var1) var2) (* (- 1) 1)))) (not (= var0 0)))) (inv_main42 var8 var7 var6 var5 var4 var3 var2 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap)) (or (not (and (inv_main36 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1))))) (inv_main42 var4 var3 var2 var1 var0 0 (+ (+ var0 (* (- 1) 1)) var3) 0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap) (var11 Int) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Addr) (var21 Int) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main63 var22 var21 var20 var19 var18 var17 var16 var15 var14 var13 var12) (= var0 (next (getnode (readHeap var22 var12))))) (= var1 var12)) (= var2 var13)) (= var3 var14)) (= var11 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var7 var19)) (= var8 var20)) (= var9 var21)) (= var10 var22)) (is-O_node (readHeap var22 var12))) (not (<= 0 (+ var11 (* (- 1) 1)))))) (inv_main61 var10 var9 var8 var7 var6 var5 var4 (+ var11 (* (- 1) 1)) var3 var2 var0))))
(assert (forall ((var0 node) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Addr) (var15 Int) (var16 Int) (var17 Heap) (var18 Heap) (var19 Int) (var20 Int) (var21 Int) (var22 Int) (var23 Addr) (var24 Int) (var25 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main47 var25 var24 var23 var22 var21 var20) (= var2 (newAddr (allocHeap var25 (O_node var0))))) (= var4 var20)) (= var5 2)) (= var7 var20)) (= var9 var21)) (= var11 var22)) (= var13 var23)) (= var15 var24)) (= var17 (newHeap (allocHeap var25 (O_node var0))))) (not (= nullAddr var2))) (= var1 nullAddr)) (= var3 var2)) (= var19 var4)) (= var6 var5)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var16 var15)) (= var18 var17)) (not (<= 0 (+ var19 (* (- 1) 1)))))) (inv_main61 var18 var16 var14 var12 var10 var8 var6 (+ var19 (* (- 1) 1)) var3 var1 var14))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (and (inv_main6 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var1) var2) (* (- 1) 1)))) (not (= var0 0)))) (inv_main6 var4 var3 var2 (+ var1 1)))))
(assert (forall ((var0 Heap)) (or (not (inv_main2 var0)) (inv_main6 var0 2 5 2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (inv_main56 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main56 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 node) (var8 Heap) (var9 Addr) (var10 Int) (var11 Int) (var12 Int) (var13 Addr) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main47 var15 var14 var13 var12 var11 var10) (= var9 (newAddr (allocHeap var15 (O_node var7))))) (= var0 var10)) (= var1 2)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (= var8 (newHeap (allocHeap var15 (O_node var7))))) (= nullAddr var9))) (inv_main56 var8 var6 var5 var4 var3 var2 var1 var0 var9 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (and (and (and (and (and (and (inv_main19 var9 var8 var7 var6 var5) (= var0 var5)) (= var1 var6)) (= var2 var7)) (= var3 var8)) (= var4 (writeHeap var9 var5 (O_node (node var6))))) (is-O_node (readHeap var9 var5))) (is-O_node (readHeap var9 var5)))) (inv_main15 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap)) (or (not (and (inv_main6 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1)))))) (inv_main15 var3 var0 var0 nullAddr))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (and (inv_main6 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var1) var2) (* (- 1) 1)))) (= var0 0))) (inv_main15 var4 var1 var1 nullAddr))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (or (not (and (inv_main42 var7 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1)))))) (inv_main47 var7 var6 var5 var4 var3 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Addr) (var7 Int) (var8 Heap)) (or (not (and (and (inv_main42 var8 var7 var6 var5 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var1) var2) (* (- 1) 1)))) (= var0 0))) (inv_main47 var8 var7 var6 var5 var4 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Heap)) (or (not (inv_main22 var5 var4 var3 var2 var1 var0)) (inv_main22 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (and (and (and (and (and (and (inv_main15 var9 var8 var7 var6) (<= 0 (+ var7 (* (- 1) 1)))) (= var5 (newAddr (allocHeap var9 (O_node var3))))) (= var0 var6)) (= var1 (+ var7 (* (- 1) 1)))) (= var2 var8)) (= var4 (newHeap (allocHeap var9 (O_node var3))))) (= nullAddr var5))) (inv_main22 var4 var2 var1 var0 var5 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main66 var18 var17 var16 var15 var14 var13 var12 var11 var10 var9 var8) (= var0 var11)) (= var1 var12)) (= var2 var13)) (= var3 var14)) (= var4 var15)) (= var5 var16)) (= var6 var17)) (= var7 (writeHeap var18 var9 (O_node (node var10))))) (is-O_node (readHeap var18 var9))) (is-O_node (readHeap var18 var9)))) (inv_main36 var7 var6 var5 var4 (+ var3 1)))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Addr) (var20 Int) (var21 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main61 var21 var20 var19 var18 var17 var16 var15 var14 var13 var12 var11) (= var0 var11)) (= var10 var12)) (= var1 var13)) (= var2 var14)) (= var3 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var7 var19)) (= var8 var20)) (= var9 (writeHeap var21 var13 (O_node (node var11))))) (is-O_node (readHeap var21 var13))) (is-O_node (readHeap var21 var13))) (= var10 nullAddr))) (inv_main36 var9 var8 var1 var6 (+ var5 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (and (inv_main30 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var0) var1) (* (- 1) 1)))))) (inv_main36 var5 var4 var3 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Addr) (var5 Int) (var6 Heap)) (or (not (and (and (inv_main30 var6 var5 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var1) var2) (* (- 1) 1)))) (= var0 0))) (inv_main36 var6 var5 var4 var1 0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main19 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var4 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main19 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var4 var0)))) (is-O_node (readHeap var4 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap)) (not (and (inv_main63 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var10 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap)) (not (and (inv_main61 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var10 var2)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap)) (not (and (and (inv_main61 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var10 var2)))) (is-O_node (readHeap var10 var2))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap)) (not (and (inv_main66 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var10 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Addr) (var9 Int) (var10 Heap)) (not (and (and (inv_main66 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var10 var1)))) (is-O_node (readHeap var10 var1))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Int) (var4 Int) (var5 Addr) (var6 Int) (var7 Heap)) (not (and (inv_main77 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var7 var1)))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Int) (var3 Addr) (var4 Int) (var5 Heap)) (not (and (inv_main83 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var5 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Addr) (var3 Int) (var4 Heap)) (not (inv_main86 var4 var3 var2 var1 var0))))
(check-sat)
