(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main14 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main18 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main23 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main27 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main34 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main36 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main39 (Heap AddrRange AddrRange Int Int Int Int Int Int) Bool)
(declare-fun inv_main4 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main42 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main5 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(declare-fun inv_main9 (Heap AddrRange AddrRange Int Int Int Int Int) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Heap) (var9 Heap)) (or (not (and (batchAllocHeapPostHeap (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 5)) var8 (O_Int var6) 5) (and (and (and (= var9 emptyHeap) (= var4 (AddrRange (ite (<= 0 4) (+ (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 5))) 1) (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 5)))) 5))) (= var5 (AddrRange (ite (<= 0 4) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) 5))) true))) (inv_main4 var8 var5 var4 var3 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Heap) (var9 Heap)) (or (not (and (and (and (= var9 emptyHeap) (= var4 (AddrRange (ite (<= 0 4) (+ (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 5))) 1) (HeapSize (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 5)))) 5))) (= var5 (AddrRange (ite (<= 0 4) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) 5))) true)) (batchAllocHeap (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 5)) (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 5)) (O_Int var6) 5 5))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main27 var16 var15 var14 var13 var12 var11 var10 var9) (= var6 (getInt (readHeap var16 (nthAddrRange var14 var10))))) (= var0 var9)) (= var8 var10)) (= var7 var11)) (= var1 var12)) (= var2 var13)) (= var3 var14)) (= var4 var15)) (= var5 var16)) (is-O_Int (readHeap var16 (nthAddrRange var14 var10)))) (= var6 0)) (<= 0 (+ var8 (* (- 1) var7))))) (inv_main34 var5 var4 var3 0 0 var7 var8 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Heap)) (or (not (and (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 (getInt (readHeap var8 (nthAddrRange var6 var4))))) (is-O_Int (readHeap var8 (nthAddrRange var6 var4))))) (inv_main34 var8 var7 var6 (+ var5 1) (+ var4 1) var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Heap)) (or (not (and (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var0 (getInt (readHeap var8 (nthAddrRange var6 var4)))))) (is-O_Int (readHeap var8 (nthAddrRange var6 var4))))) (inv_main34 var8 var7 var6 (+ (+ (* (- 1) var4) var5) 1) 0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (or (not (inv_main4 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main9 var7 var6 var5 0 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main9 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var8 var13)) (= var4 var14)) (= var5 var15)) (= var7 (writeHeap var16 (nthAddrRange var15 var13) (O_Int var6)))) (is-O_Int (readHeap var16 (nthAddrRange var15 var13)))) (is-O_Int (readHeap var16 (nthAddrRange var15 var13)))) (<= 0 (+ (+ (* (- 1) (+ var8 1)) 5) (* (- 1) 1))))) (inv_main9 var7 var5 var4 (+ var8 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main14 var16 var15 var14 var13 var12 var11 var10 var9) (= var8 (getInt (readHeap var16 (nthAddrRange var14 4))))) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_Int (readHeap var16 (nthAddrRange var14 4)))) (= var8 0))) (inv_main23 var7 var6 var5 var4 var3 0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main23 var16 var15 var14 var13 var12 var11 var10 var9) (= var8 (getInt (readHeap var16 (nthAddrRange var15 var11))))) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_Int (readHeap var16 (nthAddrRange var15 var11)))) (not (= var8 0)))) (inv_main23 var7 var6 var5 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main23 var16 var15 var14 var13 var12 var11 var10 var9) (= var8 (getInt (readHeap var16 (nthAddrRange var15 var11))))) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_Int (readHeap var16 (nthAddrRange var15 var11)))) (= var8 0))) (inv_main27 var7 var6 var5 var4 var3 var2 0 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main27 var16 var15 var14 var13 var12 var11 var10 var9) (= var8 (getInt (readHeap var16 (nthAddrRange var14 var10))))) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_Int (readHeap var16 (nthAddrRange var14 var10)))) (not (= var8 0)))) (inv_main27 var7 var6 var5 var4 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (or (not (and (inv_main36 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var7 (nthAddrRange var6 var4))))) (inv_main39 var7 var6 var5 var4 var3 var2 var1 var0 (getInt (readHeap var7 (nthAddrRange var6 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main5 var16 var15 var14 var13 var12 var11 var10 var9) (= var8 (getInt (readHeap var16 (nthAddrRange var15 4))))) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (is-O_Int (readHeap var16 (nthAddrRange var15 4)))) (= var8 0))) (inv_main18 var7 var6 var5 0 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main18 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var8 var13)) (= var4 var14)) (= var5 var15)) (= var7 (writeHeap var16 (nthAddrRange var14 var13) (O_Int var6)))) (is-O_Int (readHeap var16 (nthAddrRange var14 var13)))) (is-O_Int (readHeap var16 (nthAddrRange var14 var13)))) (<= 0 (+ (+ (* (- 1) (+ var8 1)) 5) (* (- 1) 1))))) (inv_main18 var7 var5 var4 (+ var8 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (or (not (and (and (inv_main34 var7 var6 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var3) var1) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var4) var2) (* (- 1) 1))))) (inv_main36 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (or (not (and (inv_main34 var7 var6 var5 var4 var3 var2 var1 var0) (or (not (<= 0 (+ (+ (* (- 1) var4) var2) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) var3) var1) (* (- 1) 1))))))) (and (or (not (<= 0 (+ (+ (* (- 1) (+ var1 (* (- 1) 1))) var3) (* (- 1) 1)))) (inv_main42 var7 var6 var5 var4 var3 var2 var1 1)) (or (not (not (<= 0 (+ (+ (* (- 1) (+ var1 (* (- 1) 1))) var3) (* (- 1) 1))))) (inv_main42 var7 var6 var5 var4 var3 var2 var1 0))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main9 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var8 var13)) (= var4 var14)) (= var5 var15)) (= var7 (writeHeap var16 (nthAddrRange var15 var13) (O_Int var6)))) (is-O_Int (readHeap var16 (nthAddrRange var15 var13)))) (is-O_Int (readHeap var16 (nthAddrRange var15 var13)))) (not (<= 0 (+ (+ (* (- 1) (+ var8 1)) 5) (* (- 1) 1)))))) (inv_main5 var7 var5 var4 (+ var8 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 AddrRange) (var15 AddrRange) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main18 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var8 var13)) (= var4 var14)) (= var5 var15)) (= var7 (writeHeap var16 (nthAddrRange var14 var13) (O_Int var6)))) (is-O_Int (readHeap var16 (nthAddrRange var14 var13)))) (is-O_Int (readHeap var16 (nthAddrRange var14 var13)))) (not (<= 0 (+ (+ (* (- 1) (+ var8 1)) 5) (* (- 1) 1)))))) (inv_main14 var7 var5 var4 (+ var8 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (inv_main9 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var6 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main9 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var6 (nthAddrRange var6 var4)))) (is-O_Int (readHeap var7 (nthAddrRange var6 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main9 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var6 var4))))) (is-O_Int (readHeap var7 (nthAddrRange var6 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (inv_main5 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var6 4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main5 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var6 (nthAddrRange var6 4)))) (is-O_Int (readHeap var7 (nthAddrRange var6 4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (inv_main18 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var5 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main18 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var5 (nthAddrRange var5 var4)))) (is-O_Int (readHeap var7 (nthAddrRange var5 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main18 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var5 var4))))) (is-O_Int (readHeap var7 (nthAddrRange var5 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (inv_main14 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var5 4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main14 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var5 (nthAddrRange var5 4)))) (is-O_Int (readHeap var7 (nthAddrRange var5 4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (inv_main23 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var6 var2))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main23 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var6 (nthAddrRange var6 var2)))) (is-O_Int (readHeap var7 (nthAddrRange var6 var2)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (inv_main27 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var5 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main27 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var5 (nthAddrRange var5 var1)))) (is-O_Int (readHeap var7 (nthAddrRange var5 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (inv_main36 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var6 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main36 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var6 (nthAddrRange var6 var4)))) (is-O_Int (readHeap var7 (nthAddrRange var6 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Heap)) (not (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var6 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Heap)) (not (and (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var6 (nthAddrRange var6 var4)))) (is-O_Int (readHeap var8 (nthAddrRange var6 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 Heap)) (not (and (and (inv_main42 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var0 1))) (not (= var0 0))))))
(check-sat)
