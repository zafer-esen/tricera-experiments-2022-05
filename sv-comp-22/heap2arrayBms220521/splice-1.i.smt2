(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (h Int) (n Addr)))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main16 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main17 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main21 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main22 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main27 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main3 (Heap Int) Bool)
(declare-fun inv_main30 (Heap Int Addr Addr Addr Addr Addr Addr Addr Int) Bool)
(declare-fun inv_main33 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main35 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main43 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main47 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main50 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main51 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main58 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main59 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main66 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main67 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main72 (Heap Int Addr Addr Addr Addr Addr Addr Addr) Bool)
(declare-fun inv_main8 (Heap Int Addr Int) Bool)
(assert (forall ((var0 Heap)) (or (not (= var0 emptyHeap)) (inv_main3 var0 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (or (not (and (and (inv_main17 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (readHeap var8 var0))) (is-O_node (readHeap var8 var0)))) (inv_main35 (writeHeap var8 var0 (O_node (node 3 (n (getnode (readHeap var8 var0)))))) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (and (inv_main16 var9 var8 var7 var6 var5 var4 var3 var2 var1) (not (= var0 0))) (not (= var8 0)))) (inv_main21 var9 var8 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main59 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (n (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (not (= var9 nullAddr)))) (inv_main58 var8 var7 var6 var5 var4 var3 var2 var1 var9))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Heap) (var8 Int) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main43 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var8 (h (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var9 var14)) (= var4 var15)) (= var5 var16)) (= var6 var17)) (= var7 var18)) (is-O_node (readHeap var18 var10))) (= var8 3)) (not (= var9 nullAddr)))) (inv_main58 var7 var6 var5 var4 var9 var3 var2 var1 var9))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Int) (var3 Heap)) (or (not (inv_main8 var3 var2 var1 var0)) (inv_main8 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 node) (var2 Heap) (var3 Addr) (var4 Int) (var5 Heap)) (or (not (and (and (and (and (inv_main3 var5 var4) (= var3 (newAddr (allocHeap var5 (O_node var1))))) (= var0 var4)) (= var2 (newHeap (allocHeap var5 (O_node var1))))) (= var3 nullAddr))) (inv_main8 var2 var0 var3 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (inv_main30 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main30 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 node) (var17 Heap) (var18 Heap) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Addr) (var27 Int) (var28 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main21 var28 var27 var26 var25 var24 var23 var22 var21 var20) (= var1 var20)) (= var3 var21)) (= var5 var22)) (= var7 var23)) (= var9 var24)) (= var11 var25)) (= var13 var26)) (= var0 var27)) (= var17 (writeHeap var28 var20 (O_node (node 1 (n (getnode (readHeap var28 var20)))))))) (is-O_node (readHeap var28 var20))) (is-O_node (readHeap var28 var20))) (= var19 (newAddr (allocHeap var17 (O_node var16))))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var15 0)) (= var18 (newHeap (allocHeap var17 (O_node var16))))) (= var19 nullAddr))) (inv_main30 var18 var15 var14 var19 var10 var8 var6 var4 var2 1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 node) (var17 Heap) (var18 Heap) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Addr) (var27 Int) (var28 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main22 var28 var27 var26 var25 var24 var23 var22 var21 var20) (= var1 var20)) (= var3 var21)) (= var5 var22)) (= var7 var23)) (= var9 var24)) (= var11 var25)) (= var13 var26)) (= var0 var27)) (= var17 (writeHeap var28 var20 (O_node (node 2 (n (getnode (readHeap var28 var20)))))))) (is-O_node (readHeap var28 var20))) (is-O_node (readHeap var28 var20))) (= var19 (newAddr (allocHeap var17 (O_node var16))))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var15 1)) (= var18 (newHeap (allocHeap var17 (O_node var16))))) (= var19 nullAddr))) (inv_main30 var18 var15 var14 var19 var10 var8 var6 var4 var2 1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main33 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var0 (n (getnode (readHeap var18 var10))))) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var8 var17)) (= var9 var18)) (is-O_node (readHeap var18 var10)))) (inv_main16 var9 var8 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 node) (var7 Heap) (var8 Addr) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (inv_main3 var10 var9) (= var8 (newAddr (allocHeap var10 (O_node var6))))) (= var5 var9)) (= var7 (newHeap (allocHeap var10 (O_node var6))))) (not (= var8 nullAddr)))) (inv_main16 var7 var5 var8 var4 var3 var2 var1 var0 var8))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Heap) (var18 Addr) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Int) (var26 Heap) (var27 Int) (var28 Addr) (var29 Addr) (var30 Addr) (var31 Addr) (var32 Addr) (var33 Addr) (var34 Addr) (var35 Int) (var36 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main35 var36 var35 var34 var33 var32 var31 var30 var29 var28) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 nullAddr)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var8 var17)) (= var9 var18)) (= var10 var19)) (= var11 var20)) (= var12 var21)) (= var13 nullAddr)) (= var14 var23)) (= var15 var24)) (= var16 1)) (= var17 var26)) (= var27 (h (getnode (readHeap var36 var34))))) (= var18 var28)) (= var19 var29)) (= var20 var30)) (= var21 var31)) (= var22 var32)) (= var23 var33)) (= var24 var34)) (= var25 var35)) (= var26 var36)) (is-O_node (readHeap var36 var34))) (not (= var27 3)))) (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var6))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main50 var17 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var8 (writeHeap var17 var14 (O_node (node (h (getnode (readHeap var17 var14))) var13))))) (is-O_node (readHeap var17 var14))) (is-O_node (readHeap var17 var14)))) (inv_main43 var8 0 var6 var5 var5 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Int) (var17 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main51 var17 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var8 (writeHeap var17 var14 (O_node (node (h (getnode (readHeap var17 var14))) var12))))) (is-O_node (readHeap var17 var14))) (is-O_node (readHeap var17 var14)))) (inv_main43 var8 1 var6 var5 var4 var5 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main58 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (h (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (= var9 2))) (inv_main59 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main67 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (n (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (not (= var9 nullAddr)))) (inv_main66 var8 var7 var6 var5 var4 var3 var2 var1 var9))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Int) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main59 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var8 (n (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var9 var13)) (= var3 var14)) (= var4 var15)) (= var5 var16)) (= var6 var17)) (= var7 var18)) (is-O_node (readHeap var18 var10))) (= var8 nullAddr)) (not (= var9 nullAddr)))) (inv_main66 var7 var6 var5 var4 var3 var9 var2 var1 var9))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Int) (var6 Heap) (var7 Int) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main43 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var7 (h (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var9 var13)) (= var8 var14)) (= var3 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (is-O_node (readHeap var18 var10))) (= var7 3)) (= var8 nullAddr)) (not (= var9 nullAddr)))) (inv_main66 var6 var5 var4 var3 var8 var9 var2 var1 var9))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main47 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var0 (n (getnode (readHeap var18 var10))))) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var9 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (= var9 0))) (inv_main51 var8 var9 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main58 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (h (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (not (= var9 2)))) (inv_main72 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main66 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (h (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (not (= var9 1)))) (inv_main72 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main66 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (h (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (= var9 1))) (inv_main67 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (and (inv_main16 var9 var8 var7 var6 var5 var4 var3 var2 var1) (not (= var0 0))) (= var8 0))) (inv_main22 var9 var8 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Int) (var9 Heap)) (or (not (and (inv_main16 var9 var8 var7 var6 var5 var4 var3 var2 var1) (= var0 0))) (inv_main17 var9 var8 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main43 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (h (getnode (readHeap var18 var10))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (not (= var9 3)))) (inv_main47 var8 var7 var6 var0 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap) (var9 Int) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Addr) (var16 Addr) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main47 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var0 (n (getnode (readHeap var18 var10))))) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var9 var17)) (= var8 var18)) (is-O_node (readHeap var18 var10))) (not (= var9 0)))) (inv_main50 var8 var9 var7 var6 var5 var4 var3 var2 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 node) (var17 Heap) (var18 Heap) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Addr) (var27 Int) (var28 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main21 var28 var27 var26 var25 var24 var23 var22 var21 var20) (= var1 var20)) (= var3 var21)) (= var5 var22)) (= var7 var23)) (= var9 var24)) (= var11 var25)) (= var13 var26)) (= var0 var27)) (= var17 (writeHeap var28 var20 (O_node (node 1 (n (getnode (readHeap var28 var20)))))))) (is-O_node (readHeap var28 var20))) (is-O_node (readHeap var28 var20))) (= var19 (newAddr (allocHeap var17 (O_node var16))))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var15 0)) (= var18 (newHeap (allocHeap var17 (O_node var16))))) (not (= var19 nullAddr)))) (inv_main27 var18 var15 var14 var19 var10 var8 var6 var4 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Addr) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Addr) (var13 Addr) (var14 Addr) (var15 Int) (var16 node) (var17 Heap) (var18 Heap) (var19 Addr) (var20 Addr) (var21 Addr) (var22 Addr) (var23 Addr) (var24 Addr) (var25 Addr) (var26 Addr) (var27 Int) (var28 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main22 var28 var27 var26 var25 var24 var23 var22 var21 var20) (= var1 var20)) (= var3 var21)) (= var5 var22)) (= var7 var23)) (= var9 var24)) (= var11 var25)) (= var13 var26)) (= var0 var27)) (= var17 (writeHeap var28 var20 (O_node (node 2 (n (getnode (readHeap var28 var20)))))))) (is-O_node (readHeap var28 var20))) (is-O_node (readHeap var28 var20))) (= var19 (newAddr (allocHeap var17 (O_node var16))))) (= var2 var1)) (= var4 var3)) (= var6 var5)) (= var8 var7)) (= var10 var9)) (= var12 var11)) (= var14 var13)) (= var15 1)) (= var18 (newHeap (allocHeap var17 (O_node var16))))) (not (= var19 nullAddr)))) (inv_main27 var18 var15 var14 var19 var10 var8 var6 var4 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (or (not (and (and (inv_main27 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_node (readHeap var8 var0))) (is-O_node (readHeap var8 var0)))) (inv_main33 (writeHeap var8 var0 (O_node (node (h (getnode (readHeap var8 var0))) var5))) var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main21 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (and (inv_main21 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))) (is-O_node (readHeap var8 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main22 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (and (inv_main22 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))) (is-O_node (readHeap var8 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main27 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (and (inv_main27 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))) (is-O_node (readHeap var8 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main33 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main17 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (and (inv_main17 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))) (is-O_node (readHeap var8 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main35 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var6)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main47 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main50 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (and (inv_main50 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var5)))) (is-O_node (readHeap var8 var5))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main51 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var5)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (and (inv_main51 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var5)))) (is-O_node (readHeap var8 var5))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main58 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main59 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main66 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (and (inv_main67 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_node (readHeap var8 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Int) (var8 Heap)) (not (inv_main72 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(check-sat)
