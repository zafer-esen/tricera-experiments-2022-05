(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0) (node 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_node (getnode node)) (defObj))
                   ((node (left Addr) (right Addr) (parent Addr) (value Int)))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main13 (Heap Addr Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr) Bool)
(declare-fun inv_main19 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Addr Addr Int) Bool)
(declare-fun inv_main27 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main28 (Heap Addr Addr) Bool)
(declare-fun inv_main31 (Heap Addr Addr) Bool)
(declare-fun inv_main32 (Heap Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr) Bool)
(declare-fun inv_main34 (Heap Addr Addr) Bool)
(declare-fun inv_main37 (Heap Addr) Bool)
(declare-fun inv_main48 (Heap Addr Addr) Bool)
(declare-fun inv_main52 (Heap Addr Addr) Bool)
(declare-fun inv_main53 (Heap Addr Addr) Bool)
(declare-fun inv_main54 (Heap Addr Addr) Bool)
(declare-fun inv_main60 (Heap Addr Addr) Bool)
(declare-fun inv_main64 (Heap Addr Addr) Bool)
(declare-fun inv_main68 (Heap Addr Addr) Bool)
(declare-fun inv_main7 (Heap Addr Addr) Bool)
(declare-fun inv_main79 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main80 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main86 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main87 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main88 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main91 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main93 (Heap Addr Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (inv_main19 var6 var5 var4) (= var1 var4)) (= var2 var5)) (= var3 (writeHeap var6 var5 (O_node (node (left (getnode (readHeap var6 var5))) (right (getnode (readHeap var6 var5))) var4 (value (getnode (readHeap var6 var5)))))))) (is-O_node (readHeap var6 var5))) (is-O_node (readHeap var6 var5)))) (inv_main22 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (inv_main16 var6 var5 var4) (= var1 var4)) (= var3 var5)) (= var2 (writeHeap var6 var4 (O_node (node (left (getnode (readHeap var6 var4))) var5 (parent (getnode (readHeap var6 var4))) (value (getnode (readHeap var6 var4)))))))) (is-O_node (readHeap var6 var4))) (is-O_node (readHeap var6 var4))) (= var3 nullAddr))) (inv_main22 var2 var3 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (inv_main93 var8 var7 var6 var5) (= var4 (parent (getnode (readHeap var8 var6))))) (= var0 var5)) (= var1 var6)) (= var2 var7)) (= var3 var8)) (is-O_node (readHeap var8 var6))) (not (= var4 nullAddr)))) (inv_main86 var3 var2 var4 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main79 var8 var7 var6 var5) (= var3 (right (getnode (readHeap var8 var6))))) (= var0 var5)) (= var4 var6)) (= var1 var7)) (= var2 var8)) (is-O_node (readHeap var8 var6))) (= var3 nullAddr)) (not (= var4 nullAddr)))) (inv_main86 var2 var1 var4 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (and (and (and (and (and (inv_main16 var5 var4 var3) (= var0 var3)) (= var2 var4)) (= var1 (writeHeap var5 var3 (O_node (node (left (getnode (readHeap var5 var3))) var4 (parent (getnode (readHeap var5 var3))) (value (getnode (readHeap var5 var3)))))))) (is-O_node (readHeap var5 var3))) (is-O_node (readHeap var5 var3))) (not (= var2 nullAddr)))) (inv_main19 var1 var2 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main52 var2 var1 var0) (not (= (left (getnode (readHeap var2 var0))) nullAddr))) (is-O_node (readHeap var2 var0)))) (inv_main54 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (and (inv_main37 var1 var0) (= var0 nullAddr))) (inv_main48 var1 var0 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main33 var2 var1 var0) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0)))) (inv_main34 (writeHeap var2 (left (getnode (readHeap var2 var0))) (O_node (node (left (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) (right (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) var0 (value (getnode (readHeap var2 (left (getnode (readHeap var2 var0))))))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main28 var2 var1 var0) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0)))) (inv_main31 (writeHeap var2 (left (getnode (readHeap var2 var0))) (O_node (node nullAddr (right (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) (parent (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) (value (getnode (readHeap var2 (left (getnode (readHeap var2 var0))))))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (and (inv_main54 var6 var5 var4) (= var3 (value (getnode (readHeap var6 (left (getnode (readHeap var6 var4)))))))) (= var0 var4)) (= var1 var5)) (= var2 var6)) (is-O_node (readHeap var6 (left (getnode (readHeap var6 var4)))))) (is-O_node (readHeap var6 var4))) (not (= var3 42)))) (inv_main60 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main13 var2 var1 var0) (is-O_node (readHeap var2 var0))) (is-O_node (readHeap var2 var0)))) (inv_main16 (writeHeap var2 var0 (O_node (node nullAddr (right (getnode (readHeap var2 var0))) (parent (getnode (readHeap var2 var0))) (value (getnode (readHeap var2 var0)))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (inv_main64 var6 var5 var4) (= var3 (parent (getnode (readHeap var6 var4))))) (= var0 var4)) (= var1 var5)) (= var2 var6)) (is-O_node (readHeap var6 var4))) (not (= var3 nullAddr)))) (inv_main52 var2 var1 var3))))
(assert (forall ((var0 Addr) (var1 Heap)) (or (not (and (and (inv_main37 var1 var0) (not (= var0 nullAddr))) (not (= var0 nullAddr)))) (inv_main52 var1 var0 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main53 var2 var1 var0) (not (= (value (getnode (readHeap var2 var0))) 0))) (is-O_node (readHeap var2 var0)))) (inv_main64 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main31 var2 var1 var0) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0)))) (inv_main32 (writeHeap var2 (left (getnode (readHeap var2 var0))) (O_node (node (left (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) nullAddr (parent (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) (value (getnode (readHeap var2 (left (getnode (readHeap var2 var0))))))))) var1 var0))))
(assert (forall ((var0 node) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (inv_main34 var7 var6 var5) (= var4 (right (getnode (readHeap var7 var5))))) (= var1 var5)) (= var2 var6)) (= var3 var7)) (is-O_node (readHeap var7 var5))) (not (= var4 nullAddr)))) (inv_main27 (newHeap (allocHeap var3 (O_node var0))) var2 var4 (newAddr (allocHeap var3 (O_node var0)))))))
(assert (forall ((var0 node) (var1 Int) (var2 Addr) (var3 Addr) (var4 Heap)) (or (not (and (and (inv_main7 var4 var3 var2) (= var1 0)) (not (= var2 nullAddr)))) (inv_main27 (newHeap (allocHeap var4 (O_node var0))) var3 var2 (newAddr (allocHeap var4 (O_node var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main87 var3 var2 var1 var0) (not (= (right (getnode (readHeap var3 var1))) nullAddr))) (is-O_node (readHeap var3 var1)))) (inv_main91 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main53 var2 var1 var0) (= (value (getnode (readHeap var2 var0))) 0)) (is-O_node (readHeap var2 var0)))) (inv_main68 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (inv_main88 var3 var2 var1 var0) (is-O_node (readHeap var3 var1)))) (inv_main87 (writeHeap var3 (left (getnode (readHeap var3 var1))) defObj) var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main86 var3 var2 var1 var0) (= (left (getnode (readHeap var3 var1))) nullAddr)) (is-O_node (readHeap var3 var1)))) (inv_main87 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main86 var3 var2 var1 var0) (not (= (left (getnode (readHeap var3 var1))) nullAddr))) (is-O_node (readHeap var3 var1)))) (inv_main88 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main52 var2 var1 var0) (= (left (getnode (readHeap var2 var0))) nullAddr)) (is-O_node (readHeap var2 var0)))) (inv_main53 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (and (inv_main54 var6 var5 var4) (= var3 (value (getnode (readHeap var6 (left (getnode (readHeap var6 var4)))))))) (= var0 var4)) (= var1 var5)) (= var2 var6)) (is-O_node (readHeap var6 (left (getnode (readHeap var6 var4)))))) (is-O_node (readHeap var6 var4))) (= var3 42))) (inv_main53 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (inv_main79 var8 var7 var6 var5) (= var4 (right (getnode (readHeap var8 var6))))) (= var0 var5)) (= var1 var6)) (= var2 var7)) (= var3 var8)) (is-O_node (readHeap var8 var6))) (not (= var4 nullAddr)))) (inv_main80 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (inv_main80 var8 var7 var6 var5) (= var0 (right (getnode (readHeap var8 var6))))) (= var1 var5)) (= var2 var6)) (= var3 var7)) (= var4 var8)) (is-O_node (readHeap var8 var6)))) (inv_main79 var4 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap) (var7 Heap) (var8 Addr) (var9 Addr) (var10 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main64 var10 var9 var8) (= var1 (parent (getnode (readHeap var10 var8))))) (= var0 var8)) (= var4 var9)) (= var6 var10)) (is-O_node (readHeap var10 var8))) (= var1 nullAddr)) (= var2 nullAddr)) (= var3 var4)) (= var5 var4)) (= var7 var6))) (inv_main79 var7 var5 var3 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Heap)) (or (not (and (and (and (and (and (and (inv_main37 var5 var4) (not (= var4 nullAddr))) (= var4 nullAddr)) (= var0 nullAddr)) (= var1 var4)) (= var2 var4)) (= var3 var5))) (inv_main79 var3 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (inv_main91 var7 var6 var5 var4) (= var0 var4)) (= var1 var5)) (= var2 var6)) (= var3 (writeHeap var7 (right (getnode (readHeap var7 var5))) defObj))) (is-O_node (readHeap var7 var5)))) (inv_main93 var3 var2 var1 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main87 var3 var2 var1 var0) (= (right (getnode (readHeap var3 var1))) nullAddr)) (is-O_node (readHeap var3 var1)))) (inv_main93 var3 var2 var1 var1))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 node) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (inv_main7 var8 var7 var6) (not (= var0 0))) (= var5 (newAddr (allocHeap var8 (O_node var3))))) (= var1 var6)) (= var2 var7)) (= var4 (newHeap (allocHeap var8 (O_node var3))))) (not (= var5 nullAddr)))) (inv_main13 var4 var2 var5))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (and (inv_main32 var2 var1 var0) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0)))) (inv_main33 (writeHeap var2 (left (getnode (readHeap var2 var0))) (O_node (node (left (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) (right (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) (parent (getnode (readHeap var2 (left (getnode (readHeap var2 var0)))))) 42))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (inv_main27 var6 var5 var4 var3) (= var2 var4)) (= var0 var5)) (= var1 (writeHeap var6 var4 (O_node (node var3 (right (getnode (readHeap var6 var4))) (parent (getnode (readHeap var6 var4))) (value (getnode (readHeap var6 var4)))))))) (is-O_node (readHeap var6 var4))) (is-O_node (readHeap var6 var4))) (not (= var2 nullAddr)))) (inv_main28 var1 var0 var2))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (inv_main22 var7 var6 var5 var4) (= var0 var4)) (= var1 var5)) (= var2 var6)) (= var3 (writeHeap var7 var5 (O_node (node (left (getnode (readHeap var7 var5))) (right (getnode (readHeap var7 var5))) (parent (getnode (readHeap var7 var5))) var4))))) (is-O_node (readHeap var7 var5))) (is-O_node (readHeap var7 var5)))) (inv_main7 var3 var1 var1))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Heap)) (or (not (and (and (inv_main2 var2) (= var0 nullAddr)) (= var1 var2))) (inv_main7 var1 var0 nullAddr))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (and (inv_main34 var6 var5 var4) (= var2 (right (getnode (readHeap var6 var4))))) (= var0 var4)) (= var3 var5)) (= var1 var6)) (is-O_node (readHeap var6 var4))) (= var2 nullAddr)) (not (= var3 nullAddr)))) (inv_main37 var1 var3))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (and (inv_main7 var3 var2 var1) (= var0 0)) (= var1 nullAddr)) (not (= var2 nullAddr)))) (inv_main37 var3 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main13 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main13 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main16 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main16 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main19 var2 var1 var0) (not (is-O_node (readHeap var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main19 var2 var1 var0) (not (is-O_node (readHeap var2 var1)))) (is-O_node (readHeap var2 var1))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main22 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Int) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main22 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))) (is-O_node (readHeap var3 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main27 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main27 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))) (is-O_node (readHeap var3 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main28 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main28 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main28 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main31 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main31 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main31 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main32 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main32 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main32 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main33 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main33 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (and (inv_main33 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0)))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main34 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main48 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main52 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main54 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main54 var2 var1 var0) (not (is-O_node (readHeap var2 (left (getnode (readHeap var2 var0))))))) (is-O_node (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main60 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main53 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (inv_main68 var2 var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main64 var2 var1 var0) (not (is-O_node (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main79 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main80 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main86 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main88 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main87 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main91 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main93 var3 var2 var1 var0) (not (is-O_node (readHeap var3 var1)))))))
(check-sat)
