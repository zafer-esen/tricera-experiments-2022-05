(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main16 (Heap Int Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main19 (Heap Int Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main2 (Heap Int Int) Bool)
(declare-fun inv_main36 (Heap Int Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main37 (Heap Int Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main39 (Heap Int Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main40 (Heap Int Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main42 (Heap Int Int Int AddrRange AddrRange) Bool)
(assert (inv_main2 emptyHeap 0 100000))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main37 var13 var12 var11 var10 var9 var8 var7) (= var0 (getInt (readHeap var13 (nthAddrRange var9 (+ (+ (* (- 1) var10) var7) (* (- 1) 1))))))) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (is-O_Int (readHeap var13 (nthAddrRange var9 (+ (+ (* (- 1) var10) var7) (* (- 1) 1))))))) (inv_main39 var6 var5 var4 var3 var2 var1 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (inv_main39 var7 var6 var5 var4 var3 var2 var1) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (+ (* (- 1) var4) var1) (* (- 1) 1)))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (+ (* (- 1) var4) var1) (* (- 1) 1))))))) (inv_main36 (writeHeap var7 (nthAddrRange var2 (+ (+ (* (- 1) var4) var1) (* (- 1) 1))) (O_Int var0)) var6 var5 var4 var3 var2))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main19 var12 var11 var10 var9 var8 var7) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var6 (writeHeap var12 (nthAddrRange var8 var9) (O_Int var5)))) (is-O_Int (readHeap var12 (nthAddrRange var8 var9)))) (is-O_Int (readHeap var12 (nthAddrRange var8 var9))))) (inv_main16 var6 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Heap) (var19 Int) (var20 Int) (var21 Heap)) (or (not (and (and (batchAllocHeapPostHeap var6 var17 (O_Int var5) var4) (batchAllocHeapPostHeap var17 var18 (O_Int var16) var15)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var21 var20 var19) (or (and (<= 0 (+ (+ (* (- 1) var0) var19) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) var0) var19) (* (- 1) 1)))) (= var1 0)))) (= var3 var19)) (= var4 var0)) (= var6 var21)) (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (not (= var1 0))) (= var8 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize var6) 1) (HeapSize var6)) var4))) (= var10 var2)) (= var12 var3)) (= var15 var4)) true) (= var7 (AddrRange (ite (<= 0 (+ var15 (- 1))) (+ (HeapSize var17) 1) (HeapSize var17)) var15))) (= var9 var8)) (= var11 var10)) (= var13 var12)) (= var14 var15)) true))) (inv_main16 var18 var14 var13 0 var9 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Heap) (var19 Int) (var20 Int) (var21 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var21 var20 var19) (or (and (<= 0 (+ (+ (* (- 1) var0) var19) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) var0) var19) (* (- 1) 1)))) (= var1 0)))) (= var3 var19)) (= var4 var0)) (= var6 var21)) (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (not (= var1 0))) (= var8 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize var6) 1) (HeapSize var6)) var4))) (= var10 var2)) (= var12 var3)) (= var15 var4)) true) (= var7 (AddrRange (ite (<= 0 (+ var15 (- 1))) (+ (HeapSize var17) 1) (HeapSize var17)) var15))) (= var9 var8)) (= var11 var10)) (= var13 var12)) (= var14 var15)) true)) (batchAllocHeap var6 var6 (O_Int var5) var4 var4))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Heap) (var19 Int) (var20 Int) (var21 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var21 var20 var19) (or (and (<= 0 (+ (+ (* (- 1) var0) var19) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) var0) var19) (* (- 1) 1)))) (= var1 0)))) (= var3 var19)) (= var4 var0)) (= var6 var21)) (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (not (= var1 0))) (= var8 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize var6) 1) (HeapSize var6)) var4))) (= var10 var2)) (= var12 var3)) (= var15 var4)) true) (= var7 (AddrRange (ite (<= 0 (+ var15 (- 1))) (+ (HeapSize var17) 1) (HeapSize var17)) var15))) (= var9 var8)) (= var11 var10)) (= var13 var12)) (= var14 var15)) true)) (batchAllocHeap var17 var17 (O_Int var16) var15 var15))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var5 (nthAddrRange var1 var2))))) (inv_main40 var5 var4 var3 var2 var1 var0 (getInt (readHeap var5 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main16 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var2) var4) (* (- 1) 1))))) (inv_main19 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main16 var12 var11 var10 var9 var8 var7) (not (<= 0 (+ (+ (* (- 1) var9) var11) (* (- 1) 1))))) (= var18 0)) (= var11 (+ (* 2 var19) var18))) (or (not (<= 0 (+ (* (- 1) var18) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var11) (* (- 1) 1))))) (or (not (<= 0 (+ var18 (* (- 1) 1)))) (<= 0 (+ var11 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var18) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var18) 2) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var14 0) (= var11 (+ (* 2 var15) var14))) (or (not (<= 0 (+ (* (- 1) var14) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var11) (* (- 1) 1))))) (or (not (<= 0 (+ var14 (* (- 1) 1)))) (<= 0 (+ var11 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var14) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var14) 2) (* (- 1) 1)))) (= var5 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var16) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var11) (* (- 1) 1)))) (or (not (<= 0 (+ var16 (* (- 1) 1)))) (<= 0 (+ var11 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var16) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var16) 2) (* (- 1) 1)))) (= var11 (+ (* 2 var17) var16)))) (= var16 0))) (= var5 0)))) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var6 var11)) (= var4 var12)) (not (= var5 0))) (<= 0 (+ var13 (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var13))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var6) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 2) var13) var6) (* (- 1) 1)))) (<= 0 (+ var6 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var6 (* (- 2) var13))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var6 (* (- 2) var13))) 2) (* (- 1) 1))))) (inv_main37 var4 var6 var3 0 var1 var0 var6))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main40 var12 var11 var10 var9 var8 var7 var6) (= var0 var7)) (= var1 var8)) (= var4 var9)) (= var2 var10)) (= var5 var11)) (= var3 (writeHeap var12 (nthAddrRange var7 var9) (O_Int var6)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var9)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var9)))) (<= 0 (+ (+ (* (- 1) (+ var4 1)) var13) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var13))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 2) var13) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var13))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var13))) 2) (* (- 1) 1))))) (inv_main37 var3 var5 var2 (+ var4 1) var1 var0 var5))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (and (inv_main42 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var5 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var5 (nthAddrRange var0 var2)))) (<= 0 (+ (+ (* (- 1) (+ var2 1)) var4) (* (- 1) 1))))) (inv_main42 var5 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main16 var12 var11 var10 var9 var8 var7) (not (<= 0 (+ (+ (* (- 1) var9) var11) (* (- 1) 1))))) (= var18 0)) (= var11 (+ (* 2 var19) var18))) (or (not (<= 0 (+ (* (- 1) var18) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var11) (* (- 1) 1))))) (or (not (<= 0 (+ var18 (* (- 1) 1)))) (<= 0 (+ var11 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var18) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var18) 2) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var14 0) (= var11 (+ (* 2 var15) var14))) (or (not (<= 0 (+ (* (- 1) var14) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var11) (* (- 1) 1))))) (or (not (<= 0 (+ var14 (* (- 1) 1)))) (<= 0 (+ var11 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var14) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var14) 2) (* (- 1) 1)))) (= var5 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var16) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var11) (* (- 1) 1)))) (or (not (<= 0 (+ var16 (* (- 1) 1)))) (<= 0 (+ var11 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var16) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var16) 2) (* (- 1) 1)))) (= var11 (+ (* 2 var17) var16)))) (= var16 0))) (= var5 0)))) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var6 var11)) (= var4 var12)) (not (= var5 0))) (not (or (not (and (and (and (or (not (<= 0 (+ (+ (* (- 2) var13) var6) (* (- 1) 1)))) (<= 0 (+ var6 (* (- 1) 1)))) (<= 0 (+ (+ (* 1 (+ var6 (* (- 2) var13))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var6 (* (- 2) var13))) 2) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 2) var13))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var6) (* (- 1) 1)))))) (<= 0 (+ var13 (* (- 1) 1)))))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main42 var4 var6 var3 0 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main40 var12 var11 var10 var9 var8 var7 var6) (= var0 var7)) (= var1 var8)) (= var4 var9)) (= var2 var10)) (= var5 var11)) (= var3 (writeHeap var12 (nthAddrRange var7 var9) (O_Int var6)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var9)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var9)))) (not (or (not (and (and (and (or (not (<= 0 (+ (+ (* (- 2) var13) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1)))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var13))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var13))) 2) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var13))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1)))))) (<= 0 (+ (+ (* (- 1) (+ var4 1)) var13) (* (- 1) 1)))))) (<= 0 (+ var5 (* (- 1) 1))))) (inv_main42 var3 var5 var2 0 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var5 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main19 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 var2))))) (is-O_Int (readHeap var5 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main37 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (+ (* (- 1) var3) var0) (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main37 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (+ (* (- 1) var3) var0) (* (- 1) 1)))))) (is-O_Int (readHeap var6 (nthAddrRange var2 (+ (+ (* (- 1) var3) var0) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var1 (+ (+ (* (- 1) var3) var0) (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 (+ (+ (* (- 1) var3) var0) (* (- 1) 1)))))) (is-O_Int (readHeap var6 (nthAddrRange var1 (+ (+ (* (- 1) var3) var0) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main39 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var1 (+ (+ (* (- 1) var3) var0) (* (- 1) 1))))))) (is-O_Int (readHeap var6 (nthAddrRange var1 (+ (+ (* (- 1) var3) var0) (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main36 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main36 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var5 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main40 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main40 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var3)))) (is-O_Int (readHeap var6 (nthAddrRange var1 var3)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main40 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var1 var3))))) (is-O_Int (readHeap var6 (nthAddrRange var1 var3)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var2)))) (is-O_Int (readHeap var5 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 var2))))) (is-O_Int (readHeap var5 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var5 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var5 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (and (inv_main42 var5 var4 var3 var2 var1 var0) (not (= (getInt (readHeap var5 (nthAddrRange var0 var2))) (getInt (readHeap var5 (nthAddrRange var1 var2)))))) (is-O_Int (readHeap var5 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var5 (nthAddrRange var0 var2)))))))
(check-sat)
