(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main2 (Heap Int Int) Bool)
(declare-fun inv_main29 (Heap Int Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main40 (Heap Int Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main49 (Heap Int Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main50 (Heap Int Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main57 (Heap Int Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main58 (Heap Int Int Int Int AddrRange Int Int) Bool)
(declare-fun inv_main60 (Heap Int Int Int Int AddrRange Int Int) Bool)
(assert (inv_main2 emptyHeap 0 100000))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int)) (or (not (and (and (and (and (and (and (inv_main29 var8 var7 var6 var5 var4 var3 var2 var1) (<= 0 (+ var9 (* (- 1) var5)))) (or (not (<= 0 (+ (* (- 1) (+ var7 (* (- 3) var9))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var7) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 3) var9) var7) (* (- 1) 1)))) (<= 0 (+ var7 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var7 (* (- 3) var9))) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var7 (* (- 3) var9))) 3) (* (- 1) 1)))) (= var0 var2))) (inv_main41 var8 var7 var6 var5 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main49 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2))) (O_Int var12)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (= var8 var7))) (inv_main58 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main50 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2))) (O_Int var9)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (= var8 var7))) (inv_main58 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main40 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3))) (O_Int var12)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (not (= var8 var7)))) (inv_main49 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main41 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3))) (O_Int var9)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (not (= var8 var7)))) (inv_main49 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int)) (or (not (and (and (and (and (and (and (inv_main29 var8 var7 var6 var5 var4 var3 var2 var1) (<= 0 (+ var9 (* (- 1) var5)))) (or (not (<= 0 (+ (* (- 1) (+ var7 (* (- 3) var9))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var7) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 3) var9) var7) (* (- 1) 1)))) (<= 0 (+ var7 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var7 (* (- 3) var9))) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var7 (* (- 3) var9))) 3) (* (- 1) 1)))) (not (= var0 var2)))) (inv_main40 var8 var7 var6 var5 var0 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main57 var15 var14 var13 var12 var11 var10 var9 var8) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (= var7 (writeHeap var15 (nthAddrRange var10 (+ (* 3 var12) (* (- 1) 1))) (O_Int var11)))) (is-O_Int (readHeap var15 (nthAddrRange var10 (+ (* 3 var12) (* (- 1) 1)))))) (is-O_Int (readHeap var15 (nthAddrRange var10 (+ (* 3 var12) (* (- 1) 1))))))) (inv_main29 var7 var6 var5 (+ var4 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main58 var15 var14 var13 var12 var11 var10 var9 var8) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var6 var14)) (= var7 (writeHeap var15 (nthAddrRange var10 (+ (* 3 var12) (* (- 1) 1))) (O_Int var8)))) (is-O_Int (readHeap var15 (nthAddrRange var10 (+ (* 3 var12) (* (- 1) 1)))))) (is-O_Int (readHeap var15 (nthAddrRange var10 (+ (* 3 var12) (* (- 1) 1))))))) (inv_main29 var7 var6 var5 (+ var4 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Heap) (var21 Heap) (var22 Int) (var23 Int) (var24 Int) (var25 Heap) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Int) (var31 Int)) (or (not (and (batchAllocHeapPostHeap var7 var20 (O_Int var6) var5) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var25 var24 var23) (or (and (<= 0 (+ (+ (* (- 1) var0) var23) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) var0) var23) (* (- 1) 1)))) (= var1 0)))) (= var4 var23)) (= var5 var0)) (= var7 var25)) (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (not (= var1 0))) (= var10 (AddrRange (ite (<= 0 (+ var5 (- 1))) (+ (HeapSize var7) 1) (HeapSize var7)) var5))) (= var12 var2)) (= var14 var3)) (= var16 var4)) (= var18 var5)) true) (= var30 0)) (= var18 (+ (* 3 var31) var30))) (or (not (<= 0 (+ (* (- 1) var30) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var18) (* (- 1) 1))))) (or (not (<= 0 (+ var30 (* (- 1) 1)))) (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var30) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var30) 3) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var26 0) (= var18 (+ (* 3 var27) var26))) (or (not (<= 0 (+ (* (- 1) var26) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var18) (* (- 1) 1))))) (or (not (<= 0 (+ var26 (* (- 1) 1)))) (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var26) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var26) 3) (* (- 1) 1)))) (= var22 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var28) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var18) (* (- 1) 1)))) (or (not (<= 0 (+ var28 (* (- 1) 1)))) (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var28) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var28) 3) (* (- 1) 1)))) (= var18 (+ (* 3 var29) var28)))) (= var28 0))) (= var22 0)))) (= var8 10)) (= var9 0)) (= var11 var10)) (= var13 var12)) (= var15 var14)) (= var17 var16)) (= var19 var18)) (= var21 var20)) (not (= var22 0))))) (inv_main29 var21 var19 var17 1 var13 var11 var9 var8))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Heap) (var21 Heap) (var22 Int) (var23 Int) (var24 Int) (var25 Heap) (var26 Int) (var27 Int) (var28 Int) (var29 Int) (var30 Int) (var31 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var25 var24 var23) (or (and (<= 0 (+ (+ (* (- 1) var0) var23) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) var0) var23) (* (- 1) 1)))) (= var1 0)))) (= var4 var23)) (= var5 var0)) (= var7 var25)) (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (not (= var1 0))) (= var10 (AddrRange (ite (<= 0 (+ var5 (- 1))) (+ (HeapSize var7) 1) (HeapSize var7)) var5))) (= var12 var2)) (= var14 var3)) (= var16 var4)) (= var18 var5)) true) (= var30 0)) (= var18 (+ (* 3 var31) var30))) (or (not (<= 0 (+ (* (- 1) var30) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var18) (* (- 1) 1))))) (or (not (<= 0 (+ var30 (* (- 1) 1)))) (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var30) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var30) 3) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var26 0) (= var18 (+ (* 3 var27) var26))) (or (not (<= 0 (+ (* (- 1) var26) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var18) (* (- 1) 1))))) (or (not (<= 0 (+ var26 (* (- 1) 1)))) (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var26) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var26) 3) (* (- 1) 1)))) (= var22 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var28) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var18) (* (- 1) 1)))) (or (not (<= 0 (+ var28 (* (- 1) 1)))) (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var28) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var28) 3) (* (- 1) 1)))) (= var18 (+ (* 3 var29) var28)))) (= var28 0))) (= var22 0)))) (= var8 10)) (= var9 0)) (= var11 var10)) (= var13 var12)) (= var15 var14)) (= var17 var16)) (= var19 var18)) (= var21 var20)) (not (= var22 0)))) (batchAllocHeap var7 var7 (O_Int var6) var5 var5))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int)) (or (not (and (and (inv_main29 var7 var6 var5 var4 var3 var2 var1 var0) (not (or (not (and (and (and (or (not (<= 0 (+ (+ (* (- 3) var8) var6) (* (- 1) 1)))) (<= 0 (+ var6 (* (- 1) 1)))) (<= 0 (+ (+ (* 1 (+ var6 (* (- 3) var8))) 3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var6 (* (- 3) var8))) 3) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var6 (* (- 3) var8))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var6) (* (- 1) 1)))))) (<= 0 (+ var8 (* (- 1) var4)))))) (<= 0 (+ var6 (* (- 1) 1))))) (inv_main60 var7 var6 var5 0 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var7 (nthAddrRange var2 var4)))) (<= 0 (+ (+ (* (- 1) (+ var4 1)) var6) (* (- 1) 1))))) (inv_main60 var7 var6 var5 (+ var4 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main40 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3))) (O_Int var12)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (= var8 var7))) (inv_main50 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main41 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3))) (O_Int var9)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 3)))))) (= var8 var7))) (inv_main50 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main49 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2))) (O_Int var12)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (not (= var8 var7)))) (inv_main57 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main50 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var7 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 (writeHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2))) (O_Int var9)))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (is-O_Int (readHeap var16 (nthAddrRange var11 (+ (* 3 var13) (* (- 1) 2)))))) (not (= var8 var7)))) (inv_main57 var6 var5 var4 var3 var8 var1 var7 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main40 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main40 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3)))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main40 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3))))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main41 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main41 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3)))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main41 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3))))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 3)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main49 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main49 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2)))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main49 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2))))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main50 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main50 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2)))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main50 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2))))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 2)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main57 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main57 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1)))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main57 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1))))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main58 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main58 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1)))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main58 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1))))))) (is-O_Int (readHeap var7 (nthAddrRange var2 (+ (* 3 var4) (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var7 (nthAddrRange var2 var4))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var4)))) (is-O_Int (readHeap var7 (nthAddrRange var2 var4)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main60 var7 var6 var5 var4 var3 var2 var1 var0) (= (getInt (readHeap var7 (nthAddrRange var2 var4))) var1)) (is-O_Int (readHeap var7 (nthAddrRange var2 var4)))))))
(check-sat)
