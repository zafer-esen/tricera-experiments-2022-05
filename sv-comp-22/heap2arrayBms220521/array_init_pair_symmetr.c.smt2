(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main13 (Heap Int Int AddrRange AddrRange AddrRange Int) Bool)
(declare-fun inv_main19 (Heap Int Int AddrRange AddrRange AddrRange Int) Bool)
(declare-fun inv_main22 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(declare-fun inv_main24 (Heap Int Int AddrRange AddrRange AddrRange Int) Bool)
(declare-fun inv_main25 (Heap Int Int AddrRange AddrRange AddrRange Int) Bool)
(declare-fun inv_main28 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(declare-fun inv_main6 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(declare-fun inv_main8 (Heap Int Int AddrRange AddrRange AddrRange) Bool)
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (batchAllocHeapPostHeap emptyHeap var12 (O_Int var11) var13) (batchAllocHeapPostHeap emptyHeap var6 (O_Int var5) var10)) (and (and (and (and (and (and (and (and (and (and (= var7 (AddrRange (ite (<= 0 (+ var13 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var13)) (= var9 var8)) (= var10 var13)) true) (= var13 100000)) (= var14 emptyHeap)) (= var1 (AddrRange (ite (<= 0 (+ var10 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var10))) (= var2 var7)) (= var3 var9)) (= var4 var10)) true))) (inv_main6 (newBatchHeap (batchAllocHeap emptyHeap (O_Int var0) var4)) var4 var3 var2 var1 (AddrRange (ite (<= 0 (+ var4 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var4)))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (= var7 (AddrRange (ite (<= 0 (+ var13 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var13)) (= var9 var8)) (= var10 var13)) true) (= var13 100000)) (= var14 emptyHeap)) (= var1 (AddrRange (ite (<= 0 (+ var10 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var10))) (= var2 var7)) (= var3 var9)) (= var4 var10)) true)) (batchAllocHeap emptyHeap emptyHeap (O_Int var11) var13 var13))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Heap) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Int) (var11 Int) (var12 Heap) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (= var7 (AddrRange (ite (<= 0 (+ var13 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var13)) (= var9 var8)) (= var10 var13)) true) (= var13 100000)) (= var14 emptyHeap)) (= var1 (AddrRange (ite (<= 0 (+ var10 (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) var10))) (= var2 var7)) (= var3 var9)) (= var4 var10)) true)) (batchAllocHeap emptyHeap emptyHeap (O_Int var5) var10 var10))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (inv_main13 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var6 (nthAddrRange var3 var4)))) (is-O_Int (readHeap var6 (nthAddrRange var3 var4))))) (inv_main19 (writeHeap var6 (nthAddrRange var3 var4) (O_Int var0)) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main22 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var5 (nthAddrRange var2 var3))))) (inv_main24 var5 var4 var3 var2 var1 var0 (getInt (readHeap var5 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 AddrRange) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main8 var14 var13 var12 var11 var10 var9) (<= 0 (+ (+ (* (- 1) var12) var13) (* (- 1) 1)))) (or (and (and (<= 0 (+ (+ (* (- 1) var0) 100000) (* (- 1) 1))) (<= 0 (+ (+ 100000 var0) (* (- 1) 1)))) (= var8 1)) (and (not (and (<= 0 (+ (+ 100000 var0) (* (- 1) 1))) (<= 0 (+ (+ (* (- 1) var0) 100000) (* (- 1) 1))))) (= var8 0)))) (= var1 var0)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 var12)) (= var6 var13)) (= var7 var14)) (not (= var8 0)))) (inv_main13 var7 var6 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var6 (nthAddrRange var2 var4))))) (inv_main25 var6 var5 var4 var3 var2 var1 (+ var0 (getInt (readHeap var6 (nthAddrRange var2 var4))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (inv_main6 var5 var4 var3 var2 var1 var0)) (inv_main8 var5 var4 0 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main19 var12 var11 var10 var9 var8 var7 var6) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (= var4 var11)) (= var5 (writeHeap var12 (nthAddrRange var8 var10) (O_Int (* (- 1) var6))))) (is-O_Int (readHeap var12 (nthAddrRange var8 var10)))) (is-O_Int (readHeap var12 (nthAddrRange var8 var10))))) (inv_main8 var5 var4 (+ var3 1) var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (inv_main8 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var3) var4) (* (- 1) 1))))) (<= 0 (+ var4 (* (- 1) 1))))) (inv_main22 var5 var4 0 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main25 var12 var11 var10 var9 var8 var7 var6) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var4 var10)) (= var5 var11)) (= var3 (writeHeap var12 (nthAddrRange var7 var10) (O_Int var6)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var10)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var10)))) (<= 0 (+ (+ (* (- 1) (+ var4 1)) var5) (* (- 1) 1))))) (inv_main22 var3 var5 (+ var4 1) var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (inv_main28 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var5 (nthAddrRange var0 var3)))) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var4) (* (- 1) 1))))) (inv_main28 var5 var4 (+ var3 1) var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (and (inv_main8 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var3) var4) (* (- 1) 1))))) (not (<= 0 (+ var4 (* (- 1) 1))))) (<= 0 (+ (+ (* (- 1) 1) var4) (* (- 1) 1))))) (inv_main28 var5 var4 1 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 AddrRange) (var8 AddrRange) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main25 var12 var11 var10 var9 var8 var7 var6) (= var0 var7)) (= var1 var8)) (= var2 var9)) (= var4 var10)) (= var5 var11)) (= var3 (writeHeap var12 (nthAddrRange var7 var10) (O_Int var6)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var10)))) (is-O_Int (readHeap var12 (nthAddrRange var7 var10)))) (not (<= 0 (+ (+ (* (- 1) (+ var4 1)) var5) (* (- 1) 1))))) (<= 0 (+ (+ (* (- 1) 1) var5) (* (- 1) 1))))) (inv_main28 var3 var5 1 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main13 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var3 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main13 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var4)))) (is-O_Int (readHeap var6 (nthAddrRange var3 var4)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main13 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var3 var4))))) (is-O_Int (readHeap var6 (nthAddrRange var3 var4)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var4)))) (is-O_Int (readHeap var6 (nthAddrRange var2 var4)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main19 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 var4))))) (is-O_Int (readHeap var6 (nthAddrRange var2 var4)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main22 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var2 var3))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main22 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var3)))) (is-O_Int (readHeap var5 (nthAddrRange var2 var3)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var2 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main24 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var4)))) (is-O_Int (readHeap var6 (nthAddrRange var2 var4)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main25 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var1 var4))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main25 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var4)))) (is-O_Int (readHeap var6 (nthAddrRange var1 var4)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main25 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var6 (nthAddrRange var1 var4))))) (is-O_Int (readHeap var6 (nthAddrRange var1 var4)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main28 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main28 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main28 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var0 var3))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main28 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var3)))) (is-O_Int (readHeap var5 (nthAddrRange var0 var3)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main28 var5 var4 var3 var2 var1 var0) (not (= (getInt (readHeap var5 (nthAddrRange var0 var3))) 0))) (is-O_Int (readHeap var5 (nthAddrRange var0 var3)))))))
(check-sat)
