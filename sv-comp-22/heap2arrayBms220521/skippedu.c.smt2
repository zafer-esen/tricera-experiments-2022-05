(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main15 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main18 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main2 (Heap Int Int) Bool)
(declare-fun inv_main32 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main35 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main36 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main39 (Heap Int Int Int AddrRange) Bool)
(declare-fun inv_main43 (Heap Int Int Int AddrRange) Bool)
(assert (inv_main2 emptyHeap 0 100000))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (and (inv_main36 var4 var3 var2 var1 var0) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2)))))) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2))))))) (inv_main35 (writeHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2))) (O_Int (+ (* 2 var1) (* (- 1) 2)))) var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main32 var10 var9 var8 var7 var6) (= var5 (getInt (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 2))))))) (= var0 var6)) (= var4 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (is-O_Int (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 2)))))) (not (<= 0 (+ (+ (* (- 1) var4) var5) (* (- 1) 1)))))) (inv_main35 var3 var2 var1 var4 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (and (inv_main43 var4 var3 var2 var1 var0) (is-O_Int (readHeap var4 (nthAddrRange var0 var1)))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var3) (* (- 1) 1))))) (inv_main43 var4 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main15 var10 var9 var8 var7 var6) (not (<= 0 (+ (+ (* (- 1) var7) var9) (* (- 1) 1))))) (= var16 0)) (= var9 (+ (* 2 var17) var16))) (or (not (<= 0 (+ (* (- 1) var16) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var9) (* (- 1) 1))))) (or (not (<= 0 (+ var16 (* (- 1) 1)))) (<= 0 (+ var9 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var16) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var16) 2) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var12 0) (= var9 (+ (* 2 var13) var12))) (or (not (<= 0 (+ (* (- 1) var12) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var9) (* (- 1) 1))))) (or (not (<= 0 (+ var12 (* (- 1) 1)))) (<= 0 (+ var9 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var12) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var12) 2) (* (- 1) 1)))) (= var4 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var14) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var9) (* (- 1) 1)))) (or (not (<= 0 (+ var14 (* (- 1) 1)))) (<= 0 (+ var9 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var14) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var14) 2) (* (- 1) 1)))) (= var9 (+ (* 2 var15) var14)))) (= var14 0))) (= var4 0)))) (= var0 var6)) (= var1 var7)) (= var2 var8)) (= var5 var9)) (= var3 var10)) (not (= var4 0))) (not (or (not (and (and (and (or (not (<= 0 (+ (+ (* (- 2) var11) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1)))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var11))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var11))) 2) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var11))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1)))))) (<= 0 (+ var11 (* (- 1) 1)))))) (<= 0 (+ var5 (* (- 1) 1))))) (inv_main43 var3 var5 var2 0 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Int)) (or (not (and (and (and (and (and (and (and (and (and (inv_main39 var9 var8 var7 var6 var5) (= var0 var5)) (= var3 var6)) (= var1 var7)) (= var4 var8)) (= var2 (writeHeap var9 (nthAddrRange var5 (+ (* 2 var6) (* (- 1) 1))) (O_Int (+ (* 2 var6) (* (- 1) 1)))))) (is-O_Int (readHeap var9 (nthAddrRange var5 (+ (* 2 var6) (* (- 1) 1)))))) (is-O_Int (readHeap var9 (nthAddrRange var5 (+ (* 2 var6) (* (- 1) 1)))))) (not (or (not (and (and (and (or (not (<= 0 (+ (+ (* (- 2) var10) var4) (* (- 1) 1)))) (<= 0 (+ var4 (* (- 1) 1)))) (<= 0 (+ (+ (* 1 (+ var4 (* (- 2) var10))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var4 (* (- 2) var10))) 2) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var4 (* (- 2) var10))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var4) (* (- 1) 1)))))) (<= 0 (+ var10 (* (- 1) (+ var3 1))))))) (<= 0 (+ var4 (* (- 1) 1))))) (inv_main43 var2 var4 var1 0 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main35 var10 var9 var8 var7 var6) (= var3 (getInt (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 1))))))) (= var0 var6)) (= var4 var7)) (= var1 var8)) (= var5 var9)) (= var2 var10)) (is-O_Int (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 1)))))) (not (<= 0 (+ (+ (* (- 1) var4) var3) (* (- 1) 1))))) (not (or (not (and (and (and (or (not (<= 0 (+ (+ (* (- 2) var11) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1)))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var11))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var11))) 2) (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var11))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1)))))) (<= 0 (+ var11 (* (- 1) (+ var4 1))))))) (<= 0 (+ var5 (* (- 1) 1))))) (inv_main43 var2 var5 var1 0 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (and (and (and (inv_main18 var10 var9 var8 var7 var6) (= var0 var6)) (= var1 var7)) (= var2 var8)) (= var3 var9)) (= var5 (writeHeap var10 (nthAddrRange var6 var7) (O_Int var4)))) (is-O_Int (readHeap var10 (nthAddrRange var6 var7)))) (is-O_Int (readHeap var10 (nthAddrRange var6 var7))))) (inv_main15 var5 var3 var2 (+ var1 1) var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Heap) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (batchAllocHeapPostHeap var10 var11 (O_Int var9) var8) (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14 var13 var12) (or (and (<= 0 (+ (+ (* (- 1) var0) var12) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) var0) var12) (* (- 1) 1)))) (= var1 0)))) (= var5 var12)) (= var8 var0)) (= var10 var14)) (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (not (= var1 0))) (= var2 (AddrRange (ite (<= 0 (+ var8 (- 1))) (+ (HeapSize var10) 1) (HeapSize var10)) var8))) (= var4 var3)) (= var6 var5)) (= var7 var8)) true))) (inv_main15 var11 var7 var6 0 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Heap) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var14 var13 var12) (or (and (<= 0 (+ (+ (* (- 1) var0) var12) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) var0) var12) (* (- 1) 1)))) (= var1 0)))) (= var5 var12)) (= var8 var0)) (= var10 var14)) (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (not (= var1 0))) (= var2 (AddrRange (ite (<= 0 (+ var8 (- 1))) (+ (HeapSize var10) 1) (HeapSize var10)) var8))) (= var4 var3)) (= var6 var5)) (= var7 var8)) true)) (batchAllocHeap var10 var10 (O_Int var9) var8 var8))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main15 var10 var9 var8 var7 var6) (not (<= 0 (+ (+ (* (- 1) var7) var9) (* (- 1) 1))))) (= var16 0)) (= var9 (+ (* 2 var17) var16))) (or (not (<= 0 (+ (* (- 1) var16) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var9) (* (- 1) 1))))) (or (not (<= 0 (+ var16 (* (- 1) 1)))) (<= 0 (+ var9 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var16) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var16) 2) (* (- 1) 1)))) (or (and (and (and (and (and (and (= var12 0) (= var9 (+ (* 2 var13) var12))) (or (not (<= 0 (+ (* (- 1) var12) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var9) (* (- 1) 1))))) (or (not (<= 0 (+ var12 (* (- 1) 1)))) (<= 0 (+ var9 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var12) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var12) 2) (* (- 1) 1)))) (= var4 1)) (and (not (or (not (and (and (and (and (or (not (<= 0 (+ (* (- 1) var14) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var9) (* (- 1) 1)))) (or (not (<= 0 (+ var14 (* (- 1) 1)))) (<= 0 (+ var9 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 var14) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) var14) 2) (* (- 1) 1)))) (= var9 (+ (* 2 var15) var14)))) (= var14 0))) (= var4 0)))) (= var0 var6)) (= var1 var7)) (= var2 var8)) (= var5 var9)) (= var3 var10)) (not (= var4 0))) (<= 0 (+ var11 (* (- 1) 1)))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var11))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 2) var11) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var11))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var11))) 2) (* (- 1) 1))))) (inv_main32 var3 var5 var2 1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main39 var9 var8 var7 var6 var5) (= var0 var5)) (= var3 var6)) (= var1 var7)) (= var4 var8)) (= var2 (writeHeap var9 (nthAddrRange var5 (+ (* 2 var6) (* (- 1) 1))) (O_Int (+ (* 2 var6) (* (- 1) 1)))))) (is-O_Int (readHeap var9 (nthAddrRange var5 (+ (* 2 var6) (* (- 1) 1)))))) (is-O_Int (readHeap var9 (nthAddrRange var5 (+ (* 2 var6) (* (- 1) 1)))))) (<= 0 (+ var10 (* (- 1) (+ var3 1))))) (or (not (<= 0 (+ (* (- 1) (+ var4 (* (- 2) var10))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var4) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 2) var10) var4) (* (- 1) 1)))) (<= 0 (+ var4 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var4 (* (- 2) var10))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var4 (* (- 2) var10))) 2) (* (- 1) 1))))) (inv_main32 var2 var4 var1 (+ var3 1) var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap) (var11 Int)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main35 var10 var9 var8 var7 var6) (= var3 (getInt (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 1))))))) (= var0 var6)) (= var4 var7)) (= var1 var8)) (= var5 var9)) (= var2 var10)) (is-O_Int (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 1)))))) (not (<= 0 (+ (+ (* (- 1) var4) var3) (* (- 1) 1))))) (<= 0 (+ var11 (* (- 1) (+ var4 1))))) (or (not (<= 0 (+ (* (- 1) (+ var5 (* (- 2) var11))) (* (- 1) 1)))) (<= 0 (+ (* (- 1) var5) (* (- 1) 1))))) (or (not (<= 0 (+ (+ (* (- 2) var11) var5) (* (- 1) 1)))) (<= 0 (+ var5 (* (- 1) 1))))) (<= 0 (+ (+ (* 1 (+ var5 (* (- 2) var11))) 2) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var5 (* (- 2) var11))) 2) (* (- 1) 1))))) (inv_main32 var2 var5 var1 (+ var4 1) var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main15 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var1) var3) (* (- 1) 1))))) (inv_main18 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main32 var10 var9 var8 var7 var6) (= var5 (getInt (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 2))))))) (= var0 var6)) (= var4 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (is-O_Int (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 2)))))) (<= 0 (+ (+ (* (- 1) var4) var5) (* (- 1) 1))))) (inv_main36 var3 var2 var1 var4 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main35 var10 var9 var8 var7 var6) (= var5 (getInt (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 1))))))) (= var0 var6)) (= var4 var7)) (= var1 var8)) (= var2 var9)) (= var3 var10)) (is-O_Int (readHeap var10 (nthAddrRange var6 (+ (* 2 var7) (* (- 1) 1)))))) (<= 0 (+ (+ (* (- 1) var4) var5) (* (- 1) 1))))) (inv_main39 var3 var2 var1 var4 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main18 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main18 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var1)))) (is-O_Int (readHeap var4 (nthAddrRange var0 var1)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main18 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 var1))))) (is-O_Int (readHeap var4 (nthAddrRange var0 var1)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main32 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main32 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2)))))) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main36 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main36 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2)))))) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main36 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2))))))) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 2)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main35 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main35 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1)))))) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main39 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1))))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main39 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1)))))) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main39 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1))))))) (is-O_Int (readHeap var4 (nthAddrRange var0 (+ (* 2 var1) (* (- 1) 1)))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var1)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main43 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 var1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main43 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var1)))) (is-O_Int (readHeap var4 (nthAddrRange var0 var1)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main43 var4 var3 var2 var1 var0) (not (<= 0 (+ var1 (* (- 1) (getInt (readHeap var4 (nthAddrRange var0 var1)))))))) (is-O_Int (readHeap var4 (nthAddrRange var0 var1)))))))
(check-sat)
