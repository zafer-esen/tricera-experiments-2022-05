(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main12 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main18 (Heap Int Int AddrRange AddrRange AddrRange Int AddrRange Int Int) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main21 (Heap Int Int AddrRange AddrRange AddrRange Int AddrRange Int Int Int) Bool)
(declare-fun inv_main25 (Heap Int Int AddrRange AddrRange AddrRange Int AddrRange Int Int Int Int) Bool)
(declare-fun inv_main41 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main43 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main44 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main46 (Heap Int Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main52 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main54 (Heap Int Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main60 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main65 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main68 (Heap Int Int AddrRange AddrRange Int Int) Bool)
(declare-fun inv_main72 (Heap Int Int AddrRange AddrRange Int Int Int) Bool)
(declare-fun inv_main73 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main9 (Heap Int Int AddrRange AddrRange) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (inv_main72 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var0 (getUInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))) (or (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var6) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1))))))) (inv_main65 var7 var6 var5 var4 var3 (+ var2 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (inv_main72 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 (getUInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2))))))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))) (or (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var6) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1))))))) (inv_main65 var7 var6 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (and (inv_main12 var5 var4 var3 var2 var1 var0) (= var0 0)) (<= 0 (+ (+ 1 var3) (* (- 1) var4)))) (or (not (<= 0 (+ var4 (* (- 1) 1)))) (not (<= 0 (+ var3 (* (- 1) 1))))))) (inv_main65 var5 var4 var3 var2 var1 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Heap) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main41 var14 var13 var12 var11 var10 var9 var8) (= var0 var8)) (= var1 var9)) (= var2 var10)) (= var3 var11)) (= var4 var12)) (= var5 var13)) (= var7 (writeHeap var14 (nthAddrRange var11 var8) (O_UInt var6)))) (is-O_UInt (readHeap var14 (nthAddrRange var11 var8)))) (is-O_UInt (readHeap var14 (nthAddrRange var11 var8))))) (inv_main43 var7 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main52 var6 var5 var4 var3 var2 var1 var0) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))) (inv_main54 var6 var5 var4 var3 var2 var1 var0 (getUInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main44 var6 var5 var4 var3 var2 var1 var0) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))) (inv_main46 var6 var5 var4 var3 var2 var1 var0 (getUInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main43 var14 var13 var12 var11 var10 var9 var8) (= var7 var8)) (= var6 var9)) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var5 (writeHeap var14 (nthAddrRange var10 var8) (O_UInt var4)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (not (<= 0 (+ (+ (* (- 1) var7) var6) (* (- 1) 1))))) (= var7 var6))) (inv_main52 var5 var3 var2 var1 var0 var6 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))) (inv_main72 var6 var5 var4 var3 var2 var1 var0 (getUInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (and (and (inv_main25 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var0 (getInt (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (not (= var2 0)))) (inv_main12 var11 var10 var9 var8 var7 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (and (inv_main18 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 1)) (<= 0 (+ (+ (* (- 1) var1) var3) (* (- 1) 1))))) (inv_main12 var9 var8 var7 var6 var5 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 AddrRange) (var5 AddrRange) (var6 AddrRange) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (inv_main18 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (or (not (<= 0 (+ (+ (* (- 1) var1) var3) (* (- 1) 1)))) (not (= var0 1))))) (inv_main12 var9 var8 var7 var6 var5 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (batchAllocHeapPostHeap var13 var9 (O_Int var2) var1) (batchAllocHeapPostHeap var9 var10 (O_Int var8) var7)) (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1)))))) (inv_main12 var10 var12 var11 var5 var3 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (batchAllocHeap var13 var13 (O_Int var2) var1 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (batchAllocHeap var9 var9 (O_Int var8) var7 var7))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main43 var14 var13 var12 var11 var10 var9 var8) (= var7 var8)) (= var6 var9)) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var5 (writeHeap var14 (nthAddrRange var10 var8) (O_UInt var4)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (not (<= 0 (+ (+ (* (- 1) var7) var6) (* (- 1) 1))))) (not (= var7 var6))) (<= 0 (+ (+ (* (- 1) var6) var7) (* (- 1) 1))))) (inv_main60 var5 var3 var2 var1 var0 var6 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (and (inv_main72 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var0 (getUInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var6) (* (- 1) 1))))) (inv_main68 var7 var6 var5 var4 var3 (+ var2 1) (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (or (not (and (and (and (and (inv_main72 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 (getUInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2))))))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var6) (* (- 1) 1))))) (inv_main68 var7 var6 var5 var4 var3 var2 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (and (and (inv_main12 var5 var4 var3 var2 var1 var0) (= var0 0)) (<= 0 (+ (+ 1 var3) (* (- 1) var4)))) (<= 0 (+ var3 (* (- 1) 1)))) (<= 0 (+ var4 (* (- 1) 1))))) (inv_main68 var5 var4 var3 var2 var1 0 0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (and (and (inv_main9 var5 var4 var3 var2 var1) (<= 0 var0)) (<= 0 (+ (+ (* (- 1) var3) var4) (* (- 1) 1)))) (<= 0 (+ var3 (* (- 1) 1)))) (<= 0 (+ var4 (* (- 1) 1))))) (inv_main41 var5 var4 var3 var2 var1 (+ var4 (* (- 1) 1)) 0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (and (and (inv_main9 var5 var4 var3 var2 var1) (<= 0 var0)) (not (<= 0 (+ (+ (* (- 1) var3) var4) (* (- 1) 1))))) (<= 0 (+ var3 (* (- 1) 1)))) (<= 0 (+ var4 (* (- 1) 1))))) (inv_main41 var5 var4 var3 var2 var1 var0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (or (not (and (and (and (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))) (<= 0 (+ (+ (* (- 1) (+ var0 1)) var4) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var0 1)) var5) (* (- 1) 1))))) (inv_main41 var6 var5 var4 var3 var2 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main46 var15 var14 var13 var12 var11 var10 var9 var8) (or (and (= var8 (getUInt (readHeap var15 (nthAddrRange var11 var9)))) (= var4 1)) (and (not (= var8 (getUInt (readHeap var15 (nthAddrRange var11 var9))))) (= var4 0)))) (= var6 var9)) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var5 var13)) (= var7 var14)) (= var3 var15)) (is-O_UInt (readHeap var15 (nthAddrRange var11 var9)))) (not (= var4 0))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var7) (* (- 1) 1))))) (inv_main41 var3 var7 var5 var2 var1 var0 (+ var6 1)))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main54 var15 var14 var13 var12 var11 var10 var9 var8) (or (and (not (= var8 (getUInt (readHeap var15 (nthAddrRange var11 var9))))) (= var4 1)) (and (= var8 (getUInt (readHeap var15 (nthAddrRange var11 var9)))) (= var4 0)))) (= var6 var9)) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var5 var13)) (= var7 var14)) (= var3 var15)) (is-O_UInt (readHeap var15 (nthAddrRange var11 var9)))) (not (= var4 0))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var7) (* (- 1) 1))))) (inv_main41 var3 var7 var5 var2 var1 var0 (+ var6 1)))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Heap) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main43 var14 var13 var12 var11 var10 var9 var8) (= var6 var8)) (= var4 var9)) (= var0 var10)) (= var1 var11)) (= var5 var12)) (= var7 var13)) (= var3 (writeHeap var14 (nthAddrRange var10 var8) (O_UInt var2)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (not (<= 0 (+ (+ (* (- 1) var6) var4) (* (- 1) 1))))) (not (= var6 var4))) (not (<= 0 (+ (+ (* (- 1) var4) var6) (* (- 1) 1))))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var5) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var6 1)) var7) (* (- 1) 1))))) (inv_main41 var3 var7 var5 var1 var0 var4 (+ var6 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (inv_main21 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var10 (nthAddrRange var5 var0))))) (inv_main25 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0 (getInt (readHeap var10 (nthAddrRange var5 var0)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Heap) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 AddrRange) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main43 var14 var13 var12 var11 var10 var9 var8) (= var6 var8)) (= var7 var9)) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var5 (writeHeap var14 (nthAddrRange var10 var8) (O_UInt var4)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (is-O_UInt (readHeap var14 (nthAddrRange var10 var8)))) (<= 0 (+ (+ (* (- 1) var6) var7) (* (- 1) 1))))) (inv_main44 var5 var3 var2 var1 var0 var7 var6))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (and (and (inv_main25 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 (getInt (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2))))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (or (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var3) (* (- 1) 1))))))) (inv_main18 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (and (and (and (inv_main25 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var0 (getInt (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (= var2 0)) (or (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1)))) (not (<= 0 (+ (+ (* (- 1) (+ var1 1)) var3) (* (- 1) 1))))))) (inv_main18 var11 var10 var9 var8 var7 var6 var5 var4 var3 1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (batchAllocHeapPostHeap var13 var9 (O_Int var2) var1) (batchAllocHeapPostHeap var9 var10 (O_Int var8) var7)) (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (not (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (or (not (<= 0 (+ var12 (* (- 1) 1)))) (not (<= 0 (+ var11 (* (- 1) 1)))))))) (inv_main18 var10 var12 var11 var5 var3 var5 var12 var3 var11 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (not (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (or (not (<= 0 (+ var12 (* (- 1) 1)))) (not (<= 0 (+ var11 (* (- 1) 1))))))) (batchAllocHeap var13 var13 (O_Int var2) var1 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (not (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (or (not (<= 0 (+ var12 (* (- 1) 1)))) (not (<= 0 (+ var11 (* (- 1) 1))))))) (batchAllocHeap var9 var9 (O_Int var8) var7 var7))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (and (and (and (inv_main25 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (= var0 (getInt (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2))))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1))))) (inv_main21 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (or (not (and (and (and (and (and (inv_main25 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (= var0 (getInt (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (= var2 0)) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var3) (* (- 1) 1)))) (<= 0 (+ (+ (* (- 1) (+ var1 1)) var5) (* (- 1) 1))))) (inv_main21 var11 var10 var9 var8 var7 var6 var5 var4 var3 1 (+ var1 1)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (batchAllocHeapPostHeap var13 var9 (O_Int var2) var1) (batchAllocHeapPostHeap var9 var10 (O_Int var8) var7)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (not (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (<= 0 (+ var11 (* (- 1) 1)))) (<= 0 (+ var12 (* (- 1) 1)))))) (inv_main21 var10 var12 var11 var5 var3 var5 var12 var3 var11 0 0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (not (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (<= 0 (+ var11 (* (- 1) 1)))) (<= 0 (+ var12 (* (- 1) 1))))) (batchAllocHeap var13 var13 (O_Int var2) var1 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 AddrRange) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 Heap) (var11 Int) (var12 Int) (var13 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var13) (<= 0 var1)) (<= 0 var0)) (= var4 (AddrRange (ite (<= 0 (+ var1 (- 1))) (+ (HeapSize var13) 1) (HeapSize var13)) var1))) (= var7 var0)) (= var6 var1)) true) (= var3 (AddrRange (ite (<= 0 (+ var7 (- 1))) (+ (HeapSize var9) 1) (HeapSize var9)) var7))) (= var5 var4)) (= var11 var7)) (= var12 var6)) true) (not (<= 0 (+ (+ (* (- 1) (+ var11 1)) var12) (* (- 1) 1))))) (<= 0 (+ var11 (* (- 1) 1)))) (<= 0 (+ var12 (* (- 1) 1))))) (batchAllocHeap var9 var9 (O_Int var8) var7 var7))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main65 var5 var4 var3 var2 var1 var0) (<= 0 (+ (+ (* (- 1) var3) var4) (* (- 1) 1))))) (inv_main73 var5 var4 var3 var2 var1 (+ var0 1)))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main65 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var3) var4) (* (- 1) 1)))))) (inv_main73 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (inv_main12 var5 var4 var3 var2 var1 var0) (not (= var0 0)))) (inv_main9 var5 var4 var3 var2 var1))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (not (and (inv_main21 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var10 (nthAddrRange var5 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 Int) (var5 AddrRange) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (not (and (and (inv_main21 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var5 (nthAddrRange var5 var0)))) (is-O_Int (readHeap var10 (nthAddrRange var5 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (not (and (inv_main25 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 AddrRange) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 AddrRange) (var9 Int) (var10 Int) (var11 Heap)) (not (and (and (inv_main25 var11 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var4 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))) (is-O_Int (readHeap var11 (nthAddrRange var4 (+ var1 (* (- 1) var2)))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main9 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ 1 var2) (* (- 1) var3))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main41 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main41 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main41 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main43 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var2 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main43 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var2 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main43 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var2 var0))))) (is-O_UInt (readHeap var6 (nthAddrRange var2 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main44 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main44 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main46 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var7 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main46 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var1)))) (is-O_UInt (readHeap var7 (nthAddrRange var3 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main52 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main52 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main54 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var7 (nthAddrRange var3 var1))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main54 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var1)))) (is-O_UInt (readHeap var7 (nthAddrRange var3 var1)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1))))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))) (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (and (inv_main60 var6 var5 var4 var3 var2 var1 var0) (not (= (getUInt (readHeap var6 (nthAddrRange var3 var0))) (getUInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))))) (is-O_UInt (readHeap var6 (nthAddrRange var2 (+ var0 (* (- 1) 1)))))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var6 (nthAddrRange var3 var0))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Heap)) (not (and (and (inv_main68 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 var0)))) (is-O_UInt (readHeap var6 (nthAddrRange var3 var0)))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (inv_main72 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2))))))))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 AddrRange) (var4 AddrRange) (var5 Int) (var6 Int) (var7 Heap)) (not (and (and (inv_main72 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var3 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))) (is-O_UInt (readHeap var7 (nthAddrRange var3 (+ var1 (* (- 1) var2)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main73 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))))))))
(check-sat)
