(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main24 (Heap Int Int AddrRange AddrRange) Bool)
(declare-fun inv_main25 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main26 (Heap Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main29 (Heap Int Int AddrRange AddrRange) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main26 var10 var9 var8 var7 var6 var5) (= var0 var6)) (= var1 var7)) (= var3 var8)) (= var4 var9)) (= var2 (writeHeap var10 (nthAddrRange var6 var8) (O_Int var5)))) (is-O_Int (readHeap var10 (nthAddrRange var6 var8)))) (is-O_Int (readHeap var10 (nthAddrRange var6 var8)))) (<= 0 (+ (+ (* (- 1) (+ var3 1)) var4) (* (- 1) 1))))) (inv_main22 var2 var4 (+ var3 1) var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (and (batchAllocHeapPostHeap emptyHeap var9 (O_Int var8) (* 2 var7)) (batchAllocHeapPostHeap emptyHeap var17 (O_Int var16) (* 2 var15))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19) (or (and (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (= var1 0)))) (= var2 var0)) (= var3 var19)) (not (= var1 0))) (or (and (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1))) (= var5 1)) (and (not (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1)))) (= var5 0)))) (= var7 var2)) (= var4 var3)) (not (= var5 0))) (= var11 (AddrRange (ite (<= 0 (+ (* 2 var7) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var7)))) (= var13 var6)) (= var15 var7)) true) (= var10 (AddrRange (ite (<= 0 (+ (* 2 var15) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var15)))) (= var12 var11)) (= var14 var13)) (= var18 var15)) true) (<= 0 (+ var18 (* (- 1) 1)))))) (inv_main22 var17 var18 0 var12 var10))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19) (or (and (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (= var1 0)))) (= var2 var0)) (= var3 var19)) (not (= var1 0))) (or (and (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1))) (= var5 1)) (and (not (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1)))) (= var5 0)))) (= var7 var2)) (= var4 var3)) (not (= var5 0))) (= var11 (AddrRange (ite (<= 0 (+ (* 2 var7) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var7)))) (= var13 var6)) (= var15 var7)) true) (= var10 (AddrRange (ite (<= 0 (+ (* 2 var15) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var15)))) (= var12 var11)) (= var14 var13)) (= var18 var15)) true) (<= 0 (+ var18 (* (- 1) 1))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var8) (* 2 var7) (* 2 var7)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19) (or (and (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (= var1 0)))) (= var2 var0)) (= var3 var19)) (not (= var1 0))) (or (and (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1))) (= var5 1)) (and (not (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1)))) (= var5 0)))) (= var7 var2)) (= var4 var3)) (not (= var5 0))) (= var11 (AddrRange (ite (<= 0 (+ (* 2 var7) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var7)))) (= var13 var6)) (= var15 var7)) true) (= var10 (AddrRange (ite (<= 0 (+ (* 2 var15) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var15)))) (= var12 var11)) (= var14 var13)) (= var18 var15)) true) (<= 0 (+ var18 (* (- 1) 1))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var16) (* 2 var15) (* 2 var15)))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main22 var4 var3 var2 var1 var0) (is-O_Int (readHeap var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))))) (inv_main25 var4 var3 var2 var1 var0 (getInt (readHeap var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (and (and (inv_main29 var4 var3 var2 var1 var0) (is-O_Int (readHeap var4 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var4 (nthAddrRange var0 var2)))) (<= 0 (+ (+ (* (- 1) (+ var2 1)) (* 2 var3)) (* (- 1) 1))))) (inv_main29 var4 var3 (+ var2 1) var1 var0))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Heap) (var3 Int) (var4 Int) (var5 Int) (var6 AddrRange) (var7 AddrRange) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main26 var10 var9 var8 var7 var6 var5) (= var0 var6)) (= var1 var7)) (= var3 var8)) (= var4 var9)) (= var2 (writeHeap var10 (nthAddrRange var6 var8) (O_Int var5)))) (is-O_Int (readHeap var10 (nthAddrRange var6 var8)))) (is-O_Int (readHeap var10 (nthAddrRange var6 var8)))) (not (<= 0 (+ (+ (* (- 1) (+ var3 1)) var4) (* (- 1) 1))))) (<= 0 (+ (* 2 var4) (* (- 1) 1))))) (inv_main29 var2 var4 0 var1 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (and (batchAllocHeapPostHeap emptyHeap var9 (O_Int var8) (* 2 var7)) (batchAllocHeapPostHeap emptyHeap var17 (O_Int var16) (* 2 var15))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19) (or (and (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (= var1 0)))) (= var2 var0)) (= var3 var19)) (not (= var1 0))) (or (and (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1))) (= var5 1)) (and (not (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1)))) (= var5 0)))) (= var7 var2)) (= var4 var3)) (not (= var5 0))) (= var11 (AddrRange (ite (<= 0 (+ (* 2 var7) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var7)))) (= var13 var6)) (= var15 var7)) true) (= var10 (AddrRange (ite (<= 0 (+ (* 2 var15) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var15)))) (= var12 var11)) (= var14 var13)) (= var18 var15)) true) (not (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (* 2 var18) (* (- 1) 1)))))) (inv_main29 var17 var18 0 var12 var10))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19) (or (and (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (= var1 0)))) (= var2 var0)) (= var3 var19)) (not (= var1 0))) (or (and (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1))) (= var5 1)) (and (not (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1)))) (= var5 0)))) (= var7 var2)) (= var4 var3)) (not (= var5 0))) (= var11 (AddrRange (ite (<= 0 (+ (* 2 var7) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var7)))) (= var13 var6)) (= var15 var7)) true) (= var10 (AddrRange (ite (<= 0 (+ (* 2 var15) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var15)))) (= var12 var11)) (= var14 var13)) (= var18 var15)) true) (not (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (* 2 var18) (* (- 1) 1))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var8) (* 2 var7) (* 2 var7)))))
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Heap) (var4 Heap) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap) (var10 AddrRange) (var11 AddrRange) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap) (var18 Int) (var19 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main2 var19) (or (and (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1))) (= var1 1)) (and (not (<= 0 (+ (+ (* (- 1) 1) var0) (* (- 1) 1)))) (= var1 0)))) (= var2 var0)) (= var3 var19)) (not (= var1 0))) (or (and (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1))) (= var5 1)) (and (not (<= 0 (+ (+ (* (- 1) var2) 1073741823) (* (- 1) 1)))) (= var5 0)))) (= var7 var2)) (= var4 var3)) (not (= var5 0))) (= var11 (AddrRange (ite (<= 0 (+ (* 2 var7) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var7)))) (= var13 var6)) (= var15 var7)) true) (= var10 (AddrRange (ite (<= 0 (+ (* 2 var15) (- 1))) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) (* 2 var15)))) (= var12 var11)) (= var14 var13)) (= var18 var15)) true) (not (<= 0 (+ var18 (* (- 1) 1))))) (<= 0 (+ (* 2 var18) (* (- 1) 1))))) (batchAllocHeap emptyHeap emptyHeap (O_Int var16) (* 2 var15) (* 2 var15)))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (or (not (and (and (inv_main25 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1))))))) (is-O_Int (readHeap var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))) (inv_main24 (writeHeap var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))) (O_Int var0)) var4 var3 var2 var1))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (or (not (and (inv_main24 var4 var3 var2 var1 var0) (is-O_Int (readHeap var4 (nthAddrRange var1 var2))))) (inv_main26 var4 var3 var2 var1 var0 (getInt (readHeap var4 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main22 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1)))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main22 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1))))))) (is-O_Int (readHeap var4 (nthAddrRange var1 (+ (* 2 var3) (* (- 1) (+ var2 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main25 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main25 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1))))))) (is-O_Int (readHeap var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1))))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main25 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1)))))))) (is-O_Int (readHeap var5 (nthAddrRange var1 (+ (* 2 var4) (* (- 1) (+ var3 1))))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main24 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main24 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var4 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (inv_main26 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 var3))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main26 var5 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var3)))) (is-O_Int (readHeap var5 (nthAddrRange var1 var3)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Heap)) (not (and (and (inv_main26 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var5 (nthAddrRange var1 var3))))) (is-O_Int (readHeap var5 (nthAddrRange var1 var3)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var1 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var0 var2))))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main29 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var2)))) (is-O_Int (readHeap var4 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (inv_main29 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var4 (nthAddrRange var1 var2))))) (is-O_Int (readHeap var4 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (and (inv_main29 var4 var3 var2 var1 var0) (not (withinHeap var1 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var4 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var4 (nthAddrRange var0 var2)))))))
(assert (forall ((var0 AddrRange) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Heap)) (not (and (and (and (inv_main29 var4 var3 var2 var1 var0) (not (= (getInt (readHeap var4 (nthAddrRange var0 var2))) (getInt (readHeap var4 (nthAddrRange var1 var2)))))) (is-O_Int (readHeap var4 (nthAddrRange var1 var2)))) (is-O_Int (readHeap var4 (nthAddrRange var0 var2)))))))
(check-sat)
