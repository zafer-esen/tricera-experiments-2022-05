(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status unsat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (defObj))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main10 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main24 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main39 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main4 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main40 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main43 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main46 (Heap Int Int Int Int Int Int Int AddrRange AddrRange Int) Bool)
(declare-fun inv_main59 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main61 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(declare-fun inv_main9 (Heap Int Int Int Int Int Int Int AddrRange) Bool)
(assert (forall ((var0 Int) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (= var8 emptyHeap)) (inv_main4 (newBatchHeap (batchAllocHeap emptyHeap (O_Int var7) 1000)) var6 var5 var4 var3 var2 var1 var0 (AddrRange (ite (<= 0 999) (+ (HeapSize emptyHeap) 1) (HeapSize emptyHeap)) 1000)))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0) (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))) (inv_main46 var8 var7 var6 var5 var4 var3 var2 var1 var0 (AddrRange (nthAddrRange var0 var7) (+ (AddrRangeSize var0) (* (- 1) var7))) var7))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main40 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (getInt (readHeap var18 (nthAddrRange var10 var17))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_Int (readHeap var18 (nthAddrRange var10 var17)))) (= var9 1))) (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main39 var20 var19 var18 var17 var16 var15 var14 var13 var12) (= var9 (getInt (readHeap var20 (nthAddrRange var12 var18))))) (= var0 var12)) (= var1 var13)) (= var2 var14)) (= var3 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var7 var19)) (= var8 var20)) (is-O_Int (readHeap var20 (nthAddrRange var12 var18)))) (= var9 0)) (= var10 (* (- 1) 1))) (<= 0 var11)) (not (<= 0 (+ (+ (* (- 1) 20) var11) (* (- 1) 1))))) (<= 0 (+ var11 (* (- 1) 1))))) (inv_main61 var8 var7 var6 var10 var4 var3 var2 var11 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (and (and (and (inv_main24 var9 var8 var7 var6 var5 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var5) var4) (* (- 1) 1)))) (not (= var0 1))) (not (= var0 0))) (not (= var0 (* (- 1) 1))))) (inv_main39 var9 var8 0 var0 var5 var4 var0 var2 var1))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 AddrRange) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Int) (var11 Heap) (var12 Int) (var13 AddrRange) (var14 AddrRange) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Int) (var21 Int) (var22 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main46 var22 var21 var20 var19 var18 var17 var16 var15 var14 var13 var12) (= var0 1001)) (= var1 (AddrRange (nthAddrRange var14 (+ var12 1)) (+ (AddrRangeSize var14) (* (- 1) (+ var12 1)))))) (= var2 var13)) (= var3 var14)) (= var4 var15)) (= var5 var16)) (= var6 var17)) (= var7 var18)) (= var8 var19)) (= var9 var20)) (= var10 var21)) (= var11 var22)) (is-O_Int (readHeap var22 (nthAddrRange var14 (+ var12 1)))))) (inv_main39 var11 var10 (+ var9 1) var8 var7 var6 var5 var4 var3))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main40 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (getInt (readHeap var18 (nthAddrRange var10 var17))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_Int (readHeap var18 (nthAddrRange var10 var17)))) (not (= var9 1)))) (inv_main39 var8 var7 (+ var6 1) var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main59 var17 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var8 (writeHeap var17 (nthAddrRange var9 var16) (O_Int 0)))) (is-O_Int (readHeap var17 (nthAddrRange var9 var16)))) (is-O_Int (readHeap var17 (nthAddrRange var9 var16))))) (inv_main24 var8 var7 var6 var5 (+ var4 1) var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 AddrRange) (var10 Int) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (inv_main61 var17 var16 var15 var14 var13 var12 var11 var10 var9) (= var0 var9)) (= var1 var10)) (= var2 var11)) (= var3 var12)) (= var4 var13)) (= var5 var14)) (= var6 var15)) (= var7 var16)) (= var8 (writeHeap var17 (nthAddrRange var9 var16) (O_Int (* (- 1) 1))))) (is-O_Int (readHeap var17 (nthAddrRange var9 var16)))) (is-O_Int (readHeap var17 (nthAddrRange var9 var16))))) (inv_main24 var8 var7 var6 var5 (+ var4 1) var3 var2 var1 var0))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Heap)) (or (not (and (and (and (and (inv_main24 var9 var8 var7 var6 var5 var4 var3 var2 var1) (<= 0 (+ (+ (* (- 1) var5) var4) (* (- 1) 1)))) (not (= var0 1))) (not (= var0 0))) (= var0 (* (- 1) 1)))) (inv_main24 var9 var8 var7 var0 (+ var5 1) var4 var0 var2 var1))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 AddrRange) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main39 var19 var18 var17 var16 var15 var14 var13 var12 var11) (= var9 (getInt (readHeap var19 (nthAddrRange var11 var17))))) (= var0 var11)) (= var1 var12)) (= var2 var13)) (= var3 var14)) (= var4 var15)) (= var5 var16)) (= var6 var17)) (= var7 var18)) (= var8 var19)) (is-O_Int (readHeap var19 (nthAddrRange var11 var17)))) (= var9 0)) (not (= var10 (* (- 1) 1))))) (inv_main24 var8 var7 var6 var10 (+ var4 1) var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main39 var20 var19 var18 var17 var16 var15 var14 var13 var12) (= var9 (getInt (readHeap var20 (nthAddrRange var12 var18))))) (= var0 var12)) (= var1 var13)) (= var2 var14)) (= var3 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var7 var19)) (= var8 var20)) (is-O_Int (readHeap var20 (nthAddrRange var12 var18)))) (= var9 0)) (= var10 (* (- 1) 1))) (<= 0 var11)) (not (<= 0 (+ (+ (* (- 1) 20) var11) (* (- 1) 1))))) (not (<= 0 (+ var11 (* (- 1) 1)))))) (inv_main24 var8 var7 var6 var10 (+ var4 1) var3 var2 var11 var0))))
(assert (forall ((var0 Int) (var1 Int) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (or (not (and (and (and (and (inv_main24 var10 var9 var8 var7 var6 var5 var4 var3 var2) (not (<= 0 (+ (+ (* (- 1) var6) var5) (* (- 1) 1))))) (<= 0 (+ (+ (* (- 1) (+ var9 1)) 1000) (* (- 1) 1)))) (= var0 0)) (not (<= 0 (+ (* (- 1) var1) (* (- 1) 1)))))) (inv_main24 var10 (+ var9 1) var8 var0 0 var1 var4 var3 var2))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main9 var20 var19 var18 var17 var16 var15 var14 var13 var12) (= var0 var12)) (= var1 var13)) (= var2 var14)) (= var3 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var9 var19)) (= var8 (writeHeap var20 (nthAddrRange var12 var19) (O_Int var7)))) (is-O_Int (readHeap var20 (nthAddrRange var12 var19)))) (is-O_Int (readHeap var20 (nthAddrRange var12 var19)))) (not (<= 0 (+ (+ (* (- 1) (+ var9 1)) 1000) (* (- 1) 1))))) (= var10 0)) (not (<= 0 (+ (* (- 1) var11) (* (- 1) 1)))))) (inv_main24 var8 0 var6 var10 0 var11 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (inv_main4 var8 var7 var6 var5 var4 var3 var2 var1 var0)) (inv_main9 var8 0 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main9 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var9 var17)) (= var8 (writeHeap var18 (nthAddrRange var10 var17) (O_Int var7)))) (is-O_Int (readHeap var18 (nthAddrRange var10 var17)))) (is-O_Int (readHeap var18 (nthAddrRange var10 var17)))) (<= 0 (+ (+ (* (- 1) (+ var9 1)) 1000) (* (- 1) 1))))) (inv_main9 var8 (+ var9 1) var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 AddrRange) (var11 Int) (var12 Int) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (inv_main39 var18 var17 var16 var15 var14 var13 var12 var11 var10) (= var9 (getInt (readHeap var18 (nthAddrRange var10 var16))))) (= var0 var10)) (= var1 var11)) (= var2 var12)) (= var3 var13)) (= var4 var14)) (= var5 var15)) (= var6 var16)) (= var7 var17)) (= var8 var18)) (is-O_Int (readHeap var18 (nthAddrRange var10 var16)))) (not (= var9 0)))) (inv_main40 var8 var7 var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap) (var9 Int) (var10 Int) (var11 Int) (var12 AddrRange) (var13 Int) (var14 Int) (var15 Int) (var16 Int) (var17 Int) (var18 Int) (var19 Int) (var20 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (inv_main39 var20 var19 var18 var17 var16 var15 var14 var13 var12) (= var9 (getInt (readHeap var20 (nthAddrRange var12 var18))))) (= var0 var12)) (= var1 var13)) (= var2 var14)) (= var3 var15)) (= var4 var16)) (= var5 var17)) (= var6 var18)) (= var7 var19)) (= var8 var20)) (is-O_Int (readHeap var20 (nthAddrRange var12 var18)))) (= var9 0)) (= var10 (* (- 1) 1))) (<= 0 var11)) (<= 0 (+ (+ (* (- 1) 20) var11) (* (- 1) 1))))) (inv_main59 var8 var7 var6 var10 var4 var3 var2 var11 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (or (not (and (and (inv_main24 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (<= 0 (+ (+ (* (- 1) var4) var3) (* (- 1) 1))))) (not (<= 0 (+ (+ (* (- 1) (+ var7 1)) 1000) (* (- 1) 1)))))) (inv_main10 var8 (+ var7 1) var6 var5 var4 var3 var2 var1 var0))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var7)))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var6))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main39 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var6)))) (is-O_Int (readHeap var8 (nthAddrRange var0 var6)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main40 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main40 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var7)))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main43 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var7)))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (not (and (inv_main46 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var10 (nthAddrRange var2 (+ var0 1)))))))))
(assert (forall ((var0 Int) (var1 AddrRange) (var2 AddrRange) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Int) (var9 Int) (var10 Heap)) (not (and (and (inv_main46 var10 var9 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var2 (nthAddrRange var2 (+ var0 1))))) (is-O_Int (readHeap var10 (nthAddrRange var2 (+ var0 1))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main59 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main59 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var7)))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main59 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (withinHeap var0 (nthAddrRange var0 var7)))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (and (inv_main61 var8 var7 var6 var5 var4 var3 var2 var1 var0) (not (is-O_Int (readHeap var8 (nthAddrRange var0 var7))))) (is-O_Int (readHeap var8 (nthAddrRange var0 var7)))))))
(assert (forall ((var0 AddrRange) (var1 Int) (var2 Int) (var3 Int) (var4 Int) (var5 Int) (var6 Int) (var7 Int) (var8 Heap)) (not (and (inv_main10 var8 var7 var6 var5 var4 var3 var2 var1 var0) (or (not (<= 0 var4)) (not (<= 0 (+ 1000 (* (- 1) var4)))))))))
(check-sat)
