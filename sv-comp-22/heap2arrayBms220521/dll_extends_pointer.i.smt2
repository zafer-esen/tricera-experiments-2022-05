(set-logic HORN)
(set-info :source |
    Benchmark: C_VC
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
;===============================================================================
; Encoding of Heap sorts and operations
;-------------------------------------------------------------------------------
(define-sort Addr() Int)
(declare-datatypes ((AddrRange 0))
                   (((AddrRange (AddrRangeStart Addr) (AddrRangeSize Int)))))

(declare-datatypes ((HeapObject 0) (TData 0) (TNode 0))
                   (((O_Int (getInt Int)) (O_UInt (getUInt Int)) (O_Addr (getAddr Addr)) (O_TData (getTData TData)) (O_TNode (getTNode TNode)) (defObj))
                   ((TData (x Int)))
                   ((TNode (next Addr) (prev Addr) (pData Addr) (data TData)))))
(declare-datatypes ((BatchAllocResHeap 0) (AllocResHeap 0) (Heap 0))
                   (((BatchAllocResHeap   (newBatchHeap Heap) (newAddrRange AddrRange)))
                   ((AllocResHeap   (newHeap Heap) (newAddr Addr)))
                    ((HeapCtor (HeapSize Int)
                               (HeapContents (Array Addr HeapObject))))))
(define-fun nullAddr  () Addr 0)
(define-fun validHeap     ((h Heap) (p Addr)) Bool
  (and (>= (HeapSize h) p) (> p 0)))
(define-fun emptyHeap () Heap (
  HeapCtor 0 (( as const (Array Addr HeapObject)) defObj)))
(define-fun readHeap ((h Heap) (p Addr)) HeapObject
  (ite (validHeap h p)
       (select (HeapContents h) p)
       defObj))
(define-fun writeHeap ((h Heap) (p Addr) (o HeapObject)) Heap
  (ite (validHeap h p)
       (HeapCtor (HeapSize h) (store (HeapContents h) p o))
       h))
(define-fun allocHeap   ((h Heap) (o HeapObject)) AllocResHeap
  (AllocResHeap (HeapCtor (+ 1 (HeapSize h))
                    (store (HeapContents h) (+ 1 (HeapSize h)) o))
          (+ 1 (HeapSize h))))
(define-fun Heap-eq     ((h1 Heap) (h2 Heap)) Bool
  (forall ((p Addr))
          (and (= (validHeap h1 p) (validHeap h2 p))
               (= (readHeap h1 p) (readHeap h2 p)))))
(define-fun nthAddrRange((ar AddrRange) (n Int)) Addr
  (ite (and (>= n 0) (< n (AddrRangeSize ar)))
       (+ (AddrRangeStart ar) n)
       nullAddr))
(define-fun withinHeap ((ar AddrRange ) (p Addr)) Bool
  (and (>= p (AddrRangeStart ar)) (< p (+ (AddrRangeStart ar) (AddrRangeSize ar)))))

(declare-fun batchAllocHeap     (Heap Heap HeapObject Int Int) Bool)
(declare-fun batchAllocPostHeap (Heap Heap HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocHeap h1 (newHeap (allocHeap h2 o)) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchAllocHeap h1 h2 o n1 n2))
                   (batchAllocPostHeap h1 h2 o n1))))

(declare-fun batchWriteHeap     (Heap Heap Addr Addr HeapObject Int Int) Bool)
(declare-fun batchWritePostHeap (Heap Heap Addr HeapObject Int) Bool)

(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (> n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWriteHeap h1 (writeHeap h2 a2 o) a1 (+ a2 1) o n1 (- n2 1)))))
(assert (forall ((h1 Heap) (h2 Heap) (a1 Addr) (a2 Addr) (o HeapObject) (n1 Int) (n2 Int))
                (=> (and (<= n2 0) (batchWriteHeap h1 h2 a1 a2 o n1 n2))
                   (batchWritePostHeap h1 h2 a1 o n1))))

;===============================================================================
(declare-fun inv_main11 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main16 (Heap Addr Addr) Bool)
(declare-fun inv_main18 (Heap Addr Addr) Bool)
(declare-fun inv_main2 (Heap) Bool)
(declare-fun inv_main22 (Heap Addr Addr) Bool)
(declare-fun inv_main24 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main26 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main29 (Heap Addr Addr) Bool)
(declare-fun inv_main30 (Heap Addr Addr) Bool)
(declare-fun inv_main33 (Heap Addr Addr) Bool)
(declare-fun inv_main36 (Heap Addr Addr Addr) Bool)
(declare-fun inv_main5 (Heap Addr Addr) Bool)
(declare-fun inv_main7 (Heap Addr Addr) Bool)
(declare-fun inv_main8 (Heap Addr Addr) Bool)
(assert (inv_main2 emptyHeap))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (and (inv_main11 var7 var6 var5 var4) (= var3 var5)) (= var0 var6)) (= var1 (writeHeap var7 var5 (O_TNode (TNode (next (getTNode (readHeap var7 var5))) (prev (getTNode (readHeap var7 var5))) var4 (data (getTNode (readHeap var7 var5)))))))) (is-O_TNode (readHeap var7 var5))) (is-O_TNode (readHeap var7 var5))) (= var2 0)) (not (= nullAddr var3)))) (inv_main29 var1 var3 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (and (inv_main24 var7 var6 var5 var4) (= var3 var5)) (= var0 var6)) (= var1 (writeHeap var7 var5 (O_TNode (TNode (next (getTNode (readHeap var7 var5))) (prev (getTNode (readHeap var7 var5))) var4 (data (getTNode (readHeap var7 var5)))))))) (is-O_TNode (readHeap var7 var5))) (is-O_TNode (readHeap var7 var5))) (= var2 0)) (not (= nullAddr var3)))) (inv_main29 var1 var3 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Int) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (and (inv_main26 var7 var6 var5 var4) (= var3 var5)) (= var0 var6)) (= var1 (writeHeap var7 var5 (O_TNode (TNode (next (getTNode (readHeap var7 var5))) (prev (getTNode (readHeap var7 var5))) var4 (data (getTNode (readHeap var7 var5)))))))) (is-O_TNode (readHeap var7 var5))) (is-O_TNode (readHeap var7 var5))) (= var2 0)) (not (= nullAddr var3)))) (inv_main29 var1 var3 var3))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Heap) (var5 Addr) (var6 Addr) (var7 Addr) (var8 Heap)) (or (not (and (and (and (and (and (and (and (and (inv_main33 var8 var7 var6) (= var0 var2)) (= var5 var3)) (= var1 (writeHeap var4 var2 defObj))) (= var2 var6)) (= var3 var7)) (= var4 (writeHeap var8 (pData (getTNode (readHeap var8 var6))) defObj))) (is-O_TNode (readHeap var8 var6))) (not (= nullAddr var5)))) (inv_main29 var1 var5 var5))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (inv_main36 var6 var5 var4 var3) (= var0 var4)) (= var2 var5)) (= var1 (writeHeap var6 var4 defObj))) (= var3 (pData (getTNode (readHeap var6 var4))))) (is-O_TNode (readHeap var6 var4))) (not (= nullAddr var2)))) (inv_main29 var1 var2 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main7 var2 var1 var0) (is-O_TNode (readHeap var2 var0))) (is-O_TNode (readHeap var2 var0)))) (inv_main8 (writeHeap var2 var0 (O_TNode (TNode (next (getTNode (readHeap var2 var0))) nullAddr (pData (getTNode (readHeap var2 var0))) (data (getTNode (readHeap var2 var0)))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (and (and (and (and (inv_main30 var5 var4 var3) (= var1 var3)) (= var0 var4)) (= var2 (newHeap (allocHeap var5 (O_TData (data (getTNode (readHeap var5 var3)))))))) (is-O_TNode (readHeap var5 var3))) (is-O_TNode (readHeap var2 var1)))) (inv_main36 var2 var0 var1 (newAddr (allocHeap var2 (O_TData (data (getTNode (readHeap var2 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (and (and (and (and (inv_main22 var5 var4 var3) (= var1 var3)) (= var0 var4)) (= var2 (newHeap (allocHeap var5 (O_TData (data (getTNode (readHeap var5 var3)))))))) (is-O_TNode (readHeap var5 var3))) (is-O_TNode (readHeap var2 var1)))) (inv_main26 var2 var0 var1 (newAddr (allocHeap var2 (O_TData (data (getTNode (readHeap var2 var1))))))))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 TNode) (var7 Heap) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main11 var12 var11 var10 var9) (= var4 var10)) (= var0 var11)) (= var7 (writeHeap var12 var10 (O_TNode (TNode (next (getTNode (readHeap var12 var10))) (prev (getTNode (readHeap var12 var10))) var9 (data (getTNode (readHeap var12 var10)))))))) (is-O_TNode (readHeap var12 var10))) (is-O_TNode (readHeap var12 var10))) (not (= var1 0))) (= var2 (newAddr (allocHeap var7 (O_TNode var6))))) (= var3 var4)) (= var5 var4)) (= var8 (newHeap (allocHeap var7 (O_TNode var6)))))) (inv_main16 var8 var5 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 TNode) (var7 Heap) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main24 var12 var11 var10 var9) (= var4 var10)) (= var0 var11)) (= var7 (writeHeap var12 var10 (O_TNode (TNode (next (getTNode (readHeap var12 var10))) (prev (getTNode (readHeap var12 var10))) var9 (data (getTNode (readHeap var12 var10)))))))) (is-O_TNode (readHeap var12 var10))) (is-O_TNode (readHeap var12 var10))) (not (= var1 0))) (= var2 (newAddr (allocHeap var7 (O_TNode var6))))) (= var3 var4)) (= var5 var4)) (= var8 (newHeap (allocHeap var7 (O_TNode var6)))))) (inv_main16 var8 var5 var2))))
(assert (forall ((var0 Addr) (var1 Int) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 TNode) (var7 Heap) (var8 Heap) (var9 Addr) (var10 Addr) (var11 Addr) (var12 Heap)) (or (not (and (and (and (and (and (and (and (and (and (and (inv_main26 var12 var11 var10 var9) (= var4 var10)) (= var0 var11)) (= var7 (writeHeap var12 var10 (O_TNode (TNode (next (getTNode (readHeap var12 var10))) (prev (getTNode (readHeap var12 var10))) var9 (data (getTNode (readHeap var12 var10)))))))) (is-O_TNode (readHeap var12 var10))) (is-O_TNode (readHeap var12 var10))) (not (= var1 0))) (= var2 (newAddr (allocHeap var7 (O_TNode var6))))) (= var3 var4)) (= var5 var4)) (= var8 (newHeap (allocHeap var7 (O_TNode var6)))))) (inv_main16 var8 var5 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main16 var2 var1 var0) (is-O_TNode (readHeap var2 var0))) (is-O_TNode (readHeap var2 var0)))) (inv_main18 (writeHeap var2 var0 (O_TNode (TNode var1 (prev (getTNode (readHeap var2 var0))) (pData (getTNode (readHeap var2 var0))) (data (getTNode (readHeap var2 var0)))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Heap) (var2 Addr) (var3 Addr) (var4 Addr) (var5 Addr) (var6 Addr) (var7 TNode) (var8 Heap) (var9 Heap) (var10 Heap)) (or (not (and (and (and (and (and (and (and (and (and (inv_main2 var10) (= var0 nullAddr)) (= var1 var10)) (= var3 nullAddr)) (= var5 var0)) (= var8 var1)) (= var2 (newAddr (allocHeap var8 (O_TNode var7))))) (= var4 var3)) (= var6 var5)) (= var9 (newHeap (allocHeap var8 (O_TNode var7)))))) (inv_main5 var9 var6 var2))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (or (not (and (and (inv_main36 var3 var2 var1 var0) (not (= var0 (pData (getTNode (readHeap var3 var1)))))) (is-O_TNode (readHeap var3 var1)))) (inv_main33 var3 var2 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (inv_main29 var6 var5 var4) (= var0 (next (getTNode (readHeap var6 var5))))) (= var1 var4)) (= var2 var5)) (= var3 var6)) (is-O_TNode (readHeap var6 var5)))) (inv_main30 var3 var0 var1))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (or (not (and (and (inv_main5 var2 var1 var0) (is-O_TNode (readHeap var2 var0))) (is-O_TNode (readHeap var2 var0)))) (inv_main7 (writeHeap var2 var0 (O_TNode (TNode nullAddr (prev (getTNode (readHeap var2 var0))) (pData (getTNode (readHeap var2 var0))) (data (getTNode (readHeap var2 var0)))))) var1 var0))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Int) (var4 Addr) (var5 Addr) (var6 Heap)) (or (not (and (and (and (and (and (and (inv_main18 var6 var5 var4) (= var0 var4)) (= var1 var5)) (= var2 (writeHeap var6 var5 (O_TNode (TNode (next (getTNode (readHeap var6 var5))) var4 (pData (getTNode (readHeap var6 var5))) (data (getTNode (readHeap var6 var5)))))))) (is-O_TNode (readHeap var6 var5))) (is-O_TNode (readHeap var6 var5))) (= var3 0))) (inv_main22 var2 var1 var0))))
(assert (forall ((var0 TNode) (var1 Addr) (var2 Addr) (var3 Heap) (var4 Int) (var5 Addr) (var6 Addr) (var7 Heap)) (or (not (and (and (and (and (and (and (inv_main18 var7 var6 var5) (= var1 var5)) (= var2 var6)) (= var3 (writeHeap var7 var6 (O_TNode (TNode (next (getTNode (readHeap var7 var6))) var5 (pData (getTNode (readHeap var7 var6))) (data (getTNode (readHeap var7 var6)))))))) (is-O_TNode (readHeap var7 var6))) (is-O_TNode (readHeap var7 var6))) (not (= var4 0)))) (inv_main24 (newHeap (allocHeap var3 (O_TNode var0))) var2 var1 (newAddr (allocHeap var3 (O_TNode var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap) (var3 Addr) (var4 Addr) (var5 Heap)) (or (not (and (and (and (and (and (inv_main8 var5 var4 var3) (= var1 var3)) (= var0 var4)) (= var2 (newHeap (allocHeap var5 (O_TData (data (getTNode (readHeap var5 var3)))))))) (is-O_TNode (readHeap var5 var3))) (is-O_TNode (readHeap var2 var1)))) (inv_main11 var2 var0 var1 (newAddr (allocHeap var2 (O_TData (data (getTNode (readHeap var2 var1))))))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main5 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main5 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))) (is-O_TNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main7 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main7 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))) (is-O_TNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main8 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main11 var3 var2 var1 var0) (not (is-O_TNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main11 var3 var2 var1 var0) (not (is-O_TNode (readHeap var3 var1)))) (is-O_TNode (readHeap var3 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main16 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main16 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))) (is-O_TNode (readHeap var2 var0))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main18 var2 var1 var0) (not (is-O_TNode (readHeap var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (and (inv_main18 var2 var1 var0) (not (is-O_TNode (readHeap var2 var1)))) (is-O_TNode (readHeap var2 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main24 var3 var2 var1 var0) (not (is-O_TNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main24 var3 var2 var1 var0) (not (is-O_TNode (readHeap var3 var1)))) (is-O_TNode (readHeap var3 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main22 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main26 var3 var2 var1 var0) (not (is-O_TNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (and (inv_main26 var3 var2 var1 var0) (not (is-O_TNode (readHeap var3 var1)))) (is-O_TNode (readHeap var3 var1))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main29 var2 var1 var0) (not (is-O_TNode (readHeap var2 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main30 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Addr) (var3 Heap)) (not (and (inv_main36 var3 var2 var1 var0) (not (is-O_TNode (readHeap var3 var1)))))))
(assert (forall ((var0 Addr) (var1 Addr) (var2 Heap)) (not (and (inv_main33 var2 var1 var0) (not (is-O_TNode (readHeap var2 var0)))))))
(check-sat)
